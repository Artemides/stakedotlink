{
  "address": "0x1D30cfc48caE7dC34b8Eb1AAD5a8130489fCC8e3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_allowanceToken",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_dTokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_dTokenSymbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_feeCurve",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardsPool",
          "type": "address"
        }
      ],
      "name": "AddToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AllowanceStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AllowanceWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "approver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "RedirectApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "approver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "RedirectApprovalRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardsPool",
          "type": "address"
        }
      ],
      "name": "RemoveToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        }
      ],
      "name": "RewardsRedirected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WithdrawRewards",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardsPool",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowanceToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "approveRedirect",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_index",
          "type": "uint16"
        }
      ],
      "name": "currentRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_percentageBorrowed",
          "type": "uint256"
        }
      ],
      "name": "currentRateAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "distributeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "name": "distributeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeCurve",
      "outputs": [
        {
          "internalType": "contract IFeeCurve",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getVestingSchedule",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "startTimestamp",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "durationSeconds",
              "type": "uint64"
            }
          ],
          "internalType": "struct DelegatorPool.VestingSchedule",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "isTokenSupported",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolRouter",
      "outputs": [
        {
          "internalType": "contract IPoolRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "redirectApprovals",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "redirectRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "redirectRewardsFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "redirectedStakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "removeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revokeRedirectApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewardRedirects",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "rewardsAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeCurve",
          "type": "address"
        }
      ],
      "name": "setFeeCurve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolRouter",
          "type": "address"
        }
      ],
      "name": "setPoolRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "staked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supportedTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenBalances",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenPools",
      "outputs": [
        {
          "internalType": "contract IRewardsPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "name": "withdrawRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "withdrawableRewards",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xee2b2308ae04eee799cfb8b48762b15d3dea985114f011f055ea55750a21b729",
  "receipt": {
    "to": null,
    "from": "0x11187eff852069a33d102476b2E8A9cc9167dAde",
    "contractAddress": "0x1D30cfc48caE7dC34b8Eb1AAD5a8130489fCC8e3",
    "transactionIndex": 0,
    "gasUsed": "2784161",
    "logsBloom": "0x
    "blockHash": "0x1b297a407a459bd61e6afb3973e9beaaa8e14f962887dcc8e8eb6e4f8b768df1",
    "transactionHash": "0xee2b2308ae04eee799cfb8b48762b15d3dea985114f011f055ea55750a21b729",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 989503,
        "transactionHash": "0xee2b2308ae04eee799cfb8b48762b15d3dea985114f011f055ea55750a21b729",
        "address": "0x1D30cfc48caE7dC34b8Eb1AAD5a8130489fCC8e3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000011187eff852069a33d102476b2e8a9cc9167dade"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x1b297a407a459bd61e6afb3973e9beaaa8e14f962887dcc8e8eb6e4f8b768df1"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 989503,
        "transactionHash": "0xee2b2308ae04eee799cfb8b48762b15d3dea985114f011f055ea55750a21b729",
        "address": "0x1D30cfc48caE7dC34b8Eb1AAD5a8130489fCC8e3",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000011187eff852069a33d102476b2e8a9cc9167dade"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 1,
        "blockHash": "0x1b297a407a459bd61e6afb3973e9beaaa8e14f962887dcc8e8eb6e4f8b768df1"
      }
    ],
    "blockNumber": 989503,
    "cumulativeGasUsed": "2784161",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xeAF59ece1D1E900E3b3367f22b2E4EE12efaa385",
    "Staked SDL",
    "stSDL",
    "0x270304641EF5F084A97c91442222887E3a02285b"
  ],
  "numDeployments": 1,
  "solcInputHash": "716f7ec369ec5237ed83445c47c46fa6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allowanceToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_dTokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_feeCurve\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardsPool\",\"type\":\"address\"}],\"name\":\"AddToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AllowanceStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AllowanceWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"RedirectApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"RedirectApprovalRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardsPool\",\"type\":\"address\"}],\"name\":\"RemoveToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"}],\"name\":\"RewardsRedirected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WithdrawRewards\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsPool\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowanceToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"approveRedirect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"}],\"name\":\"currentRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentageBorrowed\",\"type\":\"uint256\"}],\"name\":\"currentRateAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"distributeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"distributeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCurve\",\"outputs\":[{\"internalType\":\"contract IFeeCurve\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getVestingSchedule\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"}],\"internalType\":\"struct DelegatorPool.VestingSchedule\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolRouter\",\"outputs\":[{\"internalType\":\"contract IPoolRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"redirectApprovals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"redirectRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"redirectRewardsFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"redirectedStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokeRedirectApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardRedirects\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"rewardsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeCurve\",\"type\":\"address\"}],\"name\":\"setFeeCurve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolRouter\",\"type\":\"address\"}],\"name\":\"setPoolRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"staked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBalances\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenPools\",\"outputs\":[{\"internalType\":\"contract IRewardsPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"withdrawableRewards\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addToken(address,address)\":{\"params\":{\"_rewardsPool\":\"token rewards pool to add*\",\"_token\":\"token to add\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"approveRedirect(address)\":{\"params\":{\"_to\":\"account to approve\"}},\"balanceOf(address)\":{\"params\":{\"_account\":\"account\"},\"returns\":{\"_0\":\"balance accounts balance\"}},\"currentRate(address,uint16)\":{\"params\":{\"_index\":\"the pool index\",\"_token\":\"the token address of the pool\"},\"returns\":{\"_0\":\"current rate*\"}},\"currentRateAt(uint256)\":{\"details\":\"1 ether = 100%, 0.5 ether = 50% etc\",\"params\":{\"_percentageBorrowed\":\"the percentage borrowed for fee calculation\"},\"returns\":{\"_0\":\"current rate*\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"distributeToken(address)\":{\"params\":{\"_token\":\"token address\"}},\"distributeTokens(address[])\":{\"params\":{\"_tokens\":\"list of token addresses\"}},\"getVestingSchedule(address)\":{\"params\":{\"_account\":\"account\"},\"returns\":{\"_0\":\"vestingSchedule account's vesting schedule\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isTokenSupported(address)\":{\"params\":{\"_token\":\"token address\"},\"returns\":{\"_0\":\"is token supported*\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"onTokenTransfer(address,uint256,bytes)\":{\"params\":{\"_sender\":\"of the stake\",\"_value\":\"of the token transfer*\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"redirectRewards(address)\":{\"params\":{\"_to\":\"account to redirect rewards to\"}},\"redirectRewardsFrom(address,address)\":{\"params\":{\"_from\":\"account to redirect rewards for\",\"_to\":\"account to redirect rewards to\"}},\"removeToken(address)\":{\"params\":{\"_token\":\"address of token*\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rewardsAddress(address)\":{\"params\":{\"_account\":\"address to query\"}},\"setFeeCurve(address)\":{\"params\":{\"_feeCurve\":\"interface\"}},\"setPoolRouter(address)\":{\"params\":{\"_poolRouter\":\"pool router address*\"}},\"staked(address)\":{\"details\":\"required by RewardsPoolController\",\"returns\":{\"_0\":\"account's staked amount\"}},\"supportedTokens()\":{\"returns\":{\"_0\":\"list of token configs*\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"tokenBalances()\":{\"returns\":{\"_0\":\"list of tokens with a list of token balances*\"}},\"totalStaked()\":{\"details\":\"required by RewardsPoolController\",\"returns\":{\"_0\":\"total staked amount\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawAllowance(uint256)\":{\"params\":{\"_amount\":\"amount to withdraw*\"}},\"withdrawRewards(address[])\":{\"params\":{\"_tokens\":\"list of token addresses to withdraw rewards from*\"}},\"withdrawableRewards(address)\":{\"params\":{\"_account\":\"account to return reward amounts for\"},\"returns\":{\"_0\":\"list of withdrawable reward amounts*\"}}},\"title\":\"Delegator Pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToken(address,address)\":{\"notice\":\"adds a new token\"},\"approveRedirect(address)\":{\"notice\":\"approve a reward redirect\"},\"balanceOf(address)\":{\"notice\":\"returns an accounts balance minus the amount of tokens that are currently vesting\"},\"currentRate(address,uint16)\":{\"notice\":\"returns the current fee rate based on the % of allowance token borrowed\"},\"currentRateAt(uint256)\":{\"notice\":\"returns the current fee rate based on a specified percentage\"},\"distributeToken(address)\":{\"notice\":\"distributes a token balance to its equivalent reward pool\"},\"distributeTokens(address[])\":{\"notice\":\"distributes token balances to their equivalent reward pools\"},\"getVestingSchedule(address)\":{\"notice\":\"returns the vesting schedule of a given account\"},\"isTokenSupported(address)\":{\"notice\":\"returns true/false to whether a given token is supported\"},\"onTokenTransfer(address,uint256,bytes)\":{\"notice\":\"ERC677 implementation to stake allowance or distribute rewards\"},\"redirectRewards(address)\":{\"notice\":\"redirect rewards to a specific address. Supports multiple addresses redirecting to the same previousRedirect. To stop redirecting rewards, set _to as the current wallet.\"},\"redirectRewardsFrom(address,address)\":{\"notice\":\"redirect rewards for an account with approval\"},\"removeToken(address)\":{\"notice\":\"removes a supported token\"},\"revokeRedirectApproval()\":{\"notice\":\"revoke a redirect approval\"},\"rewardsAddress(address)\":{\"notice\":\"returns the address that receives rewards for an account\"},\"setFeeCurve(address)\":{\"notice\":\"sets the fee curve interface\"},\"setPoolRouter(address)\":{\"notice\":\"sets the pool router address\"},\"staked(address)\":{\"notice\":\"returns an account's staked amount for use by reward pools controlled by this contract. Overridden as the the staked amount needs to include any vesting tokens.\"},\"supportedTokens()\":{\"notice\":\"returns a list of configs for all supported tokens\"},\"tokenBalances()\":{\"notice\":\"get all token balances of supported tokens within the controller\"},\"totalStaked()\":{\"notice\":\"returns the total staked amount for use by reward pools controlled by this contract\"},\"withdrawAllowance(uint256)\":{\"notice\":\"withdraws lent allowance tokens if there are enough available\"},\"withdrawRewards(address[])\":{\"notice\":\"withdraws an account's earned rewards for a list of tokens\"},\"withdrawableRewards(address)\":{\"notice\":\"returns a list of withdrawable rewards for an account\"}},\"notice\":\"Allows users to stake allowance tokens, stakers receive a percentage of earned rewards\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/DelegatorPool.sol\":\"DelegatorPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/core/DelegatorPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nimport \\\"./base/RewardsPoolController.sol\\\";\\nimport \\\"./interfaces/IPoolRouter.sol\\\";\\nimport \\\"./interfaces/IFeeCurve.sol\\\";\\n\\n/**\\n * @title Delegator Pool\\n * @notice Allows users to stake allowance tokens, stakers receive a percentage of earned rewards\\n */\\ncontract DelegatorPool is RewardsPoolController {\\n    using SafeERC20 for IERC20;\\n\\n    struct VestingSchedule {\\n        uint totalAmount;\\n        uint64 startTimestamp;\\n        uint64 durationSeconds;\\n    }\\n\\n    IERC20 public immutable allowanceToken;\\n    IPoolRouter public poolRouter;\\n    IFeeCurve public feeCurve;\\n\\n    mapping(address => VestingSchedule) private vestingSchedules;\\n\\n    event AllowanceStaked(address indexed user, uint amount);\\n    event AllowanceWithdrawn(address indexed user, uint amount);\\n\\n    constructor(\\n        address _allowanceToken,\\n        string memory _dTokenName,\\n        string memory _dTokenSymbol,\\n        address _feeCurve\\n    ) RewardsPoolController(_dTokenName, _dTokenSymbol) {\\n        allowanceToken = IERC20(_allowanceToken);\\n        feeCurve = IFeeCurve(_feeCurve);\\n    }\\n\\n    /**\\n     * @notice ERC677 implementation to stake allowance or distribute rewards\\n     * @param _sender of the stake\\n     * @param _value of the token transfer\\n     **/\\n    function onTokenTransfer(\\n        address _sender,\\n        uint _value,\\n        bytes calldata _calldata\\n    ) external override {\\n        require(\\n            msg.sender == address(allowanceToken) || isTokenSupported(msg.sender),\\n            \\\"Sender must be allowance or rewards token\\\"\\n        );\\n\\n        if (msg.sender == address(allowanceToken)) {\\n            _stakeAllowance(_sender, _value);\\n\\n            if (_calldata.length > 1) {\\n                (uint64 startTimestamp, uint64 durationSeconds) = abi.decode(_calldata, (uint64, uint64));\\n                _setVestingSchedule(_sender, _value, startTimestamp, durationSeconds);\\n            }\\n        } else {\\n            distributeToken(msg.sender);\\n        }\\n    }\\n\\n    /**\\n     * @notice returns an accounts balance minus the amount of tokens that are currently vesting\\n     * @param _account account\\n     * @return balance accounts balance\\n     */\\n    function balanceOf(address _account) public view virtual override(ERC20, IERC20) returns (uint256) {\\n        return super.balanceOf(_account) - (vestingSchedules[_account].totalAmount - _vestedTokens(_account));\\n    }\\n\\n    /**\\n     * @notice receipt tokens within the delegator pool cannot be transferred\\n     */\\n    function _transfer(\\n        address,\\n        address,\\n        uint256\\n    ) internal virtual override {\\n        revert(\\\"Token cannot be transferred\\\");\\n    }\\n\\n    /**\\n     * @notice returns an account's staked amount for use by reward pools\\n     * controlled by this contract. Overridden as the the staked amount needs to include any vesting tokens.\\n     * @dev required by RewardsPoolController\\n     * @return account's staked amount\\n     */\\n    function staked(address _account) external view override returns (uint) {\\n        return (rewardRedirects[_account] == address(0) ? super.balanceOf(_account) : 0) + redirectedStakes[_account];\\n    }\\n\\n    /**\\n     * @notice returns the current fee rate based on the % of allowance token borrowed\\n     * @param _token the token address of the pool\\n     * @param _index the pool index\\n     * @return current rate\\n     **/\\n    function currentRate(address _token, uint16 _index) public view returns (uint) {\\n        return feeCurve.currentRate(poolRouter.poolUtilisation(_token, _index));\\n    }\\n\\n    /**\\n     * @notice returns the current fee rate based on a specified percentage\\n     * @dev 1 ether = 100%, 0.5 ether = 50% etc\\n     * @param _percentageBorrowed the percentage borrowed for fee calculation\\n     * @return current rate\\n     **/\\n    function currentRateAt(uint _percentageBorrowed) public view returns (uint) {\\n        return feeCurve.currentRate(_percentageBorrowed);\\n    }\\n\\n    /**\\n     * @notice withdraws lent allowance tokens if there are enough available\\n     * @param _amount amount to withdraw\\n     **/\\n    function withdrawAllowance(uint _amount) external updateRewards(msg.sender) {\\n        require(!poolRouter.isReservedMode(), \\\"Allowance cannot be withdrawn when pools are reserved\\\");\\n        require(balanceOf(msg.sender) >= _amount, \\\"Withdrawal amount exceeds balance\\\");\\n\\n        uint toWithdraw = _amount;\\n        if (_amount == type(uint).max) {\\n            toWithdraw = balanceOf(msg.sender);\\n        }\\n\\n        VestingSchedule memory vestingSchedule = vestingSchedules[msg.sender];\\n        if (\\n            vestingSchedule.startTimestamp != 0 &&\\n            block.timestamp > vestingSchedule.startTimestamp + vestingSchedule.durationSeconds\\n        ) {\\n            delete vestingSchedules[msg.sender];\\n        }\\n\\n        _burn(msg.sender, toWithdraw);\\n        allowanceToken.safeTransfer(msg.sender, toWithdraw);\\n\\n        emit AllowanceWithdrawn(msg.sender, toWithdraw);\\n    }\\n\\n    /**\\n     * @notice returns the vesting schedule of a given account\\n     * @param _account account\\n     * @return vestingSchedule account's vesting schedule\\n     */\\n    function getVestingSchedule(address _account) external view returns (VestingSchedule memory) {\\n        return vestingSchedules[_account];\\n    }\\n\\n    /**\\n     * @notice sets the fee curve interface\\n     * @param _feeCurve interface\\n     */\\n    function setFeeCurve(address _feeCurve) external onlyOwner {\\n        require(_feeCurve != address(0), \\\"Invalid fee curve address\\\");\\n        feeCurve = IFeeCurve(_feeCurve);\\n    }\\n\\n    /**\\n     * @notice sets the pool router address\\n     * @param _poolRouter pool router address\\n     **/\\n    function setPoolRouter(address _poolRouter) external onlyOwner {\\n        require(address(poolRouter) == address(0), \\\"pool router already set\\\");\\n        poolRouter = IPoolRouter(_poolRouter);\\n    }\\n\\n    /**\\n     * @notice stakes allowance tokens\\n     * @param _amount amount to stake\\n     **/\\n    function _stakeAllowance(address _sender, uint _amount) private updateRewards(_sender) {\\n        _mint(_sender, _amount);\\n        emit AllowanceStaked(_sender, _amount);\\n    }\\n\\n    /**\\n     * @notice sets an account's derivative token vesting schedule. If a schedule already exists:\\n     * - If the new start timestamp is after the previous schedule, the schedule is overwritten and any remaining vesting tokens go into the new schedule\\n     * - Will release any tokens that have vested but not transferred\\n     * - If the start timestamp is before the current schedule, the current schedule is used\\n     */\\n    function _setVestingSchedule(\\n        address _account,\\n        uint _amount,\\n        uint64 _startTimestamp,\\n        uint64 _durationSeconds\\n    ) internal {\\n        require(_startTimestamp > 0, \\\"Start timestamp cannot be 0\\\");\\n        require(_durationSeconds > 0, \\\"Seconds duration cannot be 0\\\");\\n\\n        VestingSchedule storage vestingSchedule = vestingSchedules[_account];\\n        if (_startTimestamp > vestingSchedule.startTimestamp) {\\n            if (vestingSchedule.startTimestamp != 0) {\\n                vestingSchedule.totalAmount -= _vestedTokens(_account);\\n            }\\n            vestingSchedule.startTimestamp = _startTimestamp;\\n            vestingSchedule.durationSeconds = _durationSeconds;\\n        }\\n        vestingSchedule.totalAmount += _amount;\\n    }\\n\\n    /**\\n     * @notice Returns the amount of tokens that are currently vested for an account\\n     */\\n    function _vestedTokens(address _account) internal view virtual returns (uint256) {\\n        VestingSchedule memory vestingSchedule = vestingSchedules[_account];\\n        uint totalAmount = vestingSchedule.totalAmount;\\n        uint64 startTimestamp = vestingSchedule.startTimestamp;\\n        uint64 timestamp = uint64(block.timestamp);\\n\\n        if (totalAmount == 0 || timestamp < startTimestamp) {\\n            return 0;\\n        } else if (timestamp > startTimestamp + vestingSchedule.durationSeconds) {\\n            return totalAmount;\\n        } else {\\n            return ((totalAmount * (timestamp - startTimestamp)) / vestingSchedule.durationSeconds);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0d82673f0165d61482f0b36850e90414ca1ffe23e8679d901232ecc7a8c1368e\",\"license\":\"UNLICENSED\"},\"contracts/core/RewardsPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nimport \\\"./interfaces/IRewardsPoolController.sol\\\";\\n\\n/**\\n * @title RewardsPool\\n * @notice Handles reward distribution for a single asset\\n * @dev rewards can only be positive (user balances can only increase)\\n */\\ncontract RewardsPool {\\n    using SafeERC20 for IERC677;\\n\\n    IERC677 public immutable token;\\n    IRewardsPoolController public immutable controller;\\n\\n    uint public rewardPerToken;\\n    uint public totalRewards;\\n    mapping(address => uint) public userRewardPerTokenPaid;\\n    mapping(address => uint) public userRewards;\\n\\n    event Withdraw(address indexed account, uint amount);\\n    event DistributeRewards(address indexed sender, uint256 amountStaked, uint256 amount);\\n\\n    constructor(address _controller, address _token) {\\n        controller = IRewardsPoolController(_controller);\\n        token = IERC677(_token);\\n    }\\n\\n    /**\\n     * @notice returns an account's total withdrawable rewards (principal balance + newly earned rewards)\\n     * @param _account account to return rewards for\\n     * @return account's total unclaimed rewards\\n     **/\\n    function withdrawableRewards(address _account) public view virtual returns (uint) {\\n        return\\n            (controller.staked(_account) * (rewardPerToken - userRewardPerTokenPaid[_account])) /\\n            1e18 +\\n            userRewards[_account];\\n    }\\n\\n    /**\\n     * @notice withdraws an account's earned rewards\\n     **/\\n    function withdraw() external {\\n        _withdraw(msg.sender);\\n    }\\n\\n    /**\\n     * @notice withdraws an account's earned rewards\\n     * @dev used by PoolOwners\\n     * @param _account account to withdraw for\\n     **/\\n    function withdraw(address _account) external {\\n        require(msg.sender == address(controller), \\\"Controller only\\\");\\n        _withdraw(_account);\\n    }\\n\\n    /**\\n     * @notice ERC677 implementation that proxies reward distribution\\n     **/\\n    function onTokenTransfer(\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external {\\n        require(msg.sender == address(token), \\\"Only callable by token\\\");\\n        distributeRewards();\\n    }\\n\\n    /**\\n     * @notice distributes new rewards that have been deposited\\n     **/\\n    function distributeRewards() public virtual {\\n        require(controller.totalStaked() > 0, \\\"Cannot distribute when nothing is staked\\\");\\n        uint256 toDistribute = token.balanceOf(address(this)) - totalRewards;\\n        totalRewards += toDistribute;\\n        _updateRewardPerToken(toDistribute);\\n        emit DistributeRewards(msg.sender, controller.totalStaked(), toDistribute);\\n    }\\n\\n    /**\\n     * @notice updates an account's principal reward balance\\n     * @param _account account to update for\\n     **/\\n    function updateReward(address _account) public virtual {\\n        uint newRewards = withdrawableRewards(_account) - userRewards[_account];\\n        if (newRewards > 0) {\\n            userRewards[_account] += newRewards;\\n        }\\n        userRewardPerTokenPaid[_account] = rewardPerToken;\\n    }\\n\\n    /**\\n     * @notice withdraws rewards for an account\\n     * @param _account account to withdraw for\\n     **/\\n    function _withdraw(address _account) internal virtual {\\n        uint256 toWithdraw = withdrawableRewards(_account);\\n        if (toWithdraw > 0) {\\n            updateReward(_account);\\n            userRewards[_account] -= toWithdraw;\\n            totalRewards -= toWithdraw;\\n            token.safeTransfer(_account, toWithdraw);\\n            emit Withdraw(_account, toWithdraw);\\n        }\\n    }\\n\\n    /**\\n     * @notice updates rewardPerToken\\n     * @param _reward deposited reward amount\\n     **/\\n    function _updateRewardPerToken(uint _reward) internal {\\n        uint totalStaked = controller.totalStaked();\\n        require(totalStaked > 0, \\\"Staked amount must be > 0\\\");\\n        rewardPerToken += ((_reward * 1e18) / totalStaked);\\n    }\\n}\\n\",\"keccak256\":\"0x9e4fe39abbbb28c16e1ee27610307c1df5cb1edf4485e65b401a66ba9451ede6\",\"license\":\"UNLICENSED\"},\"contracts/core/base/RewardsPoolController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"../interfaces/IRewardsPoolController.sol\\\";\\nimport \\\"../interfaces/IRewardsPool.sol\\\";\\nimport \\\"../RewardsPool.sol\\\";\\nimport \\\"../tokens/base/ERC677.sol\\\";\\n\\n/**\\n * @title Rewards Pool Controller\\n * @notice Acts as a proxy for any number of rewards pools\\n */\\nabstract contract RewardsPoolController is Ownable, IRewardsPoolController, ERC677 {\\n    using SafeERC20 for IERC20;\\n\\n    mapping(address => IRewardsPool) public tokenPools;\\n    address[] private tokens;\\n\\n    mapping(address => address) public rewardRedirects;\\n    mapping(address => uint) public redirectedStakes;\\n    mapping(address => address) public redirectApprovals;\\n\\n    event WithdrawRewards(address indexed account);\\n    event AddToken(address indexed token, address rewardsPool);\\n    event RemoveToken(address indexed token, address rewardsPool);\\n\\n    event RedirectApproval(address indexed approver, address indexed to);\\n    event RedirectApprovalRevoked(address indexed approver, address indexed from);\\n    event RewardsRedirected(address indexed from, address indexed to, address indexed by);\\n\\n    modifier updateRewards(address _account) {\\n        _updateRewards(_account);\\n        _;\\n    }\\n\\n    constructor(string memory _derivativeTokenName, string memory _derivativeTokenSymbol)\\n        ERC677(_derivativeTokenName, _derivativeTokenSymbol, 0)\\n    {}\\n\\n    /**\\n     * @notice returns a list of configs for all supported tokens\\n     * @return list of token configs\\n     **/\\n    function supportedTokens() external view returns (address[] memory) {\\n        return tokens;\\n    }\\n\\n    /**\\n     * @notice returns true/false to whether a given token is supported\\n     * @param _token token address\\n     * @return is token supported\\n     **/\\n    function isTokenSupported(address _token) public view returns (bool) {\\n        return address(tokenPools[_token]) != address(0) ? true : false;\\n    }\\n\\n    /**\\n     * @notice get all token balances of supported tokens within the controller\\n     * @return list of tokens with a list of token balances\\n     **/\\n    function tokenBalances() external view returns (address[] memory, uint[] memory) {\\n        uint[] memory balances = new uint[](tokens.length);\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            balances[i] = IERC20(tokens[i]).balanceOf(address(this));\\n        }\\n\\n        return (tokens, balances);\\n    }\\n\\n    function onTokenTransfer(\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external virtual {\\n        if (isTokenSupported(msg.sender)) {\\n            distributeToken(msg.sender);\\n        }\\n    }\\n\\n    /**\\n     * @notice returns an account's staked amount for use by reward pools\\n     * controlled by this contract. If rewards are redirected, it returns the sum of the amount\\n     * staked by all of the accounts that have redirected rewards.\\n     * @dev required by RewardsPoolController\\n     * @return account's staked amount\\n     */\\n    function staked(address _account) external view virtual returns (uint) {\\n        return (rewardRedirects[_account] == address(0) ? balanceOf(_account) : 0) + redirectedStakes[_account];\\n    }\\n\\n    /**\\n     * @notice returns the total staked amount for use by reward pools\\n     * controlled by this contract\\n     * @dev required by RewardsPoolController\\n     * @return total staked amount\\n     */\\n    function totalStaked() external view virtual returns (uint) {\\n        return totalSupply();\\n    }\\n\\n    /**\\n     * @notice returns the address that receives rewards for an account\\n     * @param _account address to query\\n     */\\n    function rewardsAddress(address _account) external view returns (address) {\\n        return rewardRedirects[_account] != address(0) ? rewardRedirects[_account] : _account;\\n    }\\n\\n    /**\\n     * @dev updates the rewards of the sender and previousRedirect, also updates redirected staked amounts\\n     * if rewards are redirected\\n     * @param _from account sending from\\n     * @param _to account sending to\\n     * @param _amount amount being sent\\n     */\\n    function _transfer(\\n        address _from,\\n        address _to,\\n        uint256 _amount\\n    ) internal virtual override updateRewards(_from) updateRewards(_to) {\\n        address rewardRedirectFrom = rewardRedirects[_from];\\n        address rewardRedirectTo = rewardRedirects[_to];\\n\\n        if (rewardRedirectFrom != address(0)) {\\n            _updateRewards(rewardRedirectFrom);\\n            redirectedStakes[rewardRedirectFrom] -= _amount;\\n        }\\n        if (rewardRedirectTo != address(0)) {\\n            _updateRewards(rewardRedirectTo);\\n            redirectedStakes[rewardRedirectTo] += _amount;\\n        }\\n\\n        super._transfer(_from, _to, _amount);\\n    }\\n\\n    /**\\n     * @notice redirect rewards to a specific address. Supports multiple addresses redirecting to the same previousRedirect.\\n     * To stop redirecting rewards, set _to as the current wallet.\\n     * @param _to account to redirect rewards to\\n     */\\n    function redirectRewards(address _to) external {\\n        _redirectRewards(msg.sender, _to);\\n    }\\n\\n    /**\\n     * @notice redirect rewards for an account with approval\\n     * @param _from account to redirect rewards for\\n     * @param _to account to redirect rewards to\\n     */\\n    function redirectRewardsFrom(address _from, address _to) external {\\n        require(redirectApprovals[_from] == msg.sender, \\\"Approval required to redirect rewards\\\");\\n        delete (redirectApprovals[_from]);\\n        _redirectRewards(_from, _to);\\n    }\\n\\n    /**\\n     * @notice approve a reward redirect\\n     * @param _to account to approve\\n     */\\n    function approveRedirect(address _to) external {\\n        redirectApprovals[msg.sender] = _to;\\n        emit RedirectApproval(msg.sender, _to);\\n    }\\n\\n    /**\\n     * @notice revoke a redirect approval\\n     */\\n    function revokeRedirectApproval() external {\\n        address revokedFrom = redirectApprovals[msg.sender];\\n        delete (redirectApprovals[msg.sender]);\\n        emit RedirectApprovalRevoked(msg.sender, revokedFrom);\\n    }\\n\\n    /**\\n     * @notice distributes token balances to their equivalent reward pools\\n     * @param _tokens list of token addresses\\n     */\\n    function distributeTokens(address[] memory _tokens) public {\\n        for (uint i = 0; i < _tokens.length; i++) {\\n            distributeToken(_tokens[i]);\\n        }\\n    }\\n\\n    /**\\n     * @notice distributes a token balance to its equivalent reward pool\\n     * @param _token token address\\n     */\\n    function distributeToken(address _token) public {\\n        require(isTokenSupported(_token), \\\"Token not supported\\\");\\n\\n        IERC20 token = IERC20(_token);\\n        uint balance = token.balanceOf(address(this));\\n        require(balance > 0, \\\"Cannot distribute zero balance\\\");\\n\\n        token.safeTransfer(address(tokenPools[_token]), balance);\\n        tokenPools[_token].distributeRewards();\\n    }\\n\\n    /**\\n     * @notice returns a list of withdrawable rewards for an account\\n     * @param _account account to return reward amounts for\\n     * @return list of withdrawable reward amounts\\n     **/\\n    function withdrawableRewards(address _account) external view returns (uint[] memory) {\\n        uint[] memory withdrawable = new uint[](tokens.length);\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            withdrawable[i] = tokenPools[tokens[i]].withdrawableRewards(_account);\\n        }\\n\\n        return withdrawable;\\n    }\\n\\n    /**\\n     * @notice withdraws an account's earned rewards for a list of tokens\\n     * @param _tokens list of token addresses to withdraw rewards from\\n     **/\\n    function withdrawRewards(address[] memory _tokens) public {\\n        for (uint i = 0; i < _tokens.length; i++) {\\n            tokenPools[_tokens[i]].withdraw(msg.sender);\\n        }\\n        emit WithdrawRewards(msg.sender);\\n    }\\n\\n    /**\\n     * @notice adds a new token\\n     * @param _token token to add\\n     * @param _rewardsPool token rewards pool to add\\n     **/\\n    function addToken(address _token, address _rewardsPool) public onlyOwner {\\n        require(!isTokenSupported(_token), \\\"Token is already supported\\\");\\n\\n        tokenPools[_token] = IRewardsPool(_rewardsPool);\\n        tokens.push(_token);\\n\\n        if (IERC20(_token).balanceOf(address(this)) > 0) {\\n            distributeToken(_token);\\n        }\\n\\n        emit AddToken(_token, _rewardsPool);\\n    }\\n\\n    /**\\n     * @notice removes a supported token\\n     * @param _token address of token\\n     **/\\n    function removeToken(address _token) external onlyOwner {\\n        require(isTokenSupported(_token), \\\"Token is not supported\\\");\\n\\n        IRewardsPool rewardsPool = tokenPools[_token];\\n        delete (tokenPools[_token]);\\n        for (uint i = 0; i < tokens.length; i++) {\\n            if (tokens[i] == _token) {\\n                tokens[i] = tokens[tokens.length - 1];\\n                tokens.pop();\\n                break;\\n            }\\n        }\\n\\n        emit RemoveToken(_token, address(rewardsPool));\\n    }\\n\\n    /**\\n     * @notice redirect rewards to a specific account from an account\\n     * @param _from account that's redirecting rewards\\n     * @param _to account to redirect rewards to\\n     */\\n    function _redirectRewards(address _from, address _to) internal updateRewards(_from) updateRewards(_to) {\\n        require(_to != address(0), \\\"Cannot burn rewards\\\");\\n        require(rewardRedirects[_from] != _to, \\\"Cannot redirect rewards to the same address\\\");\\n        require(rewardRedirects[_from] == address(0) ? (_from != _to) : true, \\\"Cannot redirect to self\\\");\\n\\n        uint balanceFrom = balanceOf(_from);\\n        require(balanceFrom > 0, \\\"A balance is required to redirect rewards\\\");\\n\\n        address previousRedirect = rewardRedirects[_from];\\n        if (previousRedirect != address(0)) {\\n            _updateRewards(previousRedirect);\\n            redirectedStakes[previousRedirect] -= balanceFrom;\\n        }\\n\\n        if (_to == _from) {\\n            delete (rewardRedirects[_from]);\\n        } else {\\n            rewardRedirects[_from] = _to;\\n            redirectedStakes[_to] += balanceFrom;\\n        }\\n\\n        emit RewardsRedirected(_from, _to, msg.sender);\\n    }\\n\\n    /**\\n     * @dev triggers a reward update for a given account\\n     * @param _account account to update rewards for\\n     */\\n    function _updateRewards(address _account) internal {\\n        for (uint i = 0; i < tokens.length; i++) {\\n            tokenPools[tokens[i]].updateReward(_account);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x10ddb25698af01794cfd32207c613d68f7a99f12494c3bf9d58b4d64ef79c2e3\",\"license\":\"UNLICENSED\"},\"contracts/core/interfaces/IERC677.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC677 is IERC20 {\\n    function transferAndCall(\\n        address _to,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0x85fb796082bc45f2eb85a84af73983fdfefed6ff9acbc936373d45360a5973cf\",\"license\":\"UNLICENSED\"},\"contracts/core/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\ninterface IERC677Receiver {\\n    function onTokenTransfer(\\n        address _sender,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f02ee4c32eb96a3f6d6d16cc8b90f48b971d2b3ad99afc3bd3c6d0789fa3d66\",\"license\":\"UNLICENSED\"},\"contracts/core/interfaces/IFeeCurve.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\ninterface IFeeCurve {\\n    function currentRate(uint _percentageBorrowed) external view returns (uint);\\n}\\n\",\"keccak256\":\"0x96049d984725ddba37f7d00bc91d581dc738f2b15e57044336f3ea3111f819db\",\"license\":\"UNLICENSED\"},\"contracts/core/interfaces/IPoolRouter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\ninterface IPoolRouter {\\n    function isReservedMode() external view returns (bool);\\n\\n    function getReservedMultiplier() external view returns (uint);\\n\\n    function poolUtilisation(address _token, uint16 _index) external view returns (uint);\\n}\\n\",\"keccak256\":\"0xecdab5e2ffbb58858b991ada3937381a8c95fc7ab663b38a625762e4d389b531\",\"license\":\"UNLICENSED\"},\"contracts/core/interfaces/IRewardsPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\ninterface IRewardsPool {\\n    function updateReward(address _account) external;\\n\\n    function withdraw(address _account) external;\\n\\n    function distributeRewards() external;\\n\\n    function withdrawableRewards(address _account) external view returns (uint);\\n}\\n\",\"keccak256\":\"0x0c4a87c4a4f6007ca4648bbaa3fe0f88fcaee3e54d52b73c4994763969bf5d15\",\"license\":\"UNLICENSED\"},\"contracts/core/interfaces/IRewardsPoolController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"./IERC677.sol\\\";\\n\\ninterface IRewardsPoolController {\\n    /**\\n     * @notice returns an account's stake balance for use by reward pools\\n     * controlled by this contract\\n     * @return account's balance\\n     */\\n    function staked(address _account) external view returns (uint);\\n\\n    /**\\n     * @notice returns the total staked amount for use by reward pools\\n     * controlled by this contract\\n     * @return total staked amount\\n     */\\n    function totalStaked() external view returns (uint);\\n\\n    /**\\n     * @notice adds a new token\\n     * @param _token token to add\\n     * @param _rewardsPool token rewards pool to add\\n     **/\\n    function addToken(address _token, address _rewardsPool) external;\\n}\\n\",\"keccak256\":\"0x1f903f56807f5cbb766a39eae51b30832ee28e3d6de8b6db25f712dc2768e7eb\",\"license\":\"UNLICENSED\"},\"contracts/core/tokens/base/ERC677.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\nimport \\\"../../interfaces/IERC677Receiver.sol\\\";\\nimport \\\"../../interfaces/IERC677.sol\\\";\\n\\ncontract ERC677 is IERC677, ERC20 {\\n    constructor(\\n        string memory _tokenName,\\n        string memory _tokenSymbol,\\n        uint _totalSupply\\n    ) ERC20(_tokenName, _tokenSymbol) {\\n        _mint(msg.sender, _totalSupply * (10**uint256(decimals())));\\n    }\\n\\n    function transferAndCall(\\n        address _to,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) public override returns (bool) {\\n        super.transfer(_to, _value);\\n        if (isContract(_to)) {\\n            contractFallback(msg.sender, _to, _value, _data);\\n        }\\n        return true;\\n    }\\n\\n    function contractFallback(\\n        address _sender,\\n        address _to,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) internal {\\n        IERC677Receiver receiver = IERC677Receiver(_to);\\n        receiver.onTokenTransfer(_sender, _value, _data);\\n    }\\n\\n    function isContract(address _addr) internal view returns (bool hasCode) {\\n        uint256 length;\\n        assembly {\\n            length := extcodesize(_addr)\\n        }\\n        return length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x999338358bb5a20f980932ecb8ea69d5a53b69fa3e82f757ceedd0fde6d17871\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620035a6380380620035a68339810160408190526200003491620002fc565b82828181600082826200004733620000d0565b60046200005583826200041a565b5060056200006482826200041a565b5050506200009e336200007c6200012060201b60201c565b6200008c9060ff16600a620005fb565b62000098908462000610565b62000125565b505050506001600160a01b0394851660805250600c80546001600160a01b0319169190941617909255506200064d9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b601290565b6001600160a01b038216620001805760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806003600082825462000194919062000632565b90915550506001600160a01b03821660009081526001602052604081208054839290620001c390849062000632565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b80516001600160a01b03811681146200022a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200025757600080fd5b81516001600160401b03808211156200027457620002746200022f565b604051601f8301601f19908116603f011681019082821181831017156200029f576200029f6200022f565b81604052838152602092508683858801011115620002bc57600080fd5b600091505b83821015620002e05785820183015181830184015290820190620002c1565b83821115620002f25760008385830101525b9695505050505050565b600080600080608085870312156200031357600080fd5b6200031e8562000212565b60208601519094506001600160401b03808211156200033c57600080fd5b6200034a8883890162000245565b945060408701519150808211156200036157600080fd5b50620003708782880162000245565b925050620003816060860162000212565b905092959194509250565b600181811c90821680620003a157607f821691505b602082108103620003c257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020d57600081815260208120601f850160051c81016020861015620003f15750805b601f850160051c820191505b818110156200041257828155600101620003fd565b505050505050565b81516001600160401b038111156200043657620004366200022f565b6200044e816200044784546200038c565b84620003c8565b602080601f8311600181146200048657600084156200046d5750858301515b600019600386901b1c1916600185901b17855562000412565b600085815260208120601f198616915b82811015620004b75788860151825594840194600190910190840162000496565b5085821015620004d65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200053d578160001904821115620005215762000521620004e6565b808516156200052f57918102915b93841c939080029062000501565b509250929050565b6000826200055657506001620005f5565b816200056557506000620005f5565b81600181146200057e57600281146200058957620005a9565b6001915050620005f5565b60ff8411156200059d576200059d620004e6565b50506001821b620005f5565b5060208310610133831016604e8410600b8410161715620005ce575081810a620005f5565b620005da8383620004fc565b8060001904821115620005f157620005f1620004e6565b0290505b92915050565b600062000609838362000545565b9392505050565b60008160001904831182151516156200062d576200062d620004e6565b500290565b60008219821115620006485762000648620004e6565b500190565b608051612f286200067e60003960008181610689015281816114b80152818161155001526118400152612f286000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c806375151b631161015c578063a4c0ed36116100ce578063c53b585e11610087578063c53b585e14610669578063d387fd6c1461067c578063d5d67d5114610684578063dd62ed3e146106ab578063ef735f07146106be578063f2fde38b146106d157600080fd5b8063a4c0ed36146105df578063a9059cbb146105f2578063b002249d14610605578063ba650f791461061a578063c3d2c3c11461062d578063c51648811461065657600080fd5b80638da5cb5b116101205780638da5cb5b146104e8578063952db31f146104f957806395d89b411461050c57806398807d84146105145780639f82906314610527578063a457c2d7146105cc57600080fd5b806375151b6314610494578063817b1cd2146104a7578063856695ea146104af57806386d74037146104c257806388951352146104d557600080fd5b80635452b9ba116101f5578063611fae02116101b9578063611fae021461040a578063628a0f551461043357806362d76d06146104535780636b5f83211461046657806370a0823114610479578063715018a61461048c57600080fd5b80635452b9ba1461037d5780635476bd72146103a85780635b0c9391146103bb5780635b45fac4146103ce5780635fa7b584146103f757600080fd5b80630f14b4d6116102475780630f14b4d61461030d57806318160ddd1461032d57806323b872dd14610335578063313ce5671461034857806339509351146103575780634000aea01461036a57600080fd5b806304e4c8641461028457806306fdde03146102aa578063095ea7b3146102bf5780630c8d9cc7146102e25780630e3bc974146102f7575b600080fd5b610297610292366004612928565b6106e4565b6040519081526020015b60405180910390f35b6102b26107d0565b6040516102a19190612992565b6102d26102cd3660046129c5565b610862565b60405190151581526020016102a1565b6102f56102f03660046129ef565b61087a565b005b6102ff610902565b6040516102a1929190612a7e565b61032061031b3660046129ef565b610a7d565b6040516102a19190612aac565b600354610297565b6102d2610343366004612abf565b610baf565b604051601281526020016102a1565b6102d26103653660046129c5565b610bd3565b6102d2610378366004612afb565b610bf5565b600b54610390906001600160a01b031681565b6040516001600160a01b0390911681526020016102a1565b6102f56103b6366004612b81565b610c16565b6102f56103c93660046129ef565b610d8b565b6103906103dc3660046129ef565b6008602052600090815260409020546001600160a01b031681565b6102f56104053660046129ef565b610de2565b6103906104183660046129ef565b600a602052600090815260409020546001600160a01b031681565b6102976104413660046129ef565b60096020526000908152604090205481565b6102f5610461366004612bca565b610fa9565b610297610474366004612c8e565b611086565b6102976104873660046129ef565b6110fa565b6102f561114b565b6102d26104a23660046129ef565b61115f565b61029761118f565b600c54610390906001600160a01b031681565b6102f56104d03660046129ef565b61119f565b6102f56104e3366004612bca565b61133f565b6000546001600160a01b0316610390565b6103906105073660046129ef565b611383565b6102b26113c9565b6102976105223660046129ef565b6113d8565b6105996105353660046129ef565b6040805160608082018352600080835260208084018290529284018190526001600160a01b03949094168452600d8252928290208251938401835280548452600101546001600160401b0380821692850192909252600160401b9004169082015290565b60408051825181526020808401516001600160401b039081169183019190915292820151909216908201526060016102a1565b6102d26105da3660046129c5565b611432565b6102f56105ed366004612afb565b6114ad565b6102d26106003660046129c5565b6115bf565b61060d6115cd565b6040516102a19190612ca7565b6102f5610628366004612c8e565b61162e565b61039061063b3660046129ef565b6006602052600090815260409020546001600160a01b031681565b6102f56106643660046129ef565b6118a2565b6102f56106773660046129ef565b611922565b6102f561192f565b6103907f000000000000000000000000000000000000000000000000000000000000000081565b6102976106b9366004612b81565b611988565b6102f56106cc366004612b81565b6119b3565b6102f56106df3660046129ef565b611a5a565b600c54600b546040516319dc8ba760e31b81526001600160a01b03858116600483015261ffff8516602483015260009381169263246f938f9291169063cee45d3890604401602060405180830381865afa158015610746573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076a9190612cba565b6040518263ffffffff1660e01b815260040161078891815260200190565b602060405180830381865afa1580156107a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c99190612cba565b9392505050565b6060600480546107df90612cd3565b80601f016020809104026020016040519081016040528092919081815260200182805461080b90612cd3565b80156108585780601f1061082d57610100808354040283529160200191610858565b820191906000526020600020905b81548152906001019060200180831161083b57829003601f168201915b5050505050905090565b600033610870818585611ad0565b5060019392505050565b610882611bf4565b600b546001600160a01b0316156108e05760405162461bcd60e51b815260206004820152601760248201527f706f6f6c20726f7574657220616c72656164792073657400000000000000000060448201526064015b60405180910390fd5b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b60608060006007805490506001600160401b0381111561092457610924612bb4565b60405190808252806020026020018201604052801561094d578160200160208202803683370190505b50905060005b600754811015610a14576007818154811061097057610970612d0d565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e59190612cba565b8282815181106109f7576109f7612d0d565b602090810291909101015280610a0c81612d39565b915050610953565b5060078181805480602002602001604051908101604052809291908181526020018280548015610a6d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a4f575b5050505050915092509250509091565b6007546060906000906001600160401b03811115610a9d57610a9d612bb4565b604051908082528060200260200182016040528015610ac6578160200160208202803683370190505b50905060005b600754811015610ba8576006600060078381548110610aed57610aed612d0d565b6000918252602080832091909101546001600160a01b039081168452908301939093526040918201902054905163078a5a6b60e11b81528683166004820152911690630f14b4d690602401602060405180830381865afa158015610b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b799190612cba565b828281518110610b8b57610b8b612d0d565b602090810291909101015280610ba081612d39565b915050610acc565b5092915050565b600033610bbd858285611c4e565b610bc8858585611cc2565b506001949350505050565b600033610870818585610be68383611988565b610bf09190612d52565b611ad0565b6000610c0185856115bf565b50843b15610bc857610bc83386868686611d0a565b610c1e611bf4565b610c278261115f565b15610c745760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e20697320616c726561647920737570706f7274656400000000000060448201526064016108d7565b6001600160a01b0382811660008181526006602052604080822080549486166001600160a01b0319958616179055600780546001810182559083527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688018054909416831790935591516370a0823160e01b81523060048201526370a0823190602401602060405180830381865afa158015610d13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d379190612cba565b1115610d4657610d468261119f565b6040516001600160a01b0382811682528316907fdbf34b45b47a653cf4940cccbec765f72d4d63de3237306905bfc0ee28832362906020015b60405180910390a25050565b336000818152600a602052604080822080546001600160a01b0319166001600160a01b03861690811790915590519092917fbc2ae327210da6d1f0946518a140d99a46f3a238ea185f565875ebfe507eb99691a350565b610dea611bf4565b610df38161115f565b610e385760405162461bcd60e51b8152602060048201526016602482015275151bdad95b881a5cc81b9bdd081cdd5c1c1bdc9d195960521b60448201526064016108d7565b6001600160a01b03808216600090815260066020526040812080546001600160a01b03198116909155909116905b600754811015610f6b57826001600160a01b031660078281548110610e8d57610e8d612d0d565b6000918252602090912001546001600160a01b031603610f595760078054610eb790600190612d6a565b81548110610ec757610ec7612d0d565b600091825260209091200154600780546001600160a01b039092169183908110610ef357610ef3612d0d565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506007805480610f3257610f32612d81565b600082815260209020810160001990810180546001600160a01b0319169055019055610f6b565b80610f6381612d39565b915050610e66565b506040516001600160a01b0382811682528316907f39dcd754ec63af4b82c4c569ff1b6b4e55a8038e6545844747e54f2f2d4e8e5090602001610d7f565b60005b81518110156110575760066000838381518110610fcb57610fcb612d0d565b6020908102919091018101516001600160a01b0390811683529082019290925260409081016000205490516351cff8d960e01b81523360048201529116906351cff8d990602401600060405180830381600087803b15801561102c57600080fd5b505af1158015611040573d6000803e3d6000fd5b50505050808061104f90612d39565b915050610fac565b5060405133907feeab3fd62be4cb59cbdc42d5b0f676a3597ff387b9a85e62330cc17c2a3603db90600090a250565b600c5460405163246f938f60e01b8152600481018390526000916001600160a01b03169063246f938f90602401602060405180830381865afa1580156110d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f49190612cba565b92915050565b600061110582611d78565b6001600160a01b0383166000908152600d60205260409020546111289190612d6a565b6001600160a01b0383166000908152600160205260409020546110f49190612d6a565b611153611bf4565b61115d6000611e6a565b565b6001600160a01b038181166000908152600660205260408120549091166111875760006110f4565b600192915050565b600061119a60035490565b905090565b6111a88161115f565b6111ea5760405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b60448201526064016108d7565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611233573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112579190612cba565b9050600081116112a95760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742064697374726962757465207a65726f2062616c616e6365000060448201526064016108d7565b6001600160a01b038084166000908152600660205260409020546112d291848116911683611eba565b6001600160a01b038084166000908152600660205260408082205481516306f4a2cd60e41b81529151931692636f4a2cd09260048084019391929182900301818387803b15801561132257600080fd5b505af1158015611336573d6000803e3d6000fd5b50505050505050565b60005b815181101561137f5761136d82828151811061136057611360612d0d565b602002602001015161119f565b8061137781612d39565b915050611342565b5050565b6001600160a01b038181166000908152600860205260408120549091166113aa57816110f4565b506001600160a01b039081166000908152600860205260409020541690565b6060600580546107df90612cd3565b6001600160a01b03808216600090815260096020908152604080832054600890925282205491929091161561140e576000611428565b6001600160a01b0383166000908152600160205260409020545b6110f49190612d52565b600033816114408286611988565b9050838110156114a05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016108d7565b610bc88286868403611ad0565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806114e857506114e83361115f565b6115465760405162461bcd60e51b815260206004820152602960248201527f53656e646572206d75737420626520616c6c6f77616e6365206f722072657761604482015268393239903a37b5b2b760b91b60648201526084016108d7565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036115b0576115808484611f11565b60018111156115ab5760008061159883850185612dae565b915091506115a886868484611f6d565b50505b6115b9565b6115b93361119f565b50505050565b600033610870818585611cc2565b6060600780548060200260200160405190810160405280929190818152602001828054801561085857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611607575050505050905090565b33611638816120d0565b600b60009054906101000a90046001600160a01b03166001600160a01b031663a7858f576040518163ffffffff1660e01b8152600401602060405180830381865afa15801561168b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116af9190612dd8565b1561171a5760405162461bcd60e51b815260206004820152603560248201527f416c6c6f77616e63652063616e6e6f742062652077697468647261776e207768604482015274195b881c1bdbdb1cc8185c99481c995cd95c9d9959605a1b60648201526084016108d7565b81611724336110fa565b101561177c5760405162461bcd60e51b815260206004820152602160248201527f5769746864726177616c20616d6f756e7420657863656564732062616c616e636044820152606560f81b60648201526084016108d7565b81600181016117915761178e336110fa565b90505b336000908152600d60209081526040918290208251606081018452815481526001909101546001600160401b03808216938301849052600160401b9091041692810192909252158015906118005750806040015181602001516117f49190612dfa565b6001600160401b031642115b1561182957336000908152600d6020526040812090815560010180546001600160801b03191690555b6118333383612184565b6118676001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163384611eba565b60405182815233907fcb4e4a5b4e544d9c587ec3ac0eead830ce8a4cccfe48b8dc331d447c481be8979060200160405180910390a250505050565b6118aa611bf4565b6001600160a01b0381166119005760405162461bcd60e51b815260206004820152601960248201527f496e76616c69642066656520637572766520616464726573730000000000000060448201526064016108d7565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b61192c33826122d2565b50565b336000818152600a602052604080822080546001600160a01b0319811690915590516001600160a01b0390911692839290917f9dca899729a60a64e03e19b833c4ef7e1795b7d9ed899092fd59d5df5a8229e49190a350565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6001600160a01b038281166000908152600a6020526040902054163314611a2a5760405162461bcd60e51b815260206004820152602560248201527f417070726f76616c20726571756972656420746f207265646972656374207265604482015264776172647360d81b60648201526084016108d7565b6001600160a01b0382166000908152600a6020526040902080546001600160a01b031916905561137f82826122d2565b611a62611bf4565b6001600160a01b038116611ac75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108d7565b61192c81611e6a565b6001600160a01b038316611b325760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108d7565b6001600160a01b038216611b935760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108d7565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000546001600160a01b0316331461115d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108d7565b6000611c5a8484611988565b905060001981146115b95781811015611cb55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108d7565b6115b98484848403611ad0565b60405162461bcd60e51b815260206004820152601b60248201527f546f6b656e2063616e6e6f74206265207472616e73666572726564000000000060448201526064016108d7565b604051635260769b60e11b815284906001600160a01b0382169063a4c0ed3690611d3e908990889088908890600401612e25565b600060405180830381600087803b158015611d5857600080fd5b505af1158015611d6c573d6000803e3d6000fd5b50505050505050505050565b6001600160a01b0381166000908152600d60209081526040808320815160608101835281548082526001909201546001600160401b03808216958301869052600160401b9091041692810192909252909142821580611de85750816001600160401b0316816001600160401b0316105b15611df95750600095945050505050565b6040840151611e089083612dfa565b6001600160401b0316816001600160401b03161115611e2b575090949350505050565b60408401516001600160401b0316611e438383612e6d565b611e56906001600160401b031685612e95565b611e609190612eb4565b9695505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611f0c9084906125da565b505050565b81611f1b816120d0565b611f2583836126ac565b826001600160a01b03167f60df8ac38837b0ae1b717d64eba4a631341a9365ed654aa2cb3ed7657d65acee83604051611f6091815260200190565b60405180910390a2505050565b6000826001600160401b031611611fc65760405162461bcd60e51b815260206004820152601b60248201527f53746172742074696d657374616d702063616e6e6f742062652030000000000060448201526064016108d7565b6000816001600160401b03161161201f5760405162461bcd60e51b815260206004820152601c60248201527f5365636f6e6473206475726174696f6e2063616e6e6f7420626520300000000060448201526064016108d7565b6001600160a01b0384166000908152600d6020526040902060018101546001600160401b0390811690841611156120b05760018101546001600160401b0316156120855761206c85611d78565b81600001600082825461207f9190612d6a565b90915550505b6001810180546001600160401b03848116600160401b026001600160801b0319909216908616171790555b838160000160008282546120c49190612d52565b90915550505050505050565b60005b60075481101561137f5760066000600783815481106120f4576120f4612d0d565b6000918252602080832091909101546001600160a01b039081168452908301939093526040918201902054905163632447c960e01b8152848316600482015291169063632447c990602401600060405180830381600087803b15801561215957600080fd5b505af115801561216d573d6000803e3d6000fd5b50505050808061217c90612d39565b9150506120d3565b6001600160a01b0382166121e45760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016108d7565b6001600160a01b038216600090815260016020526040902054818110156122585760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016108d7565b6001600160a01b0383166000908152600160205260408120838303905560038054849290612287908490612d6a565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b816122dc816120d0565b816122e6816120d0565b6001600160a01b0383166123325760405162461bcd60e51b815260206004820152601360248201527243616e6e6f74206275726e207265776172647360681b60448201526064016108d7565b6001600160a01b038481166000908152600860205260409020548185169116036123b25760405162461bcd60e51b815260206004820152602b60248201527f43616e6e6f74207265646972656374207265776172647320746f20746865207360448201526a616d65206164647265737360a81b60648201526084016108d7565b6001600160a01b0384811660009081526008602052604090205416156123d95760016123f0565b826001600160a01b0316846001600160a01b031614155b61243c5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420726564697265637420746f2073656c6600000000000000000060448201526064016108d7565b6000612447856110fa565b9050600081116124ab5760405162461bcd60e51b815260206004820152602960248201527f412062616c616e636520697320726571756972656420746f207265646972656360448201526874207265776172647360b81b60648201526084016108d7565b6001600160a01b03808616600090815260086020526040902054168015612503576124d5816120d0565b6001600160a01b038116600090815260096020526040812080548492906124fd908490612d6a565b90915550505b856001600160a01b0316856001600160a01b031603612547576001600160a01b038616600090815260086020526040902080546001600160a01b0319169055612597565b6001600160a01b03868116600090815260086020908152604080832080546001600160a01b031916948a169485179055928252600990529081208054849290612591908490612d52565b90915550505b60405133906001600160a01b0387811691908916907f6a8c4b3eeb6ce85acfca51b03ce7b05fdefe1ff2b7c0a45e7002b08e0cea1eb690600090a4505050505050565b600061262f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661278b9092919063ffffffff16565b805190915015611f0c578080602001905181019061264d9190612dd8565b611f0c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016108d7565b6001600160a01b0382166127025760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016108d7565b80600360008282546127149190612d52565b90915550506001600160a01b03821660009081526001602052604081208054839290612741908490612d52565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b606061279a84846000856127a2565b949350505050565b6060824710156128035760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016108d7565b6001600160a01b0385163b61285a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108d7565b600080866001600160a01b031685876040516128769190612ed6565b60006040518083038185875af1925050503d80600081146128b3576040519150601f19603f3d011682016040523d82523d6000602084013e6128b8565b606091505b50915091506128c88282866128d3565b979650505050505050565b606083156128e25750816107c9565b8251156128f25782518084602001fd5b8160405162461bcd60e51b81526004016108d79190612992565b80356001600160a01b038116811461292357600080fd5b919050565b6000806040838503121561293b57600080fd5b6129448361290c565b9150602083013561ffff8116811461295b57600080fd5b809150509250929050565b60005b83811015612981578181015183820152602001612969565b838111156115b95750506000910152565b60208152600082518060208401526129b1816040850160208701612966565b601f01601f19169190910160400192915050565b600080604083850312156129d857600080fd5b6129e18361290c565b946020939093013593505050565b600060208284031215612a0157600080fd5b6107c98261290c565b600081518084526020808501945080840160005b83811015612a435781516001600160a01b031687529582019590820190600101612a1e565b509495945050505050565b600081518084526020808501945080840160005b83811015612a4357815187529582019590820190600101612a62565b604081526000612a916040830185612a0a565b8281036020840152612aa38185612a4e565b95945050505050565b6020815260006107c96020830184612a4e565b600080600060608486031215612ad457600080fd5b612add8461290c565b9250612aeb6020850161290c565b9150604084013590509250925092565b60008060008060608587031215612b1157600080fd5b612b1a8561290c565b93506020850135925060408501356001600160401b0380821115612b3d57600080fd5b818701915087601f830112612b5157600080fd5b813581811115612b6057600080fd5b886020828501011115612b7257600080fd5b95989497505060200194505050565b60008060408385031215612b9457600080fd5b612b9d8361290c565b9150612bab6020840161290c565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215612bdd57600080fd5b82356001600160401b0380821115612bf457600080fd5b818501915085601f830112612c0857600080fd5b813581811115612c1a57612c1a612bb4565b8060051b604051601f19603f83011681018181108582111715612c3f57612c3f612bb4565b604052918252848201925083810185019188831115612c5d57600080fd5b938501935b82851015612c8257612c738561290c565b84529385019392850192612c62565b98975050505050505050565b600060208284031215612ca057600080fd5b5035919050565b6020815260006107c96020830184612a0a565b600060208284031215612ccc57600080fd5b5051919050565b600181811c90821680612ce757607f821691505b602082108103612d0757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612d4b57612d4b612d23565b5060010190565b60008219821115612d6557612d65612d23565b500190565b600082821015612d7c57612d7c612d23565b500390565b634e487b7160e01b600052603160045260246000fd5b80356001600160401b038116811461292357600080fd5b60008060408385031215612dc157600080fd5b612dca83612d97565b9150612bab60208401612d97565b600060208284031215612dea57600080fd5b815180151581146107c957600080fd5b60006001600160401b03808316818516808303821115612e1c57612e1c612d23565b01949350505050565b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f191601019392505050565b60006001600160401b0383811690831681811015612e8d57612e8d612d23565b039392505050565b6000816000190483118215151615612eaf57612eaf612d23565b500290565b600082612ed157634e487b7160e01b600052601260045260246000fd5b500490565b60008251612ee8818460208701612966565b919091019291505056fea26469706673582212200af602f7dc0f335796134d55ad60148685e1e1f53c8efd767251eaae25d87e4b64736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061027f5760003560e01c806375151b631161015c578063a4c0ed36116100ce578063c53b585e11610087578063c53b585e14610669578063d387fd6c1461067c578063d5d67d5114610684578063dd62ed3e146106ab578063ef735f07146106be578063f2fde38b146106d157600080fd5b8063a4c0ed36146105df578063a9059cbb146105f2578063b002249d14610605578063ba650f791461061a578063c3d2c3c11461062d578063c51648811461065657600080fd5b80638da5cb5b116101205780638da5cb5b146104e8578063952db31f146104f957806395d89b411461050c57806398807d84146105145780639f82906314610527578063a457c2d7146105cc57600080fd5b806375151b6314610494578063817b1cd2146104a7578063856695ea146104af57806386d74037146104c257806388951352146104d557600080fd5b80635452b9ba116101f5578063611fae02116101b9578063611fae021461040a578063628a0f551461043357806362d76d06146104535780636b5f83211461046657806370a0823114610479578063715018a61461048c57600080fd5b80635452b9ba1461037d5780635476bd72146103a85780635b0c9391146103bb5780635b45fac4146103ce5780635fa7b584146103f757600080fd5b80630f14b4d6116102475780630f14b4d61461030d57806318160ddd1461032d57806323b872dd14610335578063313ce5671461034857806339509351146103575780634000aea01461036a57600080fd5b806304e4c8641461028457806306fdde03146102aa578063095ea7b3146102bf5780630c8d9cc7146102e25780630e3bc974146102f7575b600080fd5b610297610292366004612928565b6106e4565b6040519081526020015b60405180910390f35b6102b26107d0565b6040516102a19190612992565b6102d26102cd3660046129c5565b610862565b60405190151581526020016102a1565b6102f56102f03660046129ef565b61087a565b005b6102ff610902565b6040516102a1929190612a7e565b61032061031b3660046129ef565b610a7d565b6040516102a19190612aac565b600354610297565b6102d2610343366004612abf565b610baf565b604051601281526020016102a1565b6102d26103653660046129c5565b610bd3565b6102d2610378366004612afb565b610bf5565b600b54610390906001600160a01b031681565b6040516001600160a01b0390911681526020016102a1565b6102f56103b6366004612b81565b610c16565b6102f56103c93660046129ef565b610d8b565b6103906103dc3660046129ef565b6008602052600090815260409020546001600160a01b031681565b6102f56104053660046129ef565b610de2565b6103906104183660046129ef565b600a602052600090815260409020546001600160a01b031681565b6102976104413660046129ef565b60096020526000908152604090205481565b6102f5610461366004612bca565b610fa9565b610297610474366004612c8e565b611086565b6102976104873660046129ef565b6110fa565b6102f561114b565b6102d26104a23660046129ef565b61115f565b61029761118f565b600c54610390906001600160a01b031681565b6102f56104d03660046129ef565b61119f565b6102f56104e3366004612bca565b61133f565b6000546001600160a01b0316610390565b6103906105073660046129ef565b611383565b6102b26113c9565b6102976105223660046129ef565b6113d8565b6105996105353660046129ef565b6040805160608082018352600080835260208084018290529284018190526001600160a01b03949094168452600d8252928290208251938401835280548452600101546001600160401b0380821692850192909252600160401b9004169082015290565b60408051825181526020808401516001600160401b039081169183019190915292820151909216908201526060016102a1565b6102d26105da3660046129c5565b611432565b6102f56105ed366004612afb565b6114ad565b6102d26106003660046129c5565b6115bf565b61060d6115cd565b6040516102a19190612ca7565b6102f5610628366004612c8e565b61162e565b61039061063b3660046129ef565b6006602052600090815260409020546001600160a01b031681565b6102f56106643660046129ef565b6118a2565b6102f56106773660046129ef565b611922565b6102f561192f565b6103907f000000000000000000000000000000000000000000000000000000000000000081565b6102976106b9366004612b81565b611988565b6102f56106cc366004612b81565b6119b3565b6102f56106df3660046129ef565b611a5a565b600c54600b546040516319dc8ba760e31b81526001600160a01b03858116600483015261ffff8516602483015260009381169263246f938f9291169063cee45d3890604401602060405180830381865afa158015610746573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076a9190612cba565b6040518263ffffffff1660e01b815260040161078891815260200190565b602060405180830381865afa1580156107a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c99190612cba565b9392505050565b6060600480546107df90612cd3565b80601f016020809104026020016040519081016040528092919081815260200182805461080b90612cd3565b80156108585780601f1061082d57610100808354040283529160200191610858565b820191906000526020600020905b81548152906001019060200180831161083b57829003601f168201915b5050505050905090565b600033610870818585611ad0565b5060019392505050565b610882611bf4565b600b546001600160a01b0316156108e05760405162461bcd60e51b815260206004820152601760248201527f706f6f6c20726f7574657220616c72656164792073657400000000000000000060448201526064015b60405180910390fd5b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b60608060006007805490506001600160401b0381111561092457610924612bb4565b60405190808252806020026020018201604052801561094d578160200160208202803683370190505b50905060005b600754811015610a14576007818154811061097057610970612d0d565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e59190612cba565b8282815181106109f7576109f7612d0d565b602090810291909101015280610a0c81612d39565b915050610953565b5060078181805480602002602001604051908101604052809291908181526020018280548015610a6d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a4f575b5050505050915092509250509091565b6007546060906000906001600160401b03811115610a9d57610a9d612bb4565b604051908082528060200260200182016040528015610ac6578160200160208202803683370190505b50905060005b600754811015610ba8576006600060078381548110610aed57610aed612d0d565b6000918252602080832091909101546001600160a01b039081168452908301939093526040918201902054905163078a5a6b60e11b81528683166004820152911690630f14b4d690602401602060405180830381865afa158015610b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b799190612cba565b828281518110610b8b57610b8b612d0d565b602090810291909101015280610ba081612d39565b915050610acc565b5092915050565b600033610bbd858285611c4e565b610bc8858585611cc2565b506001949350505050565b600033610870818585610be68383611988565b610bf09190612d52565b611ad0565b6000610c0185856115bf565b50843b15610bc857610bc83386868686611d0a565b610c1e611bf4565b610c278261115f565b15610c745760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e20697320616c726561647920737570706f7274656400000000000060448201526064016108d7565b6001600160a01b0382811660008181526006602052604080822080549486166001600160a01b0319958616179055600780546001810182559083527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688018054909416831790935591516370a0823160e01b81523060048201526370a0823190602401602060405180830381865afa158015610d13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d379190612cba565b1115610d4657610d468261119f565b6040516001600160a01b0382811682528316907fdbf34b45b47a653cf4940cccbec765f72d4d63de3237306905bfc0ee28832362906020015b60405180910390a25050565b336000818152600a602052604080822080546001600160a01b0319166001600160a01b03861690811790915590519092917fbc2ae327210da6d1f0946518a140d99a46f3a238ea185f565875ebfe507eb99691a350565b610dea611bf4565b610df38161115f565b610e385760405162461bcd60e51b8152602060048201526016602482015275151bdad95b881a5cc81b9bdd081cdd5c1c1bdc9d195960521b60448201526064016108d7565b6001600160a01b03808216600090815260066020526040812080546001600160a01b03198116909155909116905b600754811015610f6b57826001600160a01b031660078281548110610e8d57610e8d612d0d565b6000918252602090912001546001600160a01b031603610f595760078054610eb790600190612d6a565b81548110610ec757610ec7612d0d565b600091825260209091200154600780546001600160a01b039092169183908110610ef357610ef3612d0d565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506007805480610f3257610f32612d81565b600082815260209020810160001990810180546001600160a01b0319169055019055610f6b565b80610f6381612d39565b915050610e66565b506040516001600160a01b0382811682528316907f39dcd754ec63af4b82c4c569ff1b6b4e55a8038e6545844747e54f2f2d4e8e5090602001610d7f565b60005b81518110156110575760066000838381518110610fcb57610fcb612d0d565b6020908102919091018101516001600160a01b0390811683529082019290925260409081016000205490516351cff8d960e01b81523360048201529116906351cff8d990602401600060405180830381600087803b15801561102c57600080fd5b505af1158015611040573d6000803e3d6000fd5b50505050808061104f90612d39565b915050610fac565b5060405133907feeab3fd62be4cb59cbdc42d5b0f676a3597ff387b9a85e62330cc17c2a3603db90600090a250565b600c5460405163246f938f60e01b8152600481018390526000916001600160a01b03169063246f938f90602401602060405180830381865afa1580156110d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f49190612cba565b92915050565b600061110582611d78565b6001600160a01b0383166000908152600d60205260409020546111289190612d6a565b6001600160a01b0383166000908152600160205260409020546110f49190612d6a565b611153611bf4565b61115d6000611e6a565b565b6001600160a01b038181166000908152600660205260408120549091166111875760006110f4565b600192915050565b600061119a60035490565b905090565b6111a88161115f565b6111ea5760405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b60448201526064016108d7565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611233573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112579190612cba565b9050600081116112a95760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742064697374726962757465207a65726f2062616c616e6365000060448201526064016108d7565b6001600160a01b038084166000908152600660205260409020546112d291848116911683611eba565b6001600160a01b038084166000908152600660205260408082205481516306f4a2cd60e41b81529151931692636f4a2cd09260048084019391929182900301818387803b15801561132257600080fd5b505af1158015611336573d6000803e3d6000fd5b50505050505050565b60005b815181101561137f5761136d82828151811061136057611360612d0d565b602002602001015161119f565b8061137781612d39565b915050611342565b5050565b6001600160a01b038181166000908152600860205260408120549091166113aa57816110f4565b506001600160a01b039081166000908152600860205260409020541690565b6060600580546107df90612cd3565b6001600160a01b03808216600090815260096020908152604080832054600890925282205491929091161561140e576000611428565b6001600160a01b0383166000908152600160205260409020545b6110f49190612d52565b600033816114408286611988565b9050838110156114a05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016108d7565b610bc88286868403611ad0565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806114e857506114e83361115f565b6115465760405162461bcd60e51b815260206004820152602960248201527f53656e646572206d75737420626520616c6c6f77616e6365206f722072657761604482015268393239903a37b5b2b760b91b60648201526084016108d7565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036115b0576115808484611f11565b60018111156115ab5760008061159883850185612dae565b915091506115a886868484611f6d565b50505b6115b9565b6115b93361119f565b50505050565b600033610870818585611cc2565b6060600780548060200260200160405190810160405280929190818152602001828054801561085857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611607575050505050905090565b33611638816120d0565b600b60009054906101000a90046001600160a01b03166001600160a01b031663a7858f576040518163ffffffff1660e01b8152600401602060405180830381865afa15801561168b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116af9190612dd8565b1561171a5760405162461bcd60e51b815260206004820152603560248201527f416c6c6f77616e63652063616e6e6f742062652077697468647261776e207768604482015274195b881c1bdbdb1cc8185c99481c995cd95c9d9959605a1b60648201526084016108d7565b81611724336110fa565b101561177c5760405162461bcd60e51b815260206004820152602160248201527f5769746864726177616c20616d6f756e7420657863656564732062616c616e636044820152606560f81b60648201526084016108d7565b81600181016117915761178e336110fa565b90505b336000908152600d60209081526040918290208251606081018452815481526001909101546001600160401b03808216938301849052600160401b9091041692810192909252158015906118005750806040015181602001516117f49190612dfa565b6001600160401b031642115b1561182957336000908152600d6020526040812090815560010180546001600160801b03191690555b6118333383612184565b6118676001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163384611eba565b60405182815233907fcb4e4a5b4e544d9c587ec3ac0eead830ce8a4cccfe48b8dc331d447c481be8979060200160405180910390a250505050565b6118aa611bf4565b6001600160a01b0381166119005760405162461bcd60e51b815260206004820152601960248201527f496e76616c69642066656520637572766520616464726573730000000000000060448201526064016108d7565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b61192c33826122d2565b50565b336000818152600a602052604080822080546001600160a01b0319811690915590516001600160a01b0390911692839290917f9dca899729a60a64e03e19b833c4ef7e1795b7d9ed899092fd59d5df5a8229e49190a350565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6001600160a01b038281166000908152600a6020526040902054163314611a2a5760405162461bcd60e51b815260206004820152602560248201527f417070726f76616c20726571756972656420746f207265646972656374207265604482015264776172647360d81b60648201526084016108d7565b6001600160a01b0382166000908152600a6020526040902080546001600160a01b031916905561137f82826122d2565b611a62611bf4565b6001600160a01b038116611ac75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108d7565b61192c81611e6a565b6001600160a01b038316611b325760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108d7565b6001600160a01b038216611b935760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108d7565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000546001600160a01b0316331461115d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108d7565b6000611c5a8484611988565b905060001981146115b95781811015611cb55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108d7565b6115b98484848403611ad0565b60405162461bcd60e51b815260206004820152601b60248201527f546f6b656e2063616e6e6f74206265207472616e73666572726564000000000060448201526064016108d7565b604051635260769b60e11b815284906001600160a01b0382169063a4c0ed3690611d3e908990889088908890600401612e25565b600060405180830381600087803b158015611d5857600080fd5b505af1158015611d6c573d6000803e3d6000fd5b50505050505050505050565b6001600160a01b0381166000908152600d60209081526040808320815160608101835281548082526001909201546001600160401b03808216958301869052600160401b9091041692810192909252909142821580611de85750816001600160401b0316816001600160401b0316105b15611df95750600095945050505050565b6040840151611e089083612dfa565b6001600160401b0316816001600160401b03161115611e2b575090949350505050565b60408401516001600160401b0316611e438383612e6d565b611e56906001600160401b031685612e95565b611e609190612eb4565b9695505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611f0c9084906125da565b505050565b81611f1b816120d0565b611f2583836126ac565b826001600160a01b03167f60df8ac38837b0ae1b717d64eba4a631341a9365ed654aa2cb3ed7657d65acee83604051611f6091815260200190565b60405180910390a2505050565b6000826001600160401b031611611fc65760405162461bcd60e51b815260206004820152601b60248201527f53746172742074696d657374616d702063616e6e6f742062652030000000000060448201526064016108d7565b6000816001600160401b03161161201f5760405162461bcd60e51b815260206004820152601c60248201527f5365636f6e6473206475726174696f6e2063616e6e6f7420626520300000000060448201526064016108d7565b6001600160a01b0384166000908152600d6020526040902060018101546001600160401b0390811690841611156120b05760018101546001600160401b0316156120855761206c85611d78565b81600001600082825461207f9190612d6a565b90915550505b6001810180546001600160401b03848116600160401b026001600160801b0319909216908616171790555b838160000160008282546120c49190612d52565b90915550505050505050565b60005b60075481101561137f5760066000600783815481106120f4576120f4612d0d565b6000918252602080832091909101546001600160a01b039081168452908301939093526040918201902054905163632447c960e01b8152848316600482015291169063632447c990602401600060405180830381600087803b15801561215957600080fd5b505af115801561216d573d6000803e3d6000fd5b50505050808061217c90612d39565b9150506120d3565b6001600160a01b0382166121e45760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016108d7565b6001600160a01b038216600090815260016020526040902054818110156122585760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016108d7565b6001600160a01b0383166000908152600160205260408120838303905560038054849290612287908490612d6a565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b816122dc816120d0565b816122e6816120d0565b6001600160a01b0383166123325760405162461bcd60e51b815260206004820152601360248201527243616e6e6f74206275726e207265776172647360681b60448201526064016108d7565b6001600160a01b038481166000908152600860205260409020548185169116036123b25760405162461bcd60e51b815260206004820152602b60248201527f43616e6e6f74207265646972656374207265776172647320746f20746865207360448201526a616d65206164647265737360a81b60648201526084016108d7565b6001600160a01b0384811660009081526008602052604090205416156123d95760016123f0565b826001600160a01b0316846001600160a01b031614155b61243c5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420726564697265637420746f2073656c6600000000000000000060448201526064016108d7565b6000612447856110fa565b9050600081116124ab5760405162461bcd60e51b815260206004820152602960248201527f412062616c616e636520697320726571756972656420746f207265646972656360448201526874207265776172647360b81b60648201526084016108d7565b6001600160a01b03808616600090815260086020526040902054168015612503576124d5816120d0565b6001600160a01b038116600090815260096020526040812080548492906124fd908490612d6a565b90915550505b856001600160a01b0316856001600160a01b031603612547576001600160a01b038616600090815260086020526040902080546001600160a01b0319169055612597565b6001600160a01b03868116600090815260086020908152604080832080546001600160a01b031916948a169485179055928252600990529081208054849290612591908490612d52565b90915550505b60405133906001600160a01b0387811691908916907f6a8c4b3eeb6ce85acfca51b03ce7b05fdefe1ff2b7c0a45e7002b08e0cea1eb690600090a4505050505050565b600061262f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661278b9092919063ffffffff16565b805190915015611f0c578080602001905181019061264d9190612dd8565b611f0c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016108d7565b6001600160a01b0382166127025760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016108d7565b80600360008282546127149190612d52565b90915550506001600160a01b03821660009081526001602052604081208054839290612741908490612d52565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b606061279a84846000856127a2565b949350505050565b6060824710156128035760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016108d7565b6001600160a01b0385163b61285a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108d7565b600080866001600160a01b031685876040516128769190612ed6565b60006040518083038185875af1925050503d80600081146128b3576040519150601f19603f3d011682016040523d82523d6000602084013e6128b8565b606091505b50915091506128c88282866128d3565b979650505050505050565b606083156128e25750816107c9565b8251156128f25782518084602001fd5b8160405162461bcd60e51b81526004016108d79190612992565b80356001600160a01b038116811461292357600080fd5b919050565b6000806040838503121561293b57600080fd5b6129448361290c565b9150602083013561ffff8116811461295b57600080fd5b809150509250929050565b60005b83811015612981578181015183820152602001612969565b838111156115b95750506000910152565b60208152600082518060208401526129b1816040850160208701612966565b601f01601f19169190910160400192915050565b600080604083850312156129d857600080fd5b6129e18361290c565b946020939093013593505050565b600060208284031215612a0157600080fd5b6107c98261290c565b600081518084526020808501945080840160005b83811015612a435781516001600160a01b031687529582019590820190600101612a1e565b509495945050505050565b600081518084526020808501945080840160005b83811015612a4357815187529582019590820190600101612a62565b604081526000612a916040830185612a0a565b8281036020840152612aa38185612a4e565b95945050505050565b6020815260006107c96020830184612a4e565b600080600060608486031215612ad457600080fd5b612add8461290c565b9250612aeb6020850161290c565b9150604084013590509250925092565b60008060008060608587031215612b1157600080fd5b612b1a8561290c565b93506020850135925060408501356001600160401b0380821115612b3d57600080fd5b818701915087601f830112612b5157600080fd5b813581811115612b6057600080fd5b886020828501011115612b7257600080fd5b95989497505060200194505050565b60008060408385031215612b9457600080fd5b612b9d8361290c565b9150612bab6020840161290c565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215612bdd57600080fd5b82356001600160401b0380821115612bf457600080fd5b818501915085601f830112612c0857600080fd5b813581811115612c1a57612c1a612bb4565b8060051b604051601f19603f83011681018181108582111715612c3f57612c3f612bb4565b604052918252848201925083810185019188831115612c5d57600080fd5b938501935b82851015612c8257612c738561290c565b84529385019392850192612c62565b98975050505050505050565b600060208284031215612ca057600080fd5b5035919050565b6020815260006107c96020830184612a0a565b600060208284031215612ccc57600080fd5b5051919050565b600181811c90821680612ce757607f821691505b602082108103612d0757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612d4b57612d4b612d23565b5060010190565b60008219821115612d6557612d65612d23565b500190565b600082821015612d7c57612d7c612d23565b500390565b634e487b7160e01b600052603160045260246000fd5b80356001600160401b038116811461292357600080fd5b60008060408385031215612dc157600080fd5b612dca83612d97565b9150612bab60208401612d97565b600060208284031215612dea57600080fd5b815180151581146107c957600080fd5b60006001600160401b03808316818516808303821115612e1c57612e1c612d23565b01949350505050565b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f191601019392505050565b60006001600160401b0383811690831681811015612e8d57612e8d612d23565b039392505050565b6000816000190483118215151615612eaf57612eaf612d23565b500290565b600082612ed157634e487b7160e01b600052601260045260246000fd5b500490565b60008251612ee8818460208701612966565b919091019291505056fea26469706673582212200af602f7dc0f335796134d55ad60148685e1e1f53c8efd767251eaae25d87e4b64736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addToken(address,address)": {
        "params": {
          "_rewardsPool": "token rewards pool to add*",
          "_token": "token to add"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "approveRedirect(address)": {
        "params": {
          "_to": "account to approve"
        }
      },
      "balanceOf(address)": {
        "params": {
          "_account": "account"
        },
        "returns": {
          "_0": "balance accounts balance"
        }
      },
      "currentRate(address,uint16)": {
        "params": {
          "_index": "the pool index",
          "_token": "the token address of the pool"
        },
        "returns": {
          "_0": "current rate*"
        }
      },
      "currentRateAt(uint256)": {
        "details": "1 ether = 100%, 0.5 ether = 50% etc",
        "params": {
          "_percentageBorrowed": "the percentage borrowed for fee calculation"
        },
        "returns": {
          "_0": "current rate*"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "distributeToken(address)": {
        "params": {
          "_token": "token address"
        }
      },
      "distributeTokens(address[])": {
        "params": {
          "_tokens": "list of token addresses"
        }
      },
      "getVestingSchedule(address)": {
        "params": {
          "_account": "account"
        },
        "returns": {
          "_0": "vestingSchedule account's vesting schedule"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "isTokenSupported(address)": {
        "params": {
          "_token": "token address"
        },
        "returns": {
          "_0": "is token supported*"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "onTokenTransfer(address,uint256,bytes)": {
        "params": {
          "_sender": "of the stake",
          "_value": "of the token transfer*"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "redirectRewards(address)": {
        "params": {
          "_to": "account to redirect rewards to"
        }
      },
      "redirectRewardsFrom(address,address)": {
        "params": {
          "_from": "account to redirect rewards for",
          "_to": "account to redirect rewards to"
        }
      },
      "removeToken(address)": {
        "params": {
          "_token": "address of token*"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "rewardsAddress(address)": {
        "params": {
          "_account": "address to query"
        }
      },
      "setFeeCurve(address)": {
        "params": {
          "_feeCurve": "interface"
        }
      },
      "setPoolRouter(address)": {
        "params": {
          "_poolRouter": "pool router address*"
        }
      },
      "staked(address)": {
        "details": "required by RewardsPoolController",
        "returns": {
          "_0": "account's staked amount"
        }
      },
      "supportedTokens()": {
        "returns": {
          "_0": "list of token configs*"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "tokenBalances()": {
        "returns": {
          "_0": "list of tokens with a list of token balances*"
        }
      },
      "totalStaked()": {
        "details": "required by RewardsPoolController",
        "returns": {
          "_0": "total staked amount"
        }
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawAllowance(uint256)": {
        "params": {
          "_amount": "amount to withdraw*"
        }
      },
      "withdrawRewards(address[])": {
        "params": {
          "_tokens": "list of token addresses to withdraw rewards from*"
        }
      },
      "withdrawableRewards(address)": {
        "params": {
          "_account": "account to return reward amounts for"
        },
        "returns": {
          "_0": "list of withdrawable reward amounts*"
        }
      }
    },
    "title": "Delegator Pool",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addToken(address,address)": {
        "notice": "adds a new token"
      },
      "approveRedirect(address)": {
        "notice": "approve a reward redirect"
      },
      "balanceOf(address)": {
        "notice": "returns an accounts balance minus the amount of tokens that are currently vesting"
      },
      "currentRate(address,uint16)": {
        "notice": "returns the current fee rate based on the % of allowance token borrowed"
      },
      "currentRateAt(uint256)": {
        "notice": "returns the current fee rate based on a specified percentage"
      },
      "distributeToken(address)": {
        "notice": "distributes a token balance to its equivalent reward pool"
      },
      "distributeTokens(address[])": {
        "notice": "distributes token balances to their equivalent reward pools"
      },
      "getVestingSchedule(address)": {
        "notice": "returns the vesting schedule of a given account"
      },
      "isTokenSupported(address)": {
        "notice": "returns true/false to whether a given token is supported"
      },
      "onTokenTransfer(address,uint256,bytes)": {
        "notice": "ERC677 implementation to stake allowance or distribute rewards"
      },
      "redirectRewards(address)": {
        "notice": "redirect rewards to a specific address. Supports multiple addresses redirecting to the same previousRedirect. To stop redirecting rewards, set _to as the current wallet."
      },
      "redirectRewardsFrom(address,address)": {
        "notice": "redirect rewards for an account with approval"
      },
      "removeToken(address)": {
        "notice": "removes a supported token"
      },
      "revokeRedirectApproval()": {
        "notice": "revoke a redirect approval"
      },
      "rewardsAddress(address)": {
        "notice": "returns the address that receives rewards for an account"
      },
      "setFeeCurve(address)": {
        "notice": "sets the fee curve interface"
      },
      "setPoolRouter(address)": {
        "notice": "sets the pool router address"
      },
      "staked(address)": {
        "notice": "returns an account's staked amount for use by reward pools controlled by this contract. Overridden as the the staked amount needs to include any vesting tokens."
      },
      "supportedTokens()": {
        "notice": "returns a list of configs for all supported tokens"
      },
      "tokenBalances()": {
        "notice": "get all token balances of supported tokens within the controller"
      },
      "totalStaked()": {
        "notice": "returns the total staked amount for use by reward pools controlled by this contract"
      },
      "withdrawAllowance(uint256)": {
        "notice": "withdraws lent allowance tokens if there are enough available"
      },
      "withdrawRewards(address[])": {
        "notice": "withdraws an account's earned rewards for a list of tokens"
      },
      "withdrawableRewards(address)": {
        "notice": "returns a list of withdrawable rewards for an account"
      }
    },
    "notice": "Allows users to stake allowance tokens, stakers receive a percentage of earned rewards",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3767,
        "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4355,
        "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4361,
        "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
        "label": "_allowances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 4363,
        "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 4365,
        "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
        "label": "_name",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 4367,
        "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
        "label": "_symbol",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 18025,
        "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
        "label": "tokenPools",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_contract(IRewardsPool)19713)"
      },
      {
        "astId": 18028,
        "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
        "label": "tokens",
        "offset": 0,
        "slot": "7",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 18032,
        "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
        "label": "rewardRedirects",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 18036,
        "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
        "label": "redirectedStakes",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 18040,
        "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
        "label": "redirectApprovals",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 13209,
        "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
        "label": "poolRouter",
        "offset": 0,
        "slot": "11",
        "type": "t_contract(IPoolRouter)19690"
      },
      {
        "astId": 13212,
        "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
        "label": "feeCurve",
        "offset": 0,
        "slot": "12",
        "type": "t_contract(IFeeCurve)19668"
      },
      {
        "astId": 13217,
        "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
        "label": "vestingSchedules",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_struct(VestingSchedule)13203_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(IFeeCurve)19668": {
        "encoding": "inplace",
        "label": "contract IFeeCurve",
        "numberOfBytes": "20"
      },
      "t_contract(IPoolRouter)19690": {
        "encoding": "inplace",
        "label": "contract IPoolRouter",
        "numberOfBytes": "20"
      },
      "t_contract(IRewardsPool)19713": {
        "encoding": "inplace",
        "label": "contract IRewardsPool",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_contract(IRewardsPool)19713)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract IRewardsPool)",
        "numberOfBytes": "32",
        "value": "t_contract(IRewardsPool)19713"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_struct(VestingSchedule)13203_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct DelegatorPool.VestingSchedule)",
        "numberOfBytes": "32",
        "value": "t_struct(VestingSchedule)13203_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(VestingSchedule)13203_storage": {
        "encoding": "inplace",
        "label": "struct DelegatorPool.VestingSchedule",
        "members": [
          {
            "astId": 13198,
            "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
            "label": "totalAmount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 13200,
            "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
            "label": "startTimestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint64"
          },
          {
            "astId": 13202,
            "contract": "contracts/core/DelegatorPool.sol:DelegatorPool",
            "label": "durationSeconds",
            "offset": 8,
            "slot": "1",
            "type": "t_uint64"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}