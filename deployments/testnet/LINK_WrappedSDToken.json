{
  "address": "0x4bBF14a87b21EE3c36dB63742e23Bff887aC3908",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingRewardsPool",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getUnderlyingByWrapped",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getWrappedByUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sdToken",
      "outputs": [
        {
          "internalType": "contract IStakingRewardsPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unwrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "wrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x54f0c0a8371575d9e93d87e4179353b1adf06841fb299fd31799ab0707af22a7",
  "receipt": {
    "to": null,
    "from": "0x11187eff852069a33d102476b2E8A9cc9167dAde",
    "contractAddress": "0x4bBF14a87b21EE3c36dB63742e23Bff887aC3908",
    "transactionIndex": 0,
    "gasUsed": "1125813",
    "logsBloom": "0x
    "blockHash": "0xe9c2958bfb4e1ffe4963d5ba575e66981a983fbc61418b7fe0468af43f061f0a",
    "transactionHash": "0x54f0c0a8371575d9e93d87e4179353b1adf06841fb299fd31799ab0707af22a7",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 903236,
        "transactionHash": "0x54f0c0a8371575d9e93d87e4179353b1adf06841fb299fd31799ab0707af22a7",
        "address": "0x4bBF14a87b21EE3c36dB63742e23Bff887aC3908",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000011187eff852069a33d102476b2e8a9cc9167dade"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 0,
        "blockHash": "0xe9c2958bfb4e1ffe4963d5ba575e66981a983fbc61418b7fe0468af43f061f0a"
      }
    ],
    "blockNumber": 903236,
    "cumulativeGasUsed": "1125813",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x92D8519A81C8724A5c1Fbe88bd079320E85F6Db5",
    "Wrapped stLINK",
    "wstLINK"
  ],
  "numDeployments": 1,
  "solcInputHash": "3b2625e8211dd6eaac71f4a881384a88",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingRewardsPool\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getUnderlyingByWrapped\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getWrappedByUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sdToken\",\"outputs\":[{\"internalType\":\"contract IStakingRewardsPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getUnderlyingByWrapped(uint256)\":{\"params\":{\"_amount\":\"amount of wrapped tokens\"},\"returns\":{\"_0\":\"amount of unwrapped tokens\"}},\"getWrappedByUnderlying(uint256)\":{\"params\":{\"_amount\":\"amount of unwrapped tokens\"},\"returns\":{\"_0\":\"amount of wrapped tokens\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"onTokenTransfer(address,uint256,bytes)\":{\"params\":{\"_sender\":\"of the token transfer\",\"_value\":\"of the token transfer*\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"unwrap(uint256)\":{\"params\":{\"_amount\":\"amount of wrapped tokens to unwrap\"}},\"wrap(uint256)\":{\"params\":{\"_amount\":\"amount of unwrapped tokens to wrap\"}}},\"title\":\"Wrapped Staking Derivative Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getUnderlyingByWrapped(uint256)\":{\"notice\":\"Returns amount of unwrapped tokens for an amount of wrapped tokens\"},\"getWrappedByUnderlying(uint256)\":{\"notice\":\"Returns amount of wrapped tokens for an amount of unwrapped tokens\"},\"onTokenTransfer(address,uint256,bytes)\":{\"notice\":\"ERC677 implementation that proxies wrapping\"},\"unwrap(uint256)\":{\"notice\":\"unwraps tokens\"},\"wrap(uint256)\":{\"notice\":\"wraps tokens\"}},\"notice\":\"Wraps rebasing derivative tokens with a normal ERC20 token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/tokens/WrappedSDToken.sol\":\"WrappedSDToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/core/interfaces/IERC677.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC677 is IERC20 {\\n    function transferAndCall(\\n        address _to,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0x85fb796082bc45f2eb85a84af73983fdfefed6ff9acbc936373d45360a5973cf\",\"license\":\"UNLICENSED\"},\"contracts/core/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\ninterface IERC677Receiver {\\n    function onTokenTransfer(\\n        address _sender,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f02ee4c32eb96a3f6d6d16cc8b90f48b971d2b3ad99afc3bd3c6d0789fa3d66\",\"license\":\"UNLICENSED\"},\"contracts/core/interfaces/IStakingRewardsPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"./IERC677.sol\\\";\\n\\ninterface IStakingRewardsPool is IERC677 {\\n    /**\\n     * @notice returns an account's share balance\\n     * @param _account account to return balance for\\n     * @return account's share balance\\n     **/\\n    function sharesOf(address _account) external view returns (uint);\\n\\n    /**\\n     * @notice returns the amount of shares that corresponds to a staked amount\\n     * @param _amount staked amount\\n     * @return amount of shares\\n     **/\\n    function getSharesByStake(uint256 _amount) external view returns (uint);\\n\\n    /**\\n     * @notice returns the amount of stake that corresponds to an amount of shares\\n     * @param _amount shares amount\\n     * @return amount of stake\\n     **/\\n    function getStakeByShares(uint256 _amount) external view returns (uint);\\n\\n    function totalShares() external view returns (uint);\\n}\\n\",\"keccak256\":\"0xaae525453350badcf9f9ddb333c2dbec14d10cb81cc872838354deb75797dda5\",\"license\":\"UNLICENSED\"},\"contracts/core/tokens/WrappedSDToken.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"./base/ERC677.sol\\\";\\nimport \\\"../interfaces/IStakingRewardsPool.sol\\\";\\n\\n/**\\n * @title Wrapped Staking Derivative Token\\n * @notice Wraps rebasing derivative tokens with a normal ERC20 token\\n */\\ncontract WrappedSDToken is ERC677 {\\n    IStakingRewardsPool public immutable sdToken;\\n\\n    constructor(\\n        address _stakingRewardsPool,\\n        string memory _name,\\n        string memory _symbol\\n    ) ERC677(_name, _symbol, 0) {\\n        sdToken = IStakingRewardsPool(_stakingRewardsPool);\\n    }\\n\\n    /**\\n     * @notice ERC677 implementation that proxies wrapping\\n     * @param _sender of the token transfer\\n     * @param _value of the token transfer\\n     **/\\n    function onTokenTransfer(\\n        address _sender,\\n        uint _value,\\n        bytes calldata\\n    ) external {\\n        require(msg.sender == address(sdToken), \\\"Sender must be staking derivative token\\\");\\n        _wrap(_sender, _value);\\n    }\\n\\n    /**\\n     * @notice wraps tokens\\n     * @param _amount amount of unwrapped tokens to wrap\\n     */\\n    function wrap(uint _amount) external {\\n        sdToken.transferFrom(msg.sender, address(this), _amount);\\n        _wrap(msg.sender, _amount);\\n    }\\n\\n    /**\\n     * @notice unwraps tokens\\n     * @param _amount amount of wrapped tokens to unwrap\\n     */\\n    function unwrap(uint _amount) external {\\n        require(_amount > 0, \\\"Amount must be > 0\\\");\\n        uint256 unwrappedAmount = sdToken.getStakeByShares(_amount);\\n        _burn(msg.sender, _amount);\\n        sdToken.transfer(msg.sender, unwrappedAmount);\\n    }\\n\\n    /**\\n     * @notice Returns amount of wrapped tokens for an amount of unwrapped tokens\\n     * @param _amount amount of unwrapped tokens\\n     * @return amount of wrapped tokens\\n     */\\n    function getWrappedByUnderlying(uint _amount) external view returns (uint) {\\n        return sdToken.getSharesByStake(_amount);\\n    }\\n\\n    /**\\n     * @notice Returns amount of unwrapped tokens for an amount of wrapped tokens\\n     * @param _amount amount of wrapped tokens\\n     * @return amount of unwrapped tokens\\n     */\\n    function getUnderlyingByWrapped(uint _amount) external view returns (uint) {\\n        return sdToken.getStakeByShares(_amount);\\n    }\\n\\n    /**\\n     * @notice wraps tokens\\n     * @param _account account to wrap tokens for\\n     * @param _amount amount of unwrapped tokens to wrap\\n     */\\n    function _wrap(address _account, uint _amount) private {\\n        require(_amount > 0, \\\"Amount must be > 0\\\");\\n        uint256 wrappedAmount = sdToken.getSharesByStake(_amount);\\n        _mint(_account, wrappedAmount);\\n    }\\n}\\n\",\"keccak256\":\"0x1f0d3799ec65bb83dd59f89f6670fd7c28d576efd80754495942100698fad1b7\",\"license\":\"UNLICENSED\"},\"contracts/core/tokens/base/ERC677.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\nimport \\\"../../interfaces/IERC677Receiver.sol\\\";\\nimport \\\"../../interfaces/IERC677.sol\\\";\\n\\ncontract ERC677 is IERC677, ERC20 {\\n    constructor(\\n        string memory _tokenName,\\n        string memory _tokenSymbol,\\n        uint _totalSupply\\n    ) ERC20(_tokenName, _tokenSymbol) {\\n        _mint(msg.sender, _totalSupply * (10**uint256(decimals())));\\n    }\\n\\n    function transferAndCall(\\n        address _to,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) public override returns (bool) {\\n        super.transfer(_to, _value);\\n        if (isContract(_to)) {\\n            contractFallback(msg.sender, _to, _value, _data);\\n        }\\n        return true;\\n    }\\n\\n    function contractFallback(\\n        address _sender,\\n        address _to,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) internal {\\n        IERC677Receiver receiver = IERC677Receiver(_to);\\n        receiver.onTokenTransfer(_sender, _value, _data);\\n    }\\n\\n    function isContract(address _addr) internal view returns (bool hasCode) {\\n        uint256 length;\\n        assembly {\\n            length := extcodesize(_addr)\\n        }\\n        return length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x999338358bb5a20f980932ecb8ea69d5a53b69fa3e82f757ceedd0fde6d17871\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620018103803806200181083398101604081905262000034916200026a565b818160008282600362000048838262000382565b50600462000057828262000382565b50505062000091336200006f620000ab60201b60201c565b6200007f9060ff16600a62000563565b6200008b908462000578565b620000b0565b5050506001600160a01b0390921660805250620005b59050565b601290565b6001600160a01b0382166200010b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200011f91906200059a565b90915550506001600160a01b038216600090815260208190526040812080548392906200014e9084906200059a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001c557600080fd5b81516001600160401b0380821115620001e257620001e26200019d565b604051601f8301601f19908116603f011681019082821181831017156200020d576200020d6200019d565b816040528381526020925086838588010111156200022a57600080fd5b600091505b838210156200024e57858201830151818301840152908201906200022f565b83821115620002605760008385830101525b9695505050505050565b6000806000606084860312156200028057600080fd5b83516001600160a01b03811681146200029857600080fd5b60208501519093506001600160401b0380821115620002b657600080fd5b620002c487838801620001b3565b93506040860151915080821115620002db57600080fd5b50620002ea86828701620001b3565b9150509250925092565b600181811c908216806200030957607f821691505b6020821081036200032a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200019857600081815260208120601f850160051c81016020861015620003595750805b601f850160051c820191505b818110156200037a5782815560010162000365565b505050505050565b81516001600160401b038111156200039e576200039e6200019d565b620003b681620003af8454620002f4565b8462000330565b602080601f831160018114620003ee5760008415620003d55750858301515b600019600386901b1c1916600185901b1785556200037a565b600085815260208120601f198616915b828110156200041f57888601518255948401946001909101908401620003fe565b50858210156200043e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620004a55781600019048211156200048957620004896200044e565b808516156200049757918102915b93841c939080029062000469565b509250929050565b600082620004be575060016200055d565b81620004cd575060006200055d565b8160018114620004e65760028114620004f15762000511565b60019150506200055d565b60ff8411156200050557620005056200044e565b50506001821b6200055d565b5060208310610133831016604e8410600b841016171562000536575081810a6200055d565b62000542838362000464565b80600019048211156200055957620005596200044e565b0290505b92915050565b6000620005718383620004ad565b9392505050565b60008160001904831182151516156200059557620005956200044e565b500290565b60008219821115620005b057620005b06200044e565b500190565b60805161120e62000602600039600081816101e40152818161046b0152818161051f015281816105b2015281816106720152818161070d015281816107a90152610c5e015261120e6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806395d89b41116100a2578063b085136711610071578063b085136714610261578063da9a6cf814610274578063dd62ed3e14610287578063de0e9a3e1461029a578063ea598cb0146102ad57600080fd5b806395d89b411461021e578063a457c2d714610226578063a4c0ed3614610239578063a9059cbb1461024e57600080fd5b8063313ce567116100e9578063313ce5671461018157806339509351146101905780634000aea0146101a357806370a08231146101b6578063776c23fb146101df57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102c0565b6040516101309190610f0a565b60405180910390f35b61014c610147366004610f7b565b610352565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c366004610fa5565b61036a565b60405160128152602001610130565b61014c61019e366004610f7b565b61038e565b61014c6101b1366004610fe1565b6103b0565b6101606101c4366004611068565b6001600160a01b031660009081526020819052604090205490565b6102067f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610130565b6101236103d1565b61014c610234366004610f7b565b6103e0565b61024c610247366004610fe1565b610460565b005b61014c61025c366004610f7b565b6104f8565b61016061026f36600461108a565b610506565b61016061028236600461108a565b610599565b6101606102953660046110a3565b6105e9565b61024c6102a836600461108a565b610614565b61024c6102bb36600461108a565b610787565b6060600380546102cf906110d6565b80601f01602080910402602001604051908101604052809291908181526020018280546102fb906110d6565b80156103485780601f1061031d57610100808354040283529160200191610348565b820191906000526020600020905b81548152906001019060200180831161032b57829003601f168201915b5050505050905090565b60003361036081858561082c565b5060019392505050565b600033610378858285610950565b6103838585856109c4565b506001949350505050565b6000336103608185856103a183836105e9565b6103ab9190611126565b61082c565b60006103bc85856104f8565b50843b15610383576103833386868686610b92565b6060600480546102cf906110d6565b600033816103ee82866105e9565b9050838110156104535760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610383828686840361082c565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104e85760405162461bcd60e51b815260206004820152602760248201527f53656e646572206d757374206265207374616b696e672064657269766174697660448201526632903a37b5b2b760c91b606482015260840161044a565b6104f28484610c00565b50505050565b6000336103608185856109c4565b60405163119c137760e31b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638ce09bb8906024015b602060405180830381865afa15801561056f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610593919061113e565b92915050565b604051631ae6f20560e31b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d737902890602401610552565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600081116106595760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b604482015260640161044a565b604051631ae6f20560e31b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d737902890602401602060405180830381865afa1580156106c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e5919061113e565b90506106f13383610cdd565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561075e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107829190611157565b505050565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af11580156107fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081e9190611157565b506108293382610c00565b50565b6001600160a01b03831661088e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161044a565b6001600160a01b0382166108ef5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161044a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061095c84846105e9565b905060001981146104f257818110156109b75760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161044a565b6104f2848484840361082c565b6001600160a01b038316610a285760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161044a565b6001600160a01b038216610a8a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161044a565b6001600160a01b03831660009081526020819052604090205481811015610b025760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161044a565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b39908490611126565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b8591815260200190565b60405180910390a36104f2565b604051635260769b60e11b815284906001600160a01b0382169063a4c0ed3690610bc6908990889088908890600401611179565b600060405180830381600087803b158015610be057600080fd5b505af1158015610bf4573d6000803e3d6000fd5b50505050505050505050565b60008111610c455760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b604482015260640161044a565b60405163119c137760e31b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638ce09bb890602401602060405180830381865afa158015610cad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd1919061113e565b90506107828382610e2b565b6001600160a01b038216610d3d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161044a565b6001600160a01b03821660009081526020819052604090205481811015610db15760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161044a565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610de09084906111c1565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b038216610e815760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161044a565b8060026000828254610e939190611126565b90915550506001600160a01b03821660009081526020819052604081208054839290610ec0908490611126565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b81811015610f3757858101830151858201604001528201610f1b565b81811115610f49576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610f7657600080fd5b919050565b60008060408385031215610f8e57600080fd5b610f9783610f5f565b946020939093013593505050565b600080600060608486031215610fba57600080fd5b610fc384610f5f565b9250610fd160208501610f5f565b9150604084013590509250925092565b60008060008060608587031215610ff757600080fd5b61100085610f5f565b935060208501359250604085013567ffffffffffffffff8082111561102457600080fd5b818701915087601f83011261103857600080fd5b81358181111561104757600080fd5b88602082850101111561105957600080fd5b95989497505060200194505050565b60006020828403121561107a57600080fd5b61108382610f5f565b9392505050565b60006020828403121561109c57600080fd5b5035919050565b600080604083850312156110b657600080fd5b6110bf83610f5f565b91506110cd60208401610f5f565b90509250929050565b600181811c908216806110ea57607f821691505b60208210810361110a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561113957611139611110565b500190565b60006020828403121561115057600080fd5b5051919050565b60006020828403121561116957600080fd5b8151801515811461108357600080fd5b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f191601019392505050565b6000828210156111d3576111d3611110565b50039056fea2646970667358221220d43995d8d6877cc43aa16e95fc61acda62eae1b5ddbe8bd14f7e0d62de1b1ba764736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c806395d89b41116100a2578063b085136711610071578063b085136714610261578063da9a6cf814610274578063dd62ed3e14610287578063de0e9a3e1461029a578063ea598cb0146102ad57600080fd5b806395d89b411461021e578063a457c2d714610226578063a4c0ed3614610239578063a9059cbb1461024e57600080fd5b8063313ce567116100e9578063313ce5671461018157806339509351146101905780634000aea0146101a357806370a08231146101b6578063776c23fb146101df57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102c0565b6040516101309190610f0a565b60405180910390f35b61014c610147366004610f7b565b610352565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c366004610fa5565b61036a565b60405160128152602001610130565b61014c61019e366004610f7b565b61038e565b61014c6101b1366004610fe1565b6103b0565b6101606101c4366004611068565b6001600160a01b031660009081526020819052604090205490565b6102067f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610130565b6101236103d1565b61014c610234366004610f7b565b6103e0565b61024c610247366004610fe1565b610460565b005b61014c61025c366004610f7b565b6104f8565b61016061026f36600461108a565b610506565b61016061028236600461108a565b610599565b6101606102953660046110a3565b6105e9565b61024c6102a836600461108a565b610614565b61024c6102bb36600461108a565b610787565b6060600380546102cf906110d6565b80601f01602080910402602001604051908101604052809291908181526020018280546102fb906110d6565b80156103485780601f1061031d57610100808354040283529160200191610348565b820191906000526020600020905b81548152906001019060200180831161032b57829003601f168201915b5050505050905090565b60003361036081858561082c565b5060019392505050565b600033610378858285610950565b6103838585856109c4565b506001949350505050565b6000336103608185856103a183836105e9565b6103ab9190611126565b61082c565b60006103bc85856104f8565b50843b15610383576103833386868686610b92565b6060600480546102cf906110d6565b600033816103ee82866105e9565b9050838110156104535760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610383828686840361082c565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104e85760405162461bcd60e51b815260206004820152602760248201527f53656e646572206d757374206265207374616b696e672064657269766174697660448201526632903a37b5b2b760c91b606482015260840161044a565b6104f28484610c00565b50505050565b6000336103608185856109c4565b60405163119c137760e31b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638ce09bb8906024015b602060405180830381865afa15801561056f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610593919061113e565b92915050565b604051631ae6f20560e31b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d737902890602401610552565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600081116106595760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b604482015260640161044a565b604051631ae6f20560e31b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d737902890602401602060405180830381865afa1580156106c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e5919061113e565b90506106f13383610cdd565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561075e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107829190611157565b505050565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af11580156107fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081e9190611157565b506108293382610c00565b50565b6001600160a01b03831661088e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161044a565b6001600160a01b0382166108ef5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161044a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061095c84846105e9565b905060001981146104f257818110156109b75760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161044a565b6104f2848484840361082c565b6001600160a01b038316610a285760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161044a565b6001600160a01b038216610a8a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161044a565b6001600160a01b03831660009081526020819052604090205481811015610b025760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161044a565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b39908490611126565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b8591815260200190565b60405180910390a36104f2565b604051635260769b60e11b815284906001600160a01b0382169063a4c0ed3690610bc6908990889088908890600401611179565b600060405180830381600087803b158015610be057600080fd5b505af1158015610bf4573d6000803e3d6000fd5b50505050505050505050565b60008111610c455760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b604482015260640161044a565b60405163119c137760e31b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638ce09bb890602401602060405180830381865afa158015610cad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd1919061113e565b90506107828382610e2b565b6001600160a01b038216610d3d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161044a565b6001600160a01b03821660009081526020819052604090205481811015610db15760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161044a565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610de09084906111c1565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b038216610e815760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161044a565b8060026000828254610e939190611126565b90915550506001600160a01b03821660009081526020819052604081208054839290610ec0908490611126565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b81811015610f3757858101830151858201604001528201610f1b565b81811115610f49576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610f7657600080fd5b919050565b60008060408385031215610f8e57600080fd5b610f9783610f5f565b946020939093013593505050565b600080600060608486031215610fba57600080fd5b610fc384610f5f565b9250610fd160208501610f5f565b9150604084013590509250925092565b60008060008060608587031215610ff757600080fd5b61100085610f5f565b935060208501359250604085013567ffffffffffffffff8082111561102457600080fd5b818701915087601f83011261103857600080fd5b81358181111561104757600080fd5b88602082850101111561105957600080fd5b95989497505060200194505050565b60006020828403121561107a57600080fd5b61108382610f5f565b9392505050565b60006020828403121561109c57600080fd5b5035919050565b600080604083850312156110b657600080fd5b6110bf83610f5f565b91506110cd60208401610f5f565b90509250929050565b600181811c908216806110ea57607f821691505b60208210810361110a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561113957611139611110565b500190565b60006020828403121561115057600080fd5b5051919050565b60006020828403121561116957600080fd5b8151801515811461108357600080fd5b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f191601019392505050565b6000828210156111d3576111d3611110565b50039056fea2646970667358221220d43995d8d6877cc43aa16e95fc61acda62eae1b5ddbe8bd14f7e0d62de1b1ba764736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getUnderlyingByWrapped(uint256)": {
        "params": {
          "_amount": "amount of wrapped tokens"
        },
        "returns": {
          "_0": "amount of unwrapped tokens"
        }
      },
      "getWrappedByUnderlying(uint256)": {
        "params": {
          "_amount": "amount of unwrapped tokens"
        },
        "returns": {
          "_0": "amount of wrapped tokens"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "onTokenTransfer(address,uint256,bytes)": {
        "params": {
          "_sender": "of the token transfer",
          "_value": "of the token transfer*"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "unwrap(uint256)": {
        "params": {
          "_amount": "amount of wrapped tokens to unwrap"
        }
      },
      "wrap(uint256)": {
        "params": {
          "_amount": "amount of unwrapped tokens to wrap"
        }
      }
    },
    "title": "Wrapped Staking Derivative Token",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getUnderlyingByWrapped(uint256)": {
        "notice": "Returns amount of unwrapped tokens for an amount of wrapped tokens"
      },
      "getWrappedByUnderlying(uint256)": {
        "notice": "Returns amount of wrapped tokens for an amount of unwrapped tokens"
      },
      "onTokenTransfer(address,uint256,bytes)": {
        "notice": "ERC677 implementation that proxies wrapping"
      },
      "unwrap(uint256)": {
        "notice": "unwraps tokens"
      },
      "wrap(uint256)": {
        "notice": "wraps tokens"
      }
    },
    "notice": "Wraps rebasing derivative tokens with a normal ERC20 token",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4355,
        "contract": "contracts/core/tokens/WrappedSDToken.sol:WrappedSDToken",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4361,
        "contract": "contracts/core/tokens/WrappedSDToken.sol:WrappedSDToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 4363,
        "contract": "contracts/core/tokens/WrappedSDToken.sol:WrappedSDToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 4365,
        "contract": "contracts/core/tokens/WrappedSDToken.sol:WrappedSDToken",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 4367,
        "contract": "contracts/core/tokens/WrappedSDToken.sol:WrappedSDToken",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}