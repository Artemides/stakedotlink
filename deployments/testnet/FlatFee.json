{
  "address": "0x270304641EF5F084A97c91442222887E3a02285b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feeBasisPoints",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_feeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "FeeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "currentRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setFeeBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x73afd6ba65e9ccfb25c2f2647ad260db533645ed9487b1615708ee8896447a6e",
  "receipt": {
    "to": null,
    "from": "0x11187eff852069a33d102476b2E8A9cc9167dAde",
    "contractAddress": "0x270304641EF5F084A97c91442222887E3a02285b",
    "transactionIndex": 0,
    "gasUsed": "255866",
    "logsBloom": "0x
    "blockHash": "0xd79199bf6a22a0d0d8c8362ba516ee93bdcf8d708583ea9a8135977e292cb8cf",
    "transactionHash": "0x73afd6ba65e9ccfb25c2f2647ad260db533645ed9487b1615708ee8896447a6e",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 989500,
        "transactionHash": "0x73afd6ba65e9ccfb25c2f2647ad260db533645ed9487b1615708ee8896447a6e",
        "address": "0x270304641EF5F084A97c91442222887E3a02285b",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000011187eff852069a33d102476b2e8a9cc9167dade"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xd79199bf6a22a0d0d8c8362ba516ee93bdcf8d708583ea9a8135977e292cb8cf"
      }
    ],
    "blockNumber": 989500,
    "cumulativeGasUsed": "255866",
    "status": 1,
    "byzantium": true
  },
  "args": [
    0
  ],
  "numDeployments": 1,
  "solcInputHash": "716f7ec369ec5237ed83445c47c46fa6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeBasisPoints\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_feeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"FeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"currentRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setFeeBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"currentRate(uint256)\":{\"returns\":{\"_0\":\"current rate*\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFeeBasisPoints(uint256)\":{\"params\":{\"_feeBasisPoints\":\"*\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Flat Fee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"currentRate(uint256)\":{\"notice\":\"returns the flat fee\"},\"setFeeBasisPoints(uint256)\":{\"notice\":\"sets the fee basis points\"}},\"notice\":\"Sets a flat fee\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/feeCurves/Flat.sol\":\"FlatFee\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/core/feeCurves/Flat.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title Flat Fee\\n * @notice Sets a flat fee\\n */\\ncontract FlatFee is Ownable {\\n    uint public feeBasisPoints;\\n\\n    event FeeSet(uint _feeBasisPoints);\\n\\n    constructor(uint _feeBasisPoints) {\\n        feeBasisPoints = _feeBasisPoints;\\n    }\\n\\n    /**\\n     * @notice sets the fee basis points\\n     * @param _feeBasisPoints\\n     **/\\n    function setFeeBasisPoints(uint _feeBasisPoints) public onlyOwner {\\n        require(_feeBasisPoints >= 0 && _feeBasisPoints <= 9500, \\\"Invalid flat fee\\\");\\n        feeBasisPoints = _feeBasisPoints;\\n        emit FeeSet(_feeBasisPoints);\\n    }\\n\\n    /**\\n     * @notice returns the flat fee\\n     * @return current rate\\n     **/\\n    function currentRate(uint) external view returns (uint) {\\n        return feeBasisPoints;\\n    }\\n}\\n\",\"keccak256\":\"0x7d6a16ebb8c3fcc522ea6fd7f31debef86b5becbaaa6d2c419a31e1d6af92959\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516103de3803806103de83398101604081905261002f91610090565b61003833610040565b6001556100a9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100a257600080fd5b5051919050565b610326806100b86000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630165dd2714610067578063246f938f1461007c578063715018a6146100a45780638da5cb5b146100ac578063b8606eef146100c7578063f2fde38b146100d0575b600080fd5b61007a6100753660046102a7565b6100e3565b005b61009161008a3660046102a7565b5060015490565b6040519081526020015b60405180910390f35b61007a610170565b6000546040516001600160a01b03909116815260200161009b565b61009160015481565b61007a6100de3660046102c0565b610184565b6100eb6101fd565b61251c8111156101355760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420666c61742066656560801b60448201526064015b60405180910390fd5b60018190556040518181527f20461e09b8e557b77e107939f9ce6544698123aad0fc964ac5cc59b7df2e608f9060200160405180910390a150565b6101786101fd565b6101826000610257565b565b61018c6101fd565b6001600160a01b0381166101f15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161012c565b6101fa81610257565b50565b6000546001600160a01b031633146101825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161012c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102b957600080fd5b5035919050565b6000602082840312156102d257600080fd5b81356001600160a01b03811681146102e957600080fd5b939250505056fea2646970667358221220e148e3ef463855e4feece17d897f436888e501a1a97b8368131e0f507e76e32464736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630165dd2714610067578063246f938f1461007c578063715018a6146100a45780638da5cb5b146100ac578063b8606eef146100c7578063f2fde38b146100d0575b600080fd5b61007a6100753660046102a7565b6100e3565b005b61009161008a3660046102a7565b5060015490565b6040519081526020015b60405180910390f35b61007a610170565b6000546040516001600160a01b03909116815260200161009b565b61009160015481565b61007a6100de3660046102c0565b610184565b6100eb6101fd565b61251c8111156101355760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420666c61742066656560801b60448201526064015b60405180910390fd5b60018190556040518181527f20461e09b8e557b77e107939f9ce6544698123aad0fc964ac5cc59b7df2e608f9060200160405180910390a150565b6101786101fd565b6101826000610257565b565b61018c6101fd565b6001600160a01b0381166101f15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161012c565b6101fa81610257565b50565b6000546001600160a01b031633146101825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161012c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102b957600080fd5b5035919050565b6000602082840312156102d257600080fd5b81356001600160a01b03811681146102e957600080fd5b939250505056fea2646970667358221220e148e3ef463855e4feece17d897f436888e501a1a97b8368131e0f507e76e32464736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "currentRate(uint256)": {
        "returns": {
          "_0": "current rate*"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setFeeBasisPoints(uint256)": {
        "params": {
          "_feeBasisPoints": "*"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Flat Fee",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "currentRate(uint256)": {
        "notice": "returns the flat fee"
      },
      "setFeeBasisPoints(uint256)": {
        "notice": "sets the fee basis points"
      }
    },
    "notice": "Sets a flat fee",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3767,
        "contract": "contracts/core/feeCurves/Flat.sol:FlatFee",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 19361,
        "contract": "contracts/core/feeCurves/Flat.sol:FlatFee",
        "label": "feeBasisPoints",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}