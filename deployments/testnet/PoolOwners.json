{
  "address": "0x3aD797AeDE5004aBDDCBA18Ff973A74c766893Cc",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_derivativeTokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_derivativeTokenSymbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardsPool",
          "type": "address"
        }
      ],
      "name": "AddToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "approver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "RedirectApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "approver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "RedirectApprovalRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardsPool",
          "type": "address"
        }
      ],
      "name": "RemoveToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        }
      ],
      "name": "RewardsRedirected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WithdrawRewards",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardsPool",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "approveRedirect",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "distributeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "name": "distributeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "isTokenSupported",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "redirectApprovals",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "redirectRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "redirectRewardsFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "redirectedStakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "removeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revokeRedirectApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "rewardsAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "staked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supportedTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC677",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenBalances",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenPools",
      "outputs": [
        {
          "internalType": "contract IRewardsPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "name": "withdrawRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "withdrawableRewards",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa61e84d4a892bbc9bb4ae93e52d0a70a93c28b449f4bf8eea1e6516d9c879389",
  "receipt": {
    "to": null,
    "from": "0x11187eff852069a33d102476b2E8A9cc9167dAde",
    "contractAddress": "0x3aD797AeDE5004aBDDCBA18Ff973A74c766893Cc",
    "transactionIndex": 0,
    "gasUsed": "2393273",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000400000000000000000020000000000000000000000000000008000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000010000000400000000000000000000000080000000000000010000000000000000000000000400000000000000000000020000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x93719318038a8b5738fa7145f263021fb057a2ddf607c064a74095aee2e4bc50",
    "transactionHash": "0xa61e84d4a892bbc9bb4ae93e52d0a70a93c28b449f4bf8eea1e6516d9c879389",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 53241,
        "transactionHash": "0xa61e84d4a892bbc9bb4ae93e52d0a70a93c28b449f4bf8eea1e6516d9c879389",
        "address": "0x3aD797AeDE5004aBDDCBA18Ff973A74c766893Cc",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000011187eff852069a33d102476b2e8a9cc9167dade"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x93719318038a8b5738fa7145f263021fb057a2ddf607c064a74095aee2e4bc50"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 53241,
        "transactionHash": "0xa61e84d4a892bbc9bb4ae93e52d0a70a93c28b449f4bf8eea1e6516d9c879389",
        "address": "0x3aD797AeDE5004aBDDCBA18Ff973A74c766893Cc",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000011187eff852069a33d102476b2e8a9cc9167dade"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 1,
        "blockHash": "0x93719318038a8b5738fa7145f263021fb057a2ddf607c064a74095aee2e4bc50"
      }
    ],
    "blockNumber": 53241,
    "cumulativeGasUsed": "2393273",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xE90240992c7E35a32Ba65803Ca47082C0fDd6108",
    "Staked LPL",
    "stLPL"
  ],
  "numDeployments": 1,
  "solcInputHash": "0a37d7b84716f05cf659a85de2a0982e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_derivativeTokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_derivativeTokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardsPool\",\"type\":\"address\"}],\"name\":\"AddToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"RedirectApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"RedirectApprovalRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardsPool\",\"type\":\"address\"}],\"name\":\"RemoveToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"}],\"name\":\"RewardsRedirected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WithdrawRewards\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsPool\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"approveRedirect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"distributeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"distributeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"redirectApprovals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"redirectRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"redirectRewardsFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"redirectedStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokeRedirectApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"rewardsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"staked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC677\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBalances\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenPools\",\"outputs\":[{\"internalType\":\"contract IRewardsPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"withdrawableRewards\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addToken(address,address)\":{\"params\":{\"_rewardsPool\":\"token rewards pool to add*\",\"_token\":\"token to add\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"approveRedirect(address)\":{\"params\":{\"_to\":\"account to approve\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"distributeToken(address)\":{\"params\":{\"_token\":\"token address\"}},\"distributeTokens(address[])\":{\"params\":{\"_tokens\":\"list of token addresses\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isTokenSupported(address)\":{\"params\":{\"_token\":\"token address\"},\"returns\":{\"_0\":\"is token supported*\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"onTokenTransfer(address,uint256,bytes)\":{\"params\":{\"_sender\":\"of the token transfer\",\"_value\":\"of the token transfer*\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"redirectRewards(address)\":{\"params\":{\"_to\":\"account to redirect rewards to\"}},\"redirectRewardsFrom(address,address)\":{\"params\":{\"_from\":\"account to redirect rewards for\",\"_to\":\"account to redirect rewards to\"}},\"removeToken(address)\":{\"params\":{\"_token\":\"address of token*\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rewardsAddress(address)\":{\"params\":{\"_account\":\"address to query\"}},\"stake(uint256)\":{\"params\":{\"_amount\":\"amount to stake*\"}},\"staked(address)\":{\"details\":\"required by RewardsPoolController\",\"returns\":{\"_0\":\"account's staked amount\"}},\"supportedTokens()\":{\"returns\":{\"_0\":\"list of token configs*\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"tokenBalances()\":{\"returns\":{\"_0\":\"list of tokens with a list of token balances*\"}},\"totalStaked()\":{\"details\":\"required by RewardsPoolController\",\"returns\":{\"_0\":\"total staked amount\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"params\":{\"_amount\":\"amount to withdraw*\"}},\"withdrawRewards(address[])\":{\"params\":{\"_tokens\":\"list of token addresses to withdraw rewards from*\"}},\"withdrawableRewards(address)\":{\"params\":{\"_account\":\"account to return reward amounts for\"},\"returns\":{\"_0\":\"list of withdrawable reward amounts*\"}}},\"title\":\"Pool Owners\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToken(address,address)\":{\"notice\":\"adds a new token\"},\"approveRedirect(address)\":{\"notice\":\"approve a reward redirect\"},\"distributeToken(address)\":{\"notice\":\"distributes a token balance to its equivalent reward pool\"},\"distributeTokens(address[])\":{\"notice\":\"distributes token balances to their equivalent reward pools\"},\"isTokenSupported(address)\":{\"notice\":\"returns true/false to whether a given token is supported\"},\"onTokenTransfer(address,uint256,bytes)\":{\"notice\":\"ERC677 implementation that proxies staking\"},\"redirectRewards(address)\":{\"notice\":\"redirect rewards to a specific address. Supports multiple addresses redirecting to the same previousRedirect. To stop redirecting rewards, set _to as the current wallet.\"},\"redirectRewardsFrom(address,address)\":{\"notice\":\"redirect rewards for an account with approval\"},\"removeToken(address)\":{\"notice\":\"removes a supported token\"},\"revokeRedirectApproval()\":{\"notice\":\"revoke a redirect approval\"},\"rewardsAddress(address)\":{\"notice\":\"returns the address that receives rewards for an account\"},\"stake(uint256)\":{\"notice\":\"stakes owners tokens & mints allowance tokens\"},\"staked(address)\":{\"notice\":\"returns an account's staked amount for use by reward pools controlled by this contract. If rewards are redirected, it returns the sum of the amount staked by all of the accounts that have redirected rewards.\"},\"supportedTokens()\":{\"notice\":\"returns a list of configs for all supported tokens\"},\"tokenBalances()\":{\"notice\":\"get all token balances of supported tokens within the controller\"},\"totalStaked()\":{\"notice\":\"returns the total staked amount for use by reward pools controlled by this contract\"},\"withdraw(uint256)\":{\"notice\":\"burns allowance tokens and withdraws staked owners tokens\"},\"withdrawRewards(address[])\":{\"notice\":\"withdraws an account's earned rewards for a list of tokens\"},\"withdrawableRewards(address)\":{\"notice\":\"returns a list of withdrawable rewards for an account\"}},\"notice\":\"Handles owners token staking & rewards distribution\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/PoolOwners.sol\":\"PoolOwners\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/core/PoolOwners.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nimport \\\"./interfaces/IERC677.sol\\\";\\nimport \\\"./base/RewardsPoolController.sol\\\";\\nimport \\\"./tokens/base/ERC677.sol\\\";\\n\\n/**\\n * @title Pool Owners\\n * @notice Handles owners token staking & rewards distribution\\n */\\ncontract PoolOwners is RewardsPoolController {\\n    using SafeERC20 for IERC677;\\n\\n    IERC677 public immutable token;\\n\\n    event Stake(address indexed account, uint amount);\\n    event Withdraw(address indexed account, uint amount);\\n\\n    constructor(\\n        address _token,\\n        string memory _derivativeTokenName,\\n        string memory _derivativeTokenSymbol\\n    ) RewardsPoolController(_derivativeTokenName, _derivativeTokenSymbol) {\\n        token = IERC677(_token);\\n    }\\n\\n    /**\\n     * @notice ERC677 implementation that proxies staking\\n     * @param _sender of the token transfer\\n     * @param _value of the token transfer\\n     **/\\n    function onTokenTransfer(\\n        address _sender,\\n        uint _value,\\n        bytes calldata\\n    ) external override {\\n        require(\\n            msg.sender == address(token) || isTokenSupported(msg.sender),\\n            \\\"Sender must be staking token or supported rewards token\\\"\\n        );\\n        if (msg.sender == address(token)) {\\n            _stake(_sender, _value);\\n        } else {\\n            distributeToken(msg.sender);\\n        }\\n    }\\n\\n    /**\\n     * @notice stakes owners tokens & mints allowance tokens\\n     * @param _amount amount to stake\\n     **/\\n    function stake(uint _amount) external {\\n        token.safeTransferFrom(msg.sender, address(this), _amount);\\n        _stake(msg.sender, _amount);\\n    }\\n\\n    /**\\n     * @notice burns allowance tokens and withdraws staked owners tokens\\n     * @param _amount amount to withdraw\\n     **/\\n    function withdraw(uint _amount) public updateRewards(msg.sender) {\\n        _burn(msg.sender, _amount);\\n        token.safeTransfer(msg.sender, _amount);\\n        emit Withdraw(msg.sender, _amount);\\n    }\\n\\n    /**\\n     * @notice stakes owners tokens & mints allowance tokens\\n     * @param _account account to stake for\\n     * @param _amount amount to stake\\n     **/\\n    function _stake(address _account, uint _amount) private updateRewards(_account) {\\n        _mint(_account, _amount);\\n        emit Stake(_account, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0xef7e03d2eb3f519703111942df2ba56ea75be26803807495f7aaac8ce619ea36\",\"license\":\"UNLICENSED\"},\"contracts/core/RewardsPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nimport \\\"./interfaces/IRewardsPoolController.sol\\\";\\n\\n/**\\n * @title RewardsPool\\n * @notice Handles reward distribution for a single asset\\n * @dev rewards can only be positive (user balances can only increase)\\n */\\ncontract RewardsPool {\\n    using SafeERC20 for IERC677;\\n\\n    IERC677 public immutable token;\\n    IRewardsPoolController public immutable controller;\\n\\n    uint public rewardPerToken;\\n    uint public totalRewards;\\n    mapping(address => uint) public userRewardPerTokenPaid;\\n    mapping(address => uint) public userRewards;\\n\\n    event Withdraw(address indexed account, uint amount);\\n    event DistributeRewards(address indexed sender, uint256 amountStaked, uint256 amount);\\n\\n    constructor(address _controller, address _token) {\\n        controller = IRewardsPoolController(_controller);\\n        token = IERC677(_token);\\n    }\\n\\n    /**\\n     * @notice returns an account's total withdrawable rewards (principal balance + newly earned rewards)\\n     * @param _account account to return rewards for\\n     * @return account's total unclaimed rewards\\n     **/\\n    function withdrawableRewards(address _account) public view returns (uint) {\\n        return\\n            (controller.staked(_account) * (rewardPerToken - userRewardPerTokenPaid[_account])) /\\n            1e18 +\\n            userRewards[_account];\\n    }\\n\\n    /**\\n     * @notice withdraws an account's earned rewards\\n     **/\\n    function withdraw() external {\\n        uint256 toWithdraw = withdrawableRewards(msg.sender);\\n        require(toWithdraw > 0, \\\"No rewards to withdraw\\\");\\n\\n        _withdraw(msg.sender, toWithdraw);\\n    }\\n\\n    /**\\n     * @notice withdraws an account's earned rewards\\n     * @dev used by PoolOwners\\n     * @param _account account to withdraw for\\n     **/\\n    function withdraw(address _account) external {\\n        require(msg.sender == address(controller), \\\"Controller only\\\");\\n\\n        uint256 toWithdraw = withdrawableRewards(_account);\\n\\n        if (toWithdraw > 0) {\\n            _withdraw(_account, toWithdraw);\\n        }\\n    }\\n\\n    /**\\n     * @notice ERC677 implementation that proxies reward distribution\\n     **/\\n    function onTokenTransfer(\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external {\\n        require(msg.sender == address(token), \\\"Only callable by token\\\");\\n        distributeRewards();\\n    }\\n\\n    /**\\n     * @notice distributes new rewards that have been deposited\\n     **/\\n    function distributeRewards() public {\\n        require(controller.totalStaked() > 0, \\\"Cannot distribute when nothing is staked\\\");\\n        uint256 toDistribute = token.balanceOf(address(this)) - totalRewards;\\n        totalRewards += toDistribute;\\n        _updateRewardPerToken(toDistribute);\\n        emit DistributeRewards(msg.sender, controller.totalStaked(), toDistribute);\\n    }\\n\\n    /**\\n     * @notice updates an account's principal reward balance\\n     * @param _account account to update for\\n     **/\\n    function updateReward(address _account) public virtual {\\n        uint newRewards = withdrawableRewards(_account) - userRewards[_account];\\n        if (newRewards > 0) {\\n            userRewards[_account] += newRewards;\\n        }\\n        userRewardPerTokenPaid[_account] = rewardPerToken;\\n    }\\n\\n    /**\\n     * @notice withdraws rewards for an account\\n     * @param _account account to withdraw for\\n     * @param _amount amount to withdraw\\n     **/\\n    function _withdraw(address _account, uint _amount) internal {\\n        updateReward(_account);\\n        userRewards[_account] -= _amount;\\n        totalRewards -= _amount;\\n        token.safeTransfer(_account, _amount);\\n        emit Withdraw(_account, _amount);\\n    }\\n\\n    /**\\n     * @notice updates rewardPerToken\\n     * @param _reward deposited reward amount\\n     **/\\n    function _updateRewardPerToken(uint _reward) internal {\\n        uint totalStaked = controller.totalStaked();\\n        require(totalStaked > 0, \\\"Staked amount must be > 0\\\");\\n        rewardPerToken += ((_reward * 1e18) / totalStaked);\\n    }\\n}\\n\",\"keccak256\":\"0xc5af41fecc5a0a64c965f2bde297719c996ef20cf66f785e6286f59e80deb820\",\"license\":\"UNLICENSED\"},\"contracts/core/base/RewardsPoolController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"../interfaces/IRewardsPoolController.sol\\\";\\nimport \\\"../interfaces/IRewardsPool.sol\\\";\\nimport \\\"../RewardsPool.sol\\\";\\nimport \\\"../tokens/base/ERC677.sol\\\";\\n\\n/**\\n * @title Rewards Pool Controller\\n * @notice Acts as a proxy for any number of rewards pools\\n */\\nabstract contract RewardsPoolController is Ownable, IRewardsPoolController, ERC677 {\\n    using SafeERC20 for IERC20;\\n\\n    mapping(address => IRewardsPool) public tokenPools;\\n    address[] private tokens;\\n\\n    mapping(address => address) private rewardRedirects;\\n    mapping(address => uint) public redirectedStakes;\\n    mapping(address => address) public redirectApprovals;\\n\\n    event WithdrawRewards(address indexed account);\\n    event AddToken(address indexed token, address rewardsPool);\\n    event RemoveToken(address indexed token, address rewardsPool);\\n\\n    event RedirectApproval(address indexed approver, address indexed to);\\n    event RedirectApprovalRevoked(address indexed approver, address indexed from);\\n    event RewardsRedirected(address indexed from, address indexed to, address indexed by);\\n\\n    modifier updateRewards(address _account) {\\n        _updateRewards(_account);\\n        _;\\n    }\\n\\n    constructor(string memory _derivativeTokenName, string memory _derivativeTokenSymbol)\\n        ERC677(_derivativeTokenName, _derivativeTokenSymbol, 0)\\n    {}\\n\\n    /**\\n     * @notice returns a list of configs for all supported tokens\\n     * @return list of token configs\\n     **/\\n    function supportedTokens() external view returns (address[] memory) {\\n        return tokens;\\n    }\\n\\n    /**\\n     * @notice returns true/false to whether a given token is supported\\n     * @param _token token address\\n     * @return is token supported\\n     **/\\n    function isTokenSupported(address _token) public view returns (bool) {\\n        return address(tokenPools[_token]) != address(0) ? true : false;\\n    }\\n\\n    /**\\n     * @notice get all token balances of supported tokens within the controller\\n     * @return list of tokens with a list of token balances\\n     **/\\n    function tokenBalances() external view returns (address[] memory, uint[] memory) {\\n        uint[] memory balances = new uint[](tokens.length);\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            balances[i] = IERC20(tokens[i]).balanceOf(address(this));\\n        }\\n\\n        return (tokens, balances);\\n    }\\n\\n    function onTokenTransfer(\\n        address _sender,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) external virtual {\\n        if (isTokenSupported(msg.sender)) {\\n            distributeToken(msg.sender);\\n        }\\n    }\\n\\n    /**\\n     * @notice returns an account's staked amount for use by reward pools\\n     * controlled by this contract. If rewards are redirected, it returns the sum of the amount\\n     * staked by all of the accounts that have redirected rewards.\\n     * @dev required by RewardsPoolController\\n     * @return account's staked amount\\n     */\\n    function staked(address _account) external view virtual returns (uint) {\\n        return (rewardRedirects[_account] == address(0) ? balanceOf(_account) : 0) + redirectedStakes[_account];\\n    }\\n\\n    /**\\n     * @notice returns the total staked amount for use by reward pools\\n     * controlled by this contract\\n     * @dev required by RewardsPoolController\\n     * @return total staked amount\\n     */\\n    function totalStaked() external view virtual returns (uint) {\\n        return totalSupply();\\n    }\\n\\n    /**\\n     * @notice returns the address that receives rewards for an account\\n     * @param _account address to query\\n     */\\n    function rewardsAddress(address _account) external view returns (address) {\\n        return rewardRedirects[_account] != address(0) ? rewardRedirects[_account] : _account;\\n    }\\n\\n    /**\\n     * @dev updates the rewards of the sender and previousRedirect, also updates redirected staked amounts\\n     * if rewards are redirected\\n     * @param _from account sending from\\n     * @param _to account sending to\\n     * @param _amount amount being sent\\n     */\\n    function _transfer(\\n        address _from,\\n        address _to,\\n        uint256 _amount\\n    ) internal virtual override updateRewards(_from) updateRewards(_to) {\\n        address rewardRedirectFrom = rewardRedirects[_from];\\n        address rewardRedirectTo = rewardRedirects[_to];\\n\\n        if (rewardRedirectFrom != address(0)) {\\n            _updateRewards(rewardRedirectFrom);\\n            redirectedStakes[rewardRedirectFrom] -= _amount;\\n        }\\n        if (rewardRedirectTo != address(0)) {\\n            _updateRewards(rewardRedirectTo);\\n            redirectedStakes[rewardRedirectTo] += _amount;\\n        }\\n\\n        super._transfer(_from, _to, _amount);\\n    }\\n\\n    /**\\n     * @notice redirect rewards to a specific address. Supports multiple addresses redirecting to the same previousRedirect.\\n     * To stop redirecting rewards, set _to as the current wallet.\\n     * @param _to account to redirect rewards to\\n     */\\n    function redirectRewards(address _to) external {\\n        _redirectRewards(msg.sender, _to);\\n    }\\n\\n    /**\\n     * @notice redirect rewards for an account with approval\\n     * @param _from account to redirect rewards for\\n     * @param _to account to redirect rewards to\\n     */\\n    function redirectRewardsFrom(address _from, address _to) external {\\n        require(redirectApprovals[_from] == msg.sender, \\\"Approval required to redirect rewards\\\");\\n        delete (redirectApprovals[_from]);\\n        _redirectRewards(_from, _to);\\n    }\\n\\n    /**\\n     * @notice approve a reward redirect\\n     * @param _to account to approve\\n     */\\n    function approveRedirect(address _to) external {\\n        redirectApprovals[msg.sender] = _to;\\n        emit RedirectApproval(msg.sender, _to);\\n    }\\n\\n    /**\\n     * @notice revoke a redirect approval\\n     */\\n    function revokeRedirectApproval() external {\\n        address revokedFrom = redirectApprovals[msg.sender];\\n        delete (redirectApprovals[msg.sender]);\\n        emit RedirectApprovalRevoked(msg.sender, revokedFrom);\\n    }\\n\\n    /**\\n     * @notice distributes token balances to their equivalent reward pools\\n     * @param _tokens list of token addresses\\n     */\\n    function distributeTokens(address[] memory _tokens) public {\\n        for (uint i = 0; i < _tokens.length; i++) {\\n            distributeToken(_tokens[i]);\\n        }\\n    }\\n\\n    /**\\n     * @notice distributes a token balance to its equivalent reward pool\\n     * @param _token token address\\n     */\\n    function distributeToken(address _token) public {\\n        require(isTokenSupported(_token), \\\"Token not supported\\\");\\n\\n        IERC20 token = IERC20(_token);\\n        uint balance = token.balanceOf(address(this));\\n        require(balance > 0, \\\"Cannot distribute zero balance\\\");\\n\\n        token.safeTransfer(address(tokenPools[_token]), balance);\\n        tokenPools[_token].distributeRewards();\\n    }\\n\\n    /**\\n     * @notice returns a list of withdrawable rewards for an account\\n     * @param _account account to return reward amounts for\\n     * @return list of withdrawable reward amounts\\n     **/\\n    function withdrawableRewards(address _account) external view returns (uint[] memory) {\\n        uint[] memory withdrawable = new uint[](tokens.length);\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            withdrawable[i] = tokenPools[tokens[i]].withdrawableRewards(_account);\\n        }\\n\\n        return withdrawable;\\n    }\\n\\n    /**\\n     * @notice withdraws an account's earned rewards for a list of tokens\\n     * @param _tokens list of token addresses to withdraw rewards from\\n     **/\\n    function withdrawRewards(address[] memory _tokens) public {\\n        for (uint i = 0; i < _tokens.length; i++) {\\n            tokenPools[_tokens[i]].withdraw(msg.sender);\\n        }\\n        emit WithdrawRewards(msg.sender);\\n    }\\n\\n    /**\\n     * @notice adds a new token\\n     * @param _token token to add\\n     * @param _rewardsPool token rewards pool to add\\n     **/\\n    function addToken(address _token, address _rewardsPool) public onlyOwner {\\n        require(!isTokenSupported(_token), \\\"Token is already supported\\\");\\n\\n        tokenPools[_token] = IRewardsPool(_rewardsPool);\\n        tokens.push(_token);\\n\\n        if (IERC20(_token).balanceOf(address(this)) > 0) {\\n            distributeToken(_token);\\n        }\\n\\n        emit AddToken(_token, _rewardsPool);\\n    }\\n\\n    /**\\n     * @notice removes a supported token\\n     * @param _token address of token\\n     **/\\n    function removeToken(address _token) external onlyOwner {\\n        require(isTokenSupported(_token), \\\"Token is not supported\\\");\\n\\n        IRewardsPool rewardsPool = tokenPools[_token];\\n        delete (tokenPools[_token]);\\n        for (uint i = 0; i < tokens.length; i++) {\\n            if (tokens[i] == _token) {\\n                tokens[i] = tokens[tokens.length - 1];\\n                tokens.pop();\\n                break;\\n            }\\n        }\\n\\n        emit RemoveToken(_token, address(rewardsPool));\\n    }\\n\\n    /**\\n     * @notice redirect rewards to a specific account from an account\\n     * @param _from account that's redirecting rewards\\n     * @param _to account to redirect rewards to\\n     */\\n    function _redirectRewards(address _from, address _to) internal updateRewards(_from) updateRewards(_to) {\\n        require(_to != address(0), \\\"Cannot burn rewards\\\");\\n        require(rewardRedirects[_from] != _to, \\\"Cannot redirect rewards to the same address\\\");\\n        require(rewardRedirects[_from] == address(0) ? (_from != _to) : true, \\\"Cannot redirect to self\\\");\\n\\n        uint balanceFrom = balanceOf(_from);\\n        require(balanceFrom > 0, \\\"A balance is required to redirect rewards\\\");\\n\\n        address previousRedirect = rewardRedirects[_from];\\n        if (previousRedirect != address(0)) {\\n            _updateRewards(previousRedirect);\\n            redirectedStakes[previousRedirect] -= balanceFrom;\\n        }\\n\\n        if (_to == _from) {\\n            delete (rewardRedirects[_from]);\\n        } else {\\n            rewardRedirects[_from] = _to;\\n            redirectedStakes[_to] += balanceFrom;\\n        }\\n\\n        emit RewardsRedirected(_from, _to, msg.sender);\\n    }\\n\\n    /**\\n     * @dev triggers a reward update for a given account\\n     * @param _account account to update rewards for\\n     */\\n    function _updateRewards(address _account) internal {\\n        for (uint i = 0; i < tokens.length; i++) {\\n            tokenPools[tokens[i]].updateReward(_account);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9af88ae8fb0f8144a58be30bb6398f358cd0ac8b7cc65323c92ce36dcce2bc7b\",\"license\":\"UNLICENSED\"},\"contracts/core/interfaces/IERC677.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC677 is IERC20 {\\n    function transferAndCall(\\n        address _to,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0x85fb796082bc45f2eb85a84af73983fdfefed6ff9acbc936373d45360a5973cf\",\"license\":\"UNLICENSED\"},\"contracts/core/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\ninterface IERC677Receiver {\\n    function onTokenTransfer(\\n        address _sender,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f02ee4c32eb96a3f6d6d16cc8b90f48b971d2b3ad99afc3bd3c6d0789fa3d66\",\"license\":\"UNLICENSED\"},\"contracts/core/interfaces/IRewardsPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\ninterface IRewardsPool {\\n    function updateReward(address _account) external;\\n\\n    function withdraw(address _account) external;\\n\\n    function distributeRewards() external;\\n\\n    function withdrawableRewards(address _account) external view returns (uint);\\n}\\n\",\"keccak256\":\"0x0c4a87c4a4f6007ca4648bbaa3fe0f88fcaee3e54d52b73c4994763969bf5d15\",\"license\":\"UNLICENSED\"},\"contracts/core/interfaces/IRewardsPoolController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"./IERC677.sol\\\";\\n\\ninterface IRewardsPoolController {\\n    /**\\n     * @notice returns an account's stake balance for use by reward pools\\n     * controlled by this contract\\n     * @return account's balance\\n     */\\n    function staked(address _account) external view returns (uint);\\n\\n    /**\\n     * @notice returns the total staked amount for use by reward pools\\n     * controlled by this contract\\n     * @return total staked amount\\n     */\\n    function totalStaked() external view returns (uint);\\n\\n    /**\\n     * @notice adds a new token\\n     * @param _token token to add\\n     * @param _rewardsPool token rewards pool to add\\n     **/\\n    function addToken(address _token, address _rewardsPool) external;\\n}\\n\",\"keccak256\":\"0x1f903f56807f5cbb766a39eae51b30832ee28e3d6de8b6db25f712dc2768e7eb\",\"license\":\"UNLICENSED\"},\"contracts/core/tokens/base/ERC677.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\nimport \\\"../../interfaces/IERC677Receiver.sol\\\";\\nimport \\\"../../interfaces/IERC677.sol\\\";\\n\\ncontract ERC677 is IERC677, ERC20 {\\n    constructor(\\n        string memory _tokenName,\\n        string memory _tokenSymbol,\\n        uint _totalSupply\\n    ) ERC20(_tokenName, _tokenSymbol) {\\n        _mint(msg.sender, _totalSupply * (10**uint256(decimals())));\\n    }\\n\\n    function transferAndCall(\\n        address _to,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) public override returns (bool) {\\n        super.transfer(_to, _value);\\n        if (isContract(_to)) {\\n            contractFallback(msg.sender, _to, _value, _data);\\n        }\\n        return true;\\n    }\\n\\n    function contractFallback(\\n        address _sender,\\n        address _to,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) internal {\\n        IERC677Receiver receiver = IERC677Receiver(_to);\\n        receiver.onTokenTransfer(_sender, _value, _data);\\n    }\\n\\n    function isContract(address _addr) internal view returns (bool hasCode) {\\n        uint256 length;\\n        assembly {\\n            length := extcodesize(_addr)\\n        }\\n        return length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x999338358bb5a20f980932ecb8ea69d5a53b69fa3e82f757ceedd0fde6d17871\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162002ecf38038062002ecf8339810160408190526200003491620002c9565b81818181600082826200004733620000ba565b6004620000558382620003e1565b506005620000648282620003e1565b5050506200009e336200007c6200010a60201b60201c565b6200008c9060ff16600a620005c2565b620000989084620005d7565b6200010f565b5050506001600160a01b03909416608052506200061492505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b601290565b6001600160a01b0382166200016a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600360008282546200017e9190620005f9565b90915550506001600160a01b03821660009081526001602052604081208054839290620001ad908490620005f9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200022457600080fd5b81516001600160401b0380821115620002415762000241620001fc565b604051601f8301601f19908116603f011681019082821181831017156200026c576200026c620001fc565b816040528381526020925086838588010111156200028957600080fd5b600091505b83821015620002ad57858201830151818301840152908201906200028e565b83821115620002bf5760008385830101525b9695505050505050565b600080600060608486031215620002df57600080fd5b83516001600160a01b0381168114620002f757600080fd5b60208501519093506001600160401b03808211156200031557600080fd5b620003238783880162000212565b935060408601519150808211156200033a57600080fd5b50620003498682870162000212565b9150509250925092565b600181811c908216806200036857607f821691505b6020821081036200038957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001f757600081815260208120601f850160051c81016020861015620003b85750805b601f850160051c820191505b81811015620003d957828155600101620003c4565b505050505050565b81516001600160401b03811115620003fd57620003fd620001fc565b62000415816200040e845462000353565b846200038f565b602080601f8311600181146200044d5760008415620004345750858301515b600019600386901b1c1916600185901b178555620003d9565b600085815260208120601f198616915b828110156200047e578886015182559484019460019091019084016200045d565b50858210156200049d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000504578160001904821115620004e857620004e8620004ad565b80851615620004f657918102915b93841c9390800290620004c8565b509250929050565b6000826200051d57506001620005bc565b816200052c57506000620005bc565b8160018114620005455760028114620005505762000570565b6001915050620005bc565b60ff841115620005645762000564620004ad565b50506001821b620005bc565b5060208310610133831016604e8410600b841016171562000595575081810a620005bc565b620005a18383620004c3565b8060001904821115620005b857620005b8620004ad565b0290505b92915050565b6000620005d083836200050c565b9392505050565b6000816000190483118215151615620005f457620005f4620004ad565b500290565b600082198211156200060f576200060f620004ad565b500190565b6080516128836200064c6000396000818161055e01528181610920015281816111aa0152818161125601526112a701526128836000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c8063817b1cd211610130578063a694fc3a116100b8578063d387fd6c1161007c578063d387fd6c14610518578063dd62ed3e14610520578063ef735f0714610533578063f2fde38b14610546578063fc0c546a1461055957600080fd5b8063a694fc3a146104a1578063a9059cbb146104b4578063b002249d146104c7578063c3d2c3c1146104dc578063c53b585e1461050557600080fd5b8063952db31f116100ff578063952db31f1461044d57806395d89b411461046057806398807d8414610468578063a457c2d71461047b578063a4c0ed361461048e57600080fd5b8063817b1cd21461040e57806386d740371461041657806388951352146104295780638da5cb5b1461043c57600080fd5b80634000aea0116101be578063628a0f5511610182578063628a0f551461039757806362d76d06146103b757806370a08231146103ca578063715018a6146103f357806375151b63146103fb57600080fd5b80634000aea01461030a5780635476bd721461031d5780635b0c9391146103305780635fa7b58414610343578063611fae021461035657600080fd5b806318160ddd1161020557806318160ddd146102ae57806323b872dd146102c05780632e1a7d4d146102d3578063313ce567146102e857806339509351146102f757600080fd5b806306fdde0314610237578063095ea7b3146102555780630e3bc974146102785780630f14b4d61461028e575b600080fd5b61023f610580565b60405161024c91906123a4565b60405180910390f35b6102686102633660046123f3565b610612565b604051901515815260200161024c565b61028061062a565b60405161024c929190612491565b6102a161029c3660046124bf565b6107a6565b60405161024c91906124da565b6003545b60405190815260200161024c565b6102686102ce3660046124ed565b6108d9565b6102e66102e1366004612529565b6108ff565b005b6040516012815260200161024c565b6102686103053660046123f3565b610981565b610268610318366004612542565b6109a3565b6102e661032b3660046125c9565b6109cf565b6102e661033e3660046124bf565b610b41565b6102e66103513660046124bf565b610b98565b61037f6103643660046124bf565b600a602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161024c565b6102b26103a53660046124bf565b60096020526000908152604090205481565b6102e66103c5366004612612565b610d5f565b6102b26103d83660046124bf565b6001600160a01b031660009081526001602052604090205490565b6102e6610e3c565b6102686104093660046124bf565b610e50565b6102b2610e81565b6102e66104243660046124bf565b610e91565b6102e6610437366004612612565b611031565b6000546001600160a01b031661037f565b61037f61045b3660046124bf565b611075565b61023f6110bb565b6102b26104763660046124bf565b6110ca565b6102686104893660046123f3565b611124565b6102e661049c366004612542565b61119f565b6102e66104af366004612529565b61129a565b6102686104c23660046123f3565b6112dc565b6104cf6112ea565b60405161024c91906126d7565b61037f6104ea3660046124bf565b6006602052600090815260409020546001600160a01b031681565b6102e66105133660046124bf565b61134b565b6102e6611355565b6102b261052e3660046125c9565b6113ae565b6102e66105413660046125c9565b6113d9565b6102e66105543660046124bf565b611480565b61037f7f000000000000000000000000000000000000000000000000000000000000000081565b60606004805461058f906126ea565b80601f01602080910402602001604051908101604052809291908181526020018280546105bb906126ea565b80156106085780601f106105dd57610100808354040283529160200191610608565b820191906000526020600020905b8154815290600101906020018083116105eb57829003601f168201915b5050505050905090565b6000336106208185856114f6565b5060019392505050565b606080600060078054905067ffffffffffffffff81111561064d5761064d6125fc565b604051908082528060200260200182016040528015610676578160200160208202803683370190505b50905060005b60075481101561073d576007818154811061069957610699612724565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e919061273a565b82828151811061072057610720612724565b60209081029190910101528061073581612769565b91505061067c565b506007818180548060200260200160405190810160405280929190818152602001828054801561079657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610778575b5050505050915092509250509091565b60075460609060009067ffffffffffffffff8111156107c7576107c76125fc565b6040519080825280602002602001820160405280156107f0578160200160208202803683370190505b50905060005b6007548110156108d257600660006007838154811061081757610817612724565b6000918252602080832091909101546001600160a01b039081168452908301939093526040918201902054905163078a5a6b60e11b81528683166004820152911690630f14b4d690602401602060405180830381865afa15801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a3919061273a565b8282815181106108b5576108b5612724565b6020908102919091010152806108ca81612769565b9150506107f6565b5092915050565b6000336108e785828561161b565b6108f285858561168f565b60019150505b9392505050565b3361090981611759565b610913338361180d565b6109476001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163384611958565b60405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020015b60405180910390a25050565b60003361062081858561099483836113ae565b61099e9190612782565b6114f6565b60006109af85856112dc565b50843b156109c4576109c433868686866119bb565b506001949350505050565b6109d7611a29565b6109e082610e50565b15610a325760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e20697320616c726561647920737570706f7274656400000000000060448201526064015b60405180910390fd5b6001600160a01b0382811660008181526006602052604080822080549486166001600160a01b0319958616179055600780546001810182559083527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688018054909416831790935591516370a0823160e01b81523060048201526370a0823190602401602060405180830381865afa158015610ad1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af5919061273a565b1115610b0457610b0482610e91565b6040516001600160a01b0382811682528316907fdbf34b45b47a653cf4940cccbec765f72d4d63de3237306905bfc0ee2883236290602001610975565b336000818152600a602052604080822080546001600160a01b0319166001600160a01b03861690811790915590519092917fbc2ae327210da6d1f0946518a140d99a46f3a238ea185f565875ebfe507eb99691a350565b610ba0611a29565b610ba981610e50565b610bee5760405162461bcd60e51b8152602060048201526016602482015275151bdad95b881a5cc81b9bdd081cdd5c1c1bdc9d195960521b6044820152606401610a29565b6001600160a01b03808216600090815260066020526040812080546001600160a01b03198116909155909116905b600754811015610d2157826001600160a01b031660078281548110610c4357610c43612724565b6000918252602090912001546001600160a01b031603610d0f5760078054610c6d9060019061279a565b81548110610c7d57610c7d612724565b600091825260209091200154600780546001600160a01b039092169183908110610ca957610ca9612724565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506007805480610ce857610ce86127b1565b600082815260209020810160001990810180546001600160a01b0319169055019055610d21565b80610d1981612769565b915050610c1c565b506040516001600160a01b0382811682528316907f39dcd754ec63af4b82c4c569ff1b6b4e55a8038e6545844747e54f2f2d4e8e5090602001610975565b60005b8151811015610e0d5760066000838381518110610d8157610d81612724565b6020908102919091018101516001600160a01b0390811683529082019290925260409081016000205490516351cff8d960e01b81523360048201529116906351cff8d990602401600060405180830381600087803b158015610de257600080fd5b505af1158015610df6573d6000803e3d6000fd5b505050508080610e0590612769565b915050610d62565b5060405133907feeab3fd62be4cb59cbdc42d5b0f676a3597ff387b9a85e62330cc17c2a3603db90600090a250565b610e44611a29565b610e4e6000611a83565b565b6001600160a01b03818116600090815260066020526040812054909116610e78576000610e7b565b60015b92915050565b6000610e8c60035490565b905090565b610e9a81610e50565b610edc5760405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b6044820152606401610a29565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610f25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f49919061273a565b905060008111610f9b5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742064697374726962757465207a65726f2062616c616e636500006044820152606401610a29565b6001600160a01b03808416600090815260066020526040902054610fc491848116911683611958565b6001600160a01b038084166000908152600660205260408082205481516306f4a2cd60e41b81529151931692636f4a2cd09260048084019391929182900301818387803b15801561101457600080fd5b505af1158015611028573d6000803e3d6000fd5b50505050505050565b60005b81518110156110715761105f82828151811061105257611052612724565b6020026020010151610e91565b8061106981612769565b915050611034565b5050565b6001600160a01b0381811660009081526008602052604081205490911661109c5781610e7b565b506001600160a01b039081166000908152600860205260409020541690565b60606005805461058f906126ea565b6001600160a01b03808216600090815260096020908152604080832054600890925282205491929091161561110057600061111a565b6001600160a01b0383166000908152600160205260409020545b610e7b9190612782565b6000338161113282866113ae565b9050838110156111925760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610a29565b6109c482868684036114f6565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806111da57506111da33610e50565b61124c5760405162461bcd60e51b815260206004820152603760248201527f53656e646572206d757374206265207374616b696e6720746f6b656e206f722060448201527f737570706f72746564207265776172647320746f6b656e0000000000000000006064820152608401610a29565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361128b576112868484611ad3565b611294565b61129433610e91565b50505050565b6112cf6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611b2f565b6112d93382611ad3565b50565b60003361062081858561168f565b6060600780548060200260200160405190810160405280929190818152602001828054801561060857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611324575050505050905090565b6112d93382611b67565b336000818152600a602052604080822080546001600160a01b0319811690915590516001600160a01b0390911692839290917f9dca899729a60a64e03e19b833c4ef7e1795b7d9ed899092fd59d5df5a8229e49190a350565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6001600160a01b038281166000908152600a60205260409020541633146114505760405162461bcd60e51b815260206004820152602560248201527f417070726f76616c20726571756972656420746f207265646972656374207265604482015264776172647360d81b6064820152608401610a29565b6001600160a01b0382166000908152600a6020526040902080546001600160a01b03191690556110718282611b67565b611488611a29565b6001600160a01b0381166114ed5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a29565b6112d981611a83565b6001600160a01b0383166115585760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610a29565b6001600160a01b0382166115b95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610a29565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061162784846113ae565b9050600019811461129457818110156116825760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610a29565b61129484848484036114f6565b8261169981611759565b826116a381611759565b6001600160a01b0380861660009081526008602052604080822054878416835291205490821691168115611708576116da82611759565b6001600160a01b0382166000908152600960205260408120805487929061170290849061279a565b90915550505b6001600160a01b0381161561174e5761172081611759565b6001600160a01b03811660009081526009602052604081208054879290611748908490612782565b90915550505b611028878787611e78565b60005b60075481101561107157600660006007838154811061177d5761177d612724565b6000918252602080832091909101546001600160a01b039081168452908301939093526040918201902054905163632447c960e01b8152848316600482015291169063632447c990602401600060405180830381600087803b1580156117e257600080fd5b505af11580156117f6573d6000803e3d6000fd5b50505050808061180590612769565b91505061175c565b6001600160a01b03821661186d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610a29565b6001600160a01b038216600090815260016020526040902054818110156118e15760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610a29565b6001600160a01b038316600090815260016020526040812083830390556003805484929061191090849061279a565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161160e565b505050565b6040516001600160a01b03831660248201526044810182905261195390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612046565b604051635260769b60e11b815284906001600160a01b0382169063a4c0ed36906119ef9089908890889088906004016127c7565b600060405180830381600087803b158015611a0957600080fd5b505af1158015611a1d573d6000803e3d6000fd5b50505050505050505050565b6000546001600160a01b03163314610e4e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a29565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b81611add81611759565b611ae78383612118565b826001600160a01b03167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a83604051611b2291815260200190565b60405180910390a2505050565b6040516001600160a01b03808516602483015283166044820152606481018290526112949085906323b872dd60e01b90608401611984565b81611b7181611759565b81611b7b81611759565b6001600160a01b038316611bc75760405162461bcd60e51b815260206004820152601360248201527243616e6e6f74206275726e207265776172647360681b6044820152606401610a29565b6001600160a01b03848116600090815260086020526040902054818516911603611c475760405162461bcd60e51b815260206004820152602b60248201527f43616e6e6f74207265646972656374207265776172647320746f20746865207360448201526a616d65206164647265737360a81b6064820152608401610a29565b6001600160a01b038481166000908152600860205260409020541615611c6e576001611c85565b826001600160a01b0316846001600160a01b031614155b611cd15760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420726564697265637420746f2073656c660000000000000000006044820152606401610a29565b6001600160a01b03841660009081526001602052604090205480611d495760405162461bcd60e51b815260206004820152602960248201527f412062616c616e636520697320726571756972656420746f207265646972656360448201526874207265776172647360b81b6064820152608401610a29565b6001600160a01b03808616600090815260086020526040902054168015611da157611d7381611759565b6001600160a01b03811660009081526009602052604081208054849290611d9b90849061279a565b90915550505b856001600160a01b0316856001600160a01b031603611de5576001600160a01b038616600090815260086020526040902080546001600160a01b0319169055611e35565b6001600160a01b03868116600090815260086020908152604080832080546001600160a01b031916948a169485179055928252600990529081208054849290611e2f908490612782565b90915550505b60405133906001600160a01b0387811691908916907f6a8c4b3eeb6ce85acfca51b03ce7b05fdefe1ff2b7c0a45e7002b08e0cea1eb690600090a4505050505050565b6001600160a01b038316611edc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610a29565b6001600160a01b038216611f3e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610a29565b6001600160a01b03831660009081526001602052604090205481811015611fb65760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610a29565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290611fed908490612782565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161203991815260200190565b60405180910390a3611294565b600061209b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121f79092919063ffffffff16565b80519091501561195357808060200190518101906120b9919061280f565b6119535760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a29565b6001600160a01b03821661216e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610a29565b80600360008282546121809190612782565b90915550506001600160a01b038216600090815260016020526040812080548392906121ad908490612782565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6060612206848460008561220e565b949350505050565b60608247101561226f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a29565b6001600160a01b0385163b6122c65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a29565b600080866001600160a01b031685876040516122e29190612831565b60006040518083038185875af1925050503d806000811461231f576040519150601f19603f3d011682016040523d82523d6000602084013e612324565b606091505b509150915061233482828661233f565b979650505050505050565b6060831561234e5750816108f8565b82511561235e5782518084602001fd5b8160405162461bcd60e51b8152600401610a2991906123a4565b60005b8381101561239357818101518382015260200161237b565b838111156112945750506000910152565b60208152600082518060208401526123c3816040850160208701612378565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146123ee57600080fd5b919050565b6000806040838503121561240657600080fd5b61240f836123d7565b946020939093013593505050565b600081518084526020808501945080840160005b838110156124565781516001600160a01b031687529582019590820190600101612431565b509495945050505050565b600081518084526020808501945080840160005b8381101561245657815187529582019590820190600101612475565b6040815260006124a4604083018561241d565b82810360208401526124b68185612461565b95945050505050565b6000602082840312156124d157600080fd5b6108f8826123d7565b6020815260006108f86020830184612461565b60008060006060848603121561250257600080fd5b61250b846123d7565b9250612519602085016123d7565b9150604084013590509250925092565b60006020828403121561253b57600080fd5b5035919050565b6000806000806060858703121561255857600080fd5b612561856123d7565b935060208501359250604085013567ffffffffffffffff8082111561258557600080fd5b818701915087601f83011261259957600080fd5b8135818111156125a857600080fd5b8860208285010111156125ba57600080fd5b95989497505060200194505050565b600080604083850312156125dc57600080fd5b6125e5836123d7565b91506125f3602084016123d7565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561262557600080fd5b823567ffffffffffffffff8082111561263d57600080fd5b818501915085601f83011261265157600080fd5b813581811115612663576126636125fc565b8060051b604051601f19603f83011681018181108582111715612688576126886125fc565b6040529182528482019250838101850191888311156126a657600080fd5b938501935b828510156126cb576126bc856123d7565b845293850193928501926126ab565b98975050505050505050565b6020815260006108f8602083018461241d565b600181811c908216806126fe57607f821691505b60208210810361271e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561274c57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60006001820161277b5761277b612753565b5060010190565b6000821982111561279557612795612753565b500190565b6000828210156127ac576127ac612753565b500390565b634e487b7160e01b600052603160045260246000fd5b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f191601019392505050565b60006020828403121561282157600080fd5b815180151581146108f857600080fd5b60008251612843818460208701612378565b919091019291505056fea264697066735822122041f2f21b96e9aff2a1a3a982a903b19ebb99e875a8d5ad4996d69ca16e94b53c64736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102325760003560e01c8063817b1cd211610130578063a694fc3a116100b8578063d387fd6c1161007c578063d387fd6c14610518578063dd62ed3e14610520578063ef735f0714610533578063f2fde38b14610546578063fc0c546a1461055957600080fd5b8063a694fc3a146104a1578063a9059cbb146104b4578063b002249d146104c7578063c3d2c3c1146104dc578063c53b585e1461050557600080fd5b8063952db31f116100ff578063952db31f1461044d57806395d89b411461046057806398807d8414610468578063a457c2d71461047b578063a4c0ed361461048e57600080fd5b8063817b1cd21461040e57806386d740371461041657806388951352146104295780638da5cb5b1461043c57600080fd5b80634000aea0116101be578063628a0f5511610182578063628a0f551461039757806362d76d06146103b757806370a08231146103ca578063715018a6146103f357806375151b63146103fb57600080fd5b80634000aea01461030a5780635476bd721461031d5780635b0c9391146103305780635fa7b58414610343578063611fae021461035657600080fd5b806318160ddd1161020557806318160ddd146102ae57806323b872dd146102c05780632e1a7d4d146102d3578063313ce567146102e857806339509351146102f757600080fd5b806306fdde0314610237578063095ea7b3146102555780630e3bc974146102785780630f14b4d61461028e575b600080fd5b61023f610580565b60405161024c91906123a4565b60405180910390f35b6102686102633660046123f3565b610612565b604051901515815260200161024c565b61028061062a565b60405161024c929190612491565b6102a161029c3660046124bf565b6107a6565b60405161024c91906124da565b6003545b60405190815260200161024c565b6102686102ce3660046124ed565b6108d9565b6102e66102e1366004612529565b6108ff565b005b6040516012815260200161024c565b6102686103053660046123f3565b610981565b610268610318366004612542565b6109a3565b6102e661032b3660046125c9565b6109cf565b6102e661033e3660046124bf565b610b41565b6102e66103513660046124bf565b610b98565b61037f6103643660046124bf565b600a602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161024c565b6102b26103a53660046124bf565b60096020526000908152604090205481565b6102e66103c5366004612612565b610d5f565b6102b26103d83660046124bf565b6001600160a01b031660009081526001602052604090205490565b6102e6610e3c565b6102686104093660046124bf565b610e50565b6102b2610e81565b6102e66104243660046124bf565b610e91565b6102e6610437366004612612565b611031565b6000546001600160a01b031661037f565b61037f61045b3660046124bf565b611075565b61023f6110bb565b6102b26104763660046124bf565b6110ca565b6102686104893660046123f3565b611124565b6102e661049c366004612542565b61119f565b6102e66104af366004612529565b61129a565b6102686104c23660046123f3565b6112dc565b6104cf6112ea565b60405161024c91906126d7565b61037f6104ea3660046124bf565b6006602052600090815260409020546001600160a01b031681565b6102e66105133660046124bf565b61134b565b6102e6611355565b6102b261052e3660046125c9565b6113ae565b6102e66105413660046125c9565b6113d9565b6102e66105543660046124bf565b611480565b61037f7f000000000000000000000000000000000000000000000000000000000000000081565b60606004805461058f906126ea565b80601f01602080910402602001604051908101604052809291908181526020018280546105bb906126ea565b80156106085780601f106105dd57610100808354040283529160200191610608565b820191906000526020600020905b8154815290600101906020018083116105eb57829003601f168201915b5050505050905090565b6000336106208185856114f6565b5060019392505050565b606080600060078054905067ffffffffffffffff81111561064d5761064d6125fc565b604051908082528060200260200182016040528015610676578160200160208202803683370190505b50905060005b60075481101561073d576007818154811061069957610699612724565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e919061273a565b82828151811061072057610720612724565b60209081029190910101528061073581612769565b91505061067c565b506007818180548060200260200160405190810160405280929190818152602001828054801561079657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610778575b5050505050915092509250509091565b60075460609060009067ffffffffffffffff8111156107c7576107c76125fc565b6040519080825280602002602001820160405280156107f0578160200160208202803683370190505b50905060005b6007548110156108d257600660006007838154811061081757610817612724565b6000918252602080832091909101546001600160a01b039081168452908301939093526040918201902054905163078a5a6b60e11b81528683166004820152911690630f14b4d690602401602060405180830381865afa15801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a3919061273a565b8282815181106108b5576108b5612724565b6020908102919091010152806108ca81612769565b9150506107f6565b5092915050565b6000336108e785828561161b565b6108f285858561168f565b60019150505b9392505050565b3361090981611759565b610913338361180d565b6109476001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163384611958565b60405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020015b60405180910390a25050565b60003361062081858561099483836113ae565b61099e9190612782565b6114f6565b60006109af85856112dc565b50843b156109c4576109c433868686866119bb565b506001949350505050565b6109d7611a29565b6109e082610e50565b15610a325760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e20697320616c726561647920737570706f7274656400000000000060448201526064015b60405180910390fd5b6001600160a01b0382811660008181526006602052604080822080549486166001600160a01b0319958616179055600780546001810182559083527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688018054909416831790935591516370a0823160e01b81523060048201526370a0823190602401602060405180830381865afa158015610ad1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af5919061273a565b1115610b0457610b0482610e91565b6040516001600160a01b0382811682528316907fdbf34b45b47a653cf4940cccbec765f72d4d63de3237306905bfc0ee2883236290602001610975565b336000818152600a602052604080822080546001600160a01b0319166001600160a01b03861690811790915590519092917fbc2ae327210da6d1f0946518a140d99a46f3a238ea185f565875ebfe507eb99691a350565b610ba0611a29565b610ba981610e50565b610bee5760405162461bcd60e51b8152602060048201526016602482015275151bdad95b881a5cc81b9bdd081cdd5c1c1bdc9d195960521b6044820152606401610a29565b6001600160a01b03808216600090815260066020526040812080546001600160a01b03198116909155909116905b600754811015610d2157826001600160a01b031660078281548110610c4357610c43612724565b6000918252602090912001546001600160a01b031603610d0f5760078054610c6d9060019061279a565b81548110610c7d57610c7d612724565b600091825260209091200154600780546001600160a01b039092169183908110610ca957610ca9612724565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506007805480610ce857610ce86127b1565b600082815260209020810160001990810180546001600160a01b0319169055019055610d21565b80610d1981612769565b915050610c1c565b506040516001600160a01b0382811682528316907f39dcd754ec63af4b82c4c569ff1b6b4e55a8038e6545844747e54f2f2d4e8e5090602001610975565b60005b8151811015610e0d5760066000838381518110610d8157610d81612724565b6020908102919091018101516001600160a01b0390811683529082019290925260409081016000205490516351cff8d960e01b81523360048201529116906351cff8d990602401600060405180830381600087803b158015610de257600080fd5b505af1158015610df6573d6000803e3d6000fd5b505050508080610e0590612769565b915050610d62565b5060405133907feeab3fd62be4cb59cbdc42d5b0f676a3597ff387b9a85e62330cc17c2a3603db90600090a250565b610e44611a29565b610e4e6000611a83565b565b6001600160a01b03818116600090815260066020526040812054909116610e78576000610e7b565b60015b92915050565b6000610e8c60035490565b905090565b610e9a81610e50565b610edc5760405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b6044820152606401610a29565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610f25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f49919061273a565b905060008111610f9b5760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742064697374726962757465207a65726f2062616c616e636500006044820152606401610a29565b6001600160a01b03808416600090815260066020526040902054610fc491848116911683611958565b6001600160a01b038084166000908152600660205260408082205481516306f4a2cd60e41b81529151931692636f4a2cd09260048084019391929182900301818387803b15801561101457600080fd5b505af1158015611028573d6000803e3d6000fd5b50505050505050565b60005b81518110156110715761105f82828151811061105257611052612724565b6020026020010151610e91565b8061106981612769565b915050611034565b5050565b6001600160a01b0381811660009081526008602052604081205490911661109c5781610e7b565b506001600160a01b039081166000908152600860205260409020541690565b60606005805461058f906126ea565b6001600160a01b03808216600090815260096020908152604080832054600890925282205491929091161561110057600061111a565b6001600160a01b0383166000908152600160205260409020545b610e7b9190612782565b6000338161113282866113ae565b9050838110156111925760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610a29565b6109c482868684036114f6565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806111da57506111da33610e50565b61124c5760405162461bcd60e51b815260206004820152603760248201527f53656e646572206d757374206265207374616b696e6720746f6b656e206f722060448201527f737570706f72746564207265776172647320746f6b656e0000000000000000006064820152608401610a29565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361128b576112868484611ad3565b611294565b61129433610e91565b50505050565b6112cf6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611b2f565b6112d93382611ad3565b50565b60003361062081858561168f565b6060600780548060200260200160405190810160405280929190818152602001828054801561060857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611324575050505050905090565b6112d93382611b67565b336000818152600a602052604080822080546001600160a01b0319811690915590516001600160a01b0390911692839290917f9dca899729a60a64e03e19b833c4ef7e1795b7d9ed899092fd59d5df5a8229e49190a350565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6001600160a01b038281166000908152600a60205260409020541633146114505760405162461bcd60e51b815260206004820152602560248201527f417070726f76616c20726571756972656420746f207265646972656374207265604482015264776172647360d81b6064820152608401610a29565b6001600160a01b0382166000908152600a6020526040902080546001600160a01b03191690556110718282611b67565b611488611a29565b6001600160a01b0381166114ed5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a29565b6112d981611a83565b6001600160a01b0383166115585760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610a29565b6001600160a01b0382166115b95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610a29565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061162784846113ae565b9050600019811461129457818110156116825760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610a29565b61129484848484036114f6565b8261169981611759565b826116a381611759565b6001600160a01b0380861660009081526008602052604080822054878416835291205490821691168115611708576116da82611759565b6001600160a01b0382166000908152600960205260408120805487929061170290849061279a565b90915550505b6001600160a01b0381161561174e5761172081611759565b6001600160a01b03811660009081526009602052604081208054879290611748908490612782565b90915550505b611028878787611e78565b60005b60075481101561107157600660006007838154811061177d5761177d612724565b6000918252602080832091909101546001600160a01b039081168452908301939093526040918201902054905163632447c960e01b8152848316600482015291169063632447c990602401600060405180830381600087803b1580156117e257600080fd5b505af11580156117f6573d6000803e3d6000fd5b50505050808061180590612769565b91505061175c565b6001600160a01b03821661186d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610a29565b6001600160a01b038216600090815260016020526040902054818110156118e15760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610a29565b6001600160a01b038316600090815260016020526040812083830390556003805484929061191090849061279a565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161160e565b505050565b6040516001600160a01b03831660248201526044810182905261195390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612046565b604051635260769b60e11b815284906001600160a01b0382169063a4c0ed36906119ef9089908890889088906004016127c7565b600060405180830381600087803b158015611a0957600080fd5b505af1158015611a1d573d6000803e3d6000fd5b50505050505050505050565b6000546001600160a01b03163314610e4e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a29565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b81611add81611759565b611ae78383612118565b826001600160a01b03167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a83604051611b2291815260200190565b60405180910390a2505050565b6040516001600160a01b03808516602483015283166044820152606481018290526112949085906323b872dd60e01b90608401611984565b81611b7181611759565b81611b7b81611759565b6001600160a01b038316611bc75760405162461bcd60e51b815260206004820152601360248201527243616e6e6f74206275726e207265776172647360681b6044820152606401610a29565b6001600160a01b03848116600090815260086020526040902054818516911603611c475760405162461bcd60e51b815260206004820152602b60248201527f43616e6e6f74207265646972656374207265776172647320746f20746865207360448201526a616d65206164647265737360a81b6064820152608401610a29565b6001600160a01b038481166000908152600860205260409020541615611c6e576001611c85565b826001600160a01b0316846001600160a01b031614155b611cd15760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420726564697265637420746f2073656c660000000000000000006044820152606401610a29565b6001600160a01b03841660009081526001602052604090205480611d495760405162461bcd60e51b815260206004820152602960248201527f412062616c616e636520697320726571756972656420746f207265646972656360448201526874207265776172647360b81b6064820152608401610a29565b6001600160a01b03808616600090815260086020526040902054168015611da157611d7381611759565b6001600160a01b03811660009081526009602052604081208054849290611d9b90849061279a565b90915550505b856001600160a01b0316856001600160a01b031603611de5576001600160a01b038616600090815260086020526040902080546001600160a01b0319169055611e35565b6001600160a01b03868116600090815260086020908152604080832080546001600160a01b031916948a169485179055928252600990529081208054849290611e2f908490612782565b90915550505b60405133906001600160a01b0387811691908916907f6a8c4b3eeb6ce85acfca51b03ce7b05fdefe1ff2b7c0a45e7002b08e0cea1eb690600090a4505050505050565b6001600160a01b038316611edc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610a29565b6001600160a01b038216611f3e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610a29565b6001600160a01b03831660009081526001602052604090205481811015611fb65760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610a29565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290611fed908490612782565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161203991815260200190565b60405180910390a3611294565b600061209b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121f79092919063ffffffff16565b80519091501561195357808060200190518101906120b9919061280f565b6119535760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a29565b6001600160a01b03821661216e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610a29565b80600360008282546121809190612782565b90915550506001600160a01b038216600090815260016020526040812080548392906121ad908490612782565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6060612206848460008561220e565b949350505050565b60608247101561226f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a29565b6001600160a01b0385163b6122c65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a29565b600080866001600160a01b031685876040516122e29190612831565b60006040518083038185875af1925050503d806000811461231f576040519150601f19603f3d011682016040523d82523d6000602084013e612324565b606091505b509150915061233482828661233f565b979650505050505050565b6060831561234e5750816108f8565b82511561235e5782518084602001fd5b8160405162461bcd60e51b8152600401610a2991906123a4565b60005b8381101561239357818101518382015260200161237b565b838111156112945750506000910152565b60208152600082518060208401526123c3816040850160208701612378565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146123ee57600080fd5b919050565b6000806040838503121561240657600080fd5b61240f836123d7565b946020939093013593505050565b600081518084526020808501945080840160005b838110156124565781516001600160a01b031687529582019590820190600101612431565b509495945050505050565b600081518084526020808501945080840160005b8381101561245657815187529582019590820190600101612475565b6040815260006124a4604083018561241d565b82810360208401526124b68185612461565b95945050505050565b6000602082840312156124d157600080fd5b6108f8826123d7565b6020815260006108f86020830184612461565b60008060006060848603121561250257600080fd5b61250b846123d7565b9250612519602085016123d7565b9150604084013590509250925092565b60006020828403121561253b57600080fd5b5035919050565b6000806000806060858703121561255857600080fd5b612561856123d7565b935060208501359250604085013567ffffffffffffffff8082111561258557600080fd5b818701915087601f83011261259957600080fd5b8135818111156125a857600080fd5b8860208285010111156125ba57600080fd5b95989497505060200194505050565b600080604083850312156125dc57600080fd5b6125e5836123d7565b91506125f3602084016123d7565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561262557600080fd5b823567ffffffffffffffff8082111561263d57600080fd5b818501915085601f83011261265157600080fd5b813581811115612663576126636125fc565b8060051b604051601f19603f83011681018181108582111715612688576126886125fc565b6040529182528482019250838101850191888311156126a657600080fd5b938501935b828510156126cb576126bc856123d7565b845293850193928501926126ab565b98975050505050505050565b6020815260006108f8602083018461241d565b600181811c908216806126fe57607f821691505b60208210810361271e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561274c57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60006001820161277b5761277b612753565b5060010190565b6000821982111561279557612795612753565b500190565b6000828210156127ac576127ac612753565b500390565b634e487b7160e01b600052603160045260246000fd5b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301376000818301608090810191909152601f909201601f191601019392505050565b60006020828403121561282157600080fd5b815180151581146108f857600080fd5b60008251612843818460208701612378565b919091019291505056fea264697066735822122041f2f21b96e9aff2a1a3a982a903b19ebb99e875a8d5ad4996d69ca16e94b53c64736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addToken(address,address)": {
        "params": {
          "_rewardsPool": "token rewards pool to add*",
          "_token": "token to add"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "approveRedirect(address)": {
        "params": {
          "_to": "account to approve"
        }
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "distributeToken(address)": {
        "params": {
          "_token": "token address"
        }
      },
      "distributeTokens(address[])": {
        "params": {
          "_tokens": "list of token addresses"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "isTokenSupported(address)": {
        "params": {
          "_token": "token address"
        },
        "returns": {
          "_0": "is token supported*"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "onTokenTransfer(address,uint256,bytes)": {
        "params": {
          "_sender": "of the token transfer",
          "_value": "of the token transfer*"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "redirectRewards(address)": {
        "params": {
          "_to": "account to redirect rewards to"
        }
      },
      "redirectRewardsFrom(address,address)": {
        "params": {
          "_from": "account to redirect rewards for",
          "_to": "account to redirect rewards to"
        }
      },
      "removeToken(address)": {
        "params": {
          "_token": "address of token*"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "rewardsAddress(address)": {
        "params": {
          "_account": "address to query"
        }
      },
      "stake(uint256)": {
        "params": {
          "_amount": "amount to stake*"
        }
      },
      "staked(address)": {
        "details": "required by RewardsPoolController",
        "returns": {
          "_0": "account's staked amount"
        }
      },
      "supportedTokens()": {
        "returns": {
          "_0": "list of token configs*"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "tokenBalances()": {
        "returns": {
          "_0": "list of tokens with a list of token balances*"
        }
      },
      "totalStaked()": {
        "details": "required by RewardsPoolController",
        "returns": {
          "_0": "total staked amount"
        }
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256)": {
        "params": {
          "_amount": "amount to withdraw*"
        }
      },
      "withdrawRewards(address[])": {
        "params": {
          "_tokens": "list of token addresses to withdraw rewards from*"
        }
      },
      "withdrawableRewards(address)": {
        "params": {
          "_account": "account to return reward amounts for"
        },
        "returns": {
          "_0": "list of withdrawable reward amounts*"
        }
      }
    },
    "title": "Pool Owners",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addToken(address,address)": {
        "notice": "adds a new token"
      },
      "approveRedirect(address)": {
        "notice": "approve a reward redirect"
      },
      "distributeToken(address)": {
        "notice": "distributes a token balance to its equivalent reward pool"
      },
      "distributeTokens(address[])": {
        "notice": "distributes token balances to their equivalent reward pools"
      },
      "isTokenSupported(address)": {
        "notice": "returns true/false to whether a given token is supported"
      },
      "onTokenTransfer(address,uint256,bytes)": {
        "notice": "ERC677 implementation that proxies staking"
      },
      "redirectRewards(address)": {
        "notice": "redirect rewards to a specific address. Supports multiple addresses redirecting to the same previousRedirect. To stop redirecting rewards, set _to as the current wallet."
      },
      "redirectRewardsFrom(address,address)": {
        "notice": "redirect rewards for an account with approval"
      },
      "removeToken(address)": {
        "notice": "removes a supported token"
      },
      "revokeRedirectApproval()": {
        "notice": "revoke a redirect approval"
      },
      "rewardsAddress(address)": {
        "notice": "returns the address that receives rewards for an account"
      },
      "stake(uint256)": {
        "notice": "stakes owners tokens & mints allowance tokens"
      },
      "staked(address)": {
        "notice": "returns an account's staked amount for use by reward pools controlled by this contract. If rewards are redirected, it returns the sum of the amount staked by all of the accounts that have redirected rewards."
      },
      "supportedTokens()": {
        "notice": "returns a list of configs for all supported tokens"
      },
      "tokenBalances()": {
        "notice": "get all token balances of supported tokens within the controller"
      },
      "totalStaked()": {
        "notice": "returns the total staked amount for use by reward pools controlled by this contract"
      },
      "withdraw(uint256)": {
        "notice": "burns allowance tokens and withdraws staked owners tokens"
      },
      "withdrawRewards(address[])": {
        "notice": "withdraws an account's earned rewards for a list of tokens"
      },
      "withdrawableRewards(address)": {
        "notice": "returns a list of withdrawable rewards for an account"
      }
    },
    "notice": "Handles owners token staking & rewards distribution",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3767,
        "contract": "contracts/core/PoolOwners.sol:PoolOwners",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3928,
        "contract": "contracts/core/PoolOwners.sol:PoolOwners",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3934,
        "contract": "contracts/core/PoolOwners.sol:PoolOwners",
        "label": "_allowances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 3936,
        "contract": "contracts/core/PoolOwners.sol:PoolOwners",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 3938,
        "contract": "contracts/core/PoolOwners.sol:PoolOwners",
        "label": "_name",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 3940,
        "contract": "contracts/core/PoolOwners.sol:PoolOwners",
        "label": "_symbol",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 17485,
        "contract": "contracts/core/PoolOwners.sol:PoolOwners",
        "label": "tokenPools",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_contract(IRewardsPool)18908)"
      },
      {
        "astId": 17488,
        "contract": "contracts/core/PoolOwners.sol:PoolOwners",
        "label": "tokens",
        "offset": 0,
        "slot": "7",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 17492,
        "contract": "contracts/core/PoolOwners.sol:PoolOwners",
        "label": "rewardRedirects",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 17496,
        "contract": "contracts/core/PoolOwners.sol:PoolOwners",
        "label": "redirectedStakes",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 17500,
        "contract": "contracts/core/PoolOwners.sol:PoolOwners",
        "label": "redirectApprovals",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(IRewardsPool)18908": {
        "encoding": "inplace",
        "label": "contract IRewardsPool",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_contract(IRewardsPool)18908)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract IRewardsPool)",
        "numberOfBytes": "32",
        "value": "t_contract(IRewardsPool)18908"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}