{
  "address": "0x5d9bfe1C73D34C9b892D48e1DA1A45b55aD9f687",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wsdToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountStaked",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DistributeRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "contract IRewardsPoolController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributeRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC677",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "updateReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userRewardPerTokenPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "withdrawableRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "withdrawableRewardsWrapped",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wsdToken",
      "outputs": [
        {
          "internalType": "contract IWrappedSDToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x81acef17495eed3b6fff1a7eeeefcd7ab65302e9170a8f64e3af83bd88cc02d8",
  "receipt": {
    "to": null,
    "from": "0x11187eff852069a33d102476b2E8A9cc9167dAde",
    "contractAddress": "0x5d9bfe1C73D34C9b892D48e1DA1A45b55aD9f687",
    "transactionIndex": 0,
    "gasUsed": "974040",
    "logsBloom": "0x
    "blockHash": "0xec3d24d5cc7c6be1f845fa9a4cb379c3d4f211d264fdc26673cafb2dfcd8b5d1",
    "transactionHash": "0x81acef17495eed3b6fff1a7eeeefcd7ab65302e9170a8f64e3af83bd88cc02d8",
    "logs": [],
    "blockNumber": 903240,
    "cumulativeGasUsed": "974040",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xc593c83A4b5f88b976df1d1140124C565e764a72",
    "0x92D8519A81C8724A5c1Fbe88bd079320E85F6Db5",
    "0x4bBF14a87b21EE3c36dB63742e23Bff887aC3908"
  ],
  "numDeployments": 1,
  "solcInputHash": "3b2625e8211dd6eaac71f4a881384a88",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wsdToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DistributeRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"contract IRewardsPoolController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC677\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"updateReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"withdrawableRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"withdrawableRewardsWrapped\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wsdToken\",\"outputs\":[{\"internalType\":\"contract IWrappedSDToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"rewards can only be positive (user balances can only increase)\",\"kind\":\"dev\",\"methods\":{\"updateReward(address)\":{\"params\":{\"_account\":\"account to update for*\"}},\"withdraw(address)\":{\"details\":\"used by PoolOwners\",\"params\":{\"_account\":\"account to withdraw for*\"}},\"withdrawableRewards(address)\":{\"params\":{\"_account\":\"account to return rewards for\"},\"returns\":{\"_0\":\"account's total unclaimed rewards*\"}},\"withdrawableRewardsWrapped(address)\":{\"params\":{\"_account\":\"account to return rewards for\"},\"returns\":{\"_0\":\"account's total unclaimed rewards*\"}}},\"title\":\"RewardsPoolWSD\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"distributeRewards()\":{\"notice\":\"distributes new rewards that have been deposited*\"},\"onTokenTransfer(address,uint256,bytes)\":{\"notice\":\"ERC677 implementation that proxies reward distribution*\"},\"updateReward(address)\":{\"notice\":\"updates an account's principal reward balance\"},\"withdraw()\":{\"notice\":\"withdraws an account's earned rewards*\"},\"withdraw(address)\":{\"notice\":\"withdraws an account's earned rewards\"},\"withdrawableRewards(address)\":{\"notice\":\"returns an account's total unwrapped withdrawable rewards (principal balance + newly earned rewards)\"},\"withdrawableRewardsWrapped(address)\":{\"notice\":\"returns an account's total wrapped withdrawable rewards (principal balance + newly earned rewards)\"}},\"notice\":\"Handles reward distribution for a single wrapped staking derivative token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/RewardsPoolWSD.sol\":\"RewardsPoolWSD\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"contracts/core/RewardsPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nimport \\\"./interfaces/IRewardsPoolController.sol\\\";\\n\\n/**\\n * @title RewardsPool\\n * @notice Handles reward distribution for a single asset\\n * @dev rewards can only be positive (user balances can only increase)\\n */\\ncontract RewardsPool {\\n    using SafeERC20 for IERC677;\\n\\n    IERC677 public immutable token;\\n    IRewardsPoolController public immutable controller;\\n\\n    uint public rewardPerToken;\\n    uint public totalRewards;\\n    mapping(address => uint) public userRewardPerTokenPaid;\\n    mapping(address => uint) public userRewards;\\n\\n    event Withdraw(address indexed account, uint amount);\\n    event DistributeRewards(address indexed sender, uint256 amountStaked, uint256 amount);\\n\\n    constructor(address _controller, address _token) {\\n        controller = IRewardsPoolController(_controller);\\n        token = IERC677(_token);\\n    }\\n\\n    /**\\n     * @notice returns an account's total withdrawable rewards (principal balance + newly earned rewards)\\n     * @param _account account to return rewards for\\n     * @return account's total unclaimed rewards\\n     **/\\n    function withdrawableRewards(address _account) public view virtual returns (uint) {\\n        return\\n            (controller.staked(_account) * (rewardPerToken - userRewardPerTokenPaid[_account])) /\\n            1e18 +\\n            userRewards[_account];\\n    }\\n\\n    /**\\n     * @notice withdraws an account's earned rewards\\n     **/\\n    function withdraw() external {\\n        _withdraw(msg.sender);\\n    }\\n\\n    /**\\n     * @notice withdraws an account's earned rewards\\n     * @dev used by PoolOwners\\n     * @param _account account to withdraw for\\n     **/\\n    function withdraw(address _account) external {\\n        require(msg.sender == address(controller), \\\"Controller only\\\");\\n        _withdraw(_account);\\n    }\\n\\n    /**\\n     * @notice ERC677 implementation that proxies reward distribution\\n     **/\\n    function onTokenTransfer(\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external {\\n        require(msg.sender == address(token), \\\"Only callable by token\\\");\\n        distributeRewards();\\n    }\\n\\n    /**\\n     * @notice distributes new rewards that have been deposited\\n     **/\\n    function distributeRewards() public virtual {\\n        require(controller.totalStaked() > 0, \\\"Cannot distribute when nothing is staked\\\");\\n        uint256 toDistribute = token.balanceOf(address(this)) - totalRewards;\\n        totalRewards += toDistribute;\\n        _updateRewardPerToken(toDistribute);\\n        emit DistributeRewards(msg.sender, controller.totalStaked(), toDistribute);\\n    }\\n\\n    /**\\n     * @notice updates an account's principal reward balance\\n     * @param _account account to update for\\n     **/\\n    function updateReward(address _account) public virtual {\\n        uint newRewards = withdrawableRewards(_account) - userRewards[_account];\\n        if (newRewards > 0) {\\n            userRewards[_account] += newRewards;\\n        }\\n        userRewardPerTokenPaid[_account] = rewardPerToken;\\n    }\\n\\n    /**\\n     * @notice withdraws rewards for an account\\n     * @param _account account to withdraw for\\n     **/\\n    function _withdraw(address _account) internal virtual {\\n        uint256 toWithdraw = withdrawableRewards(_account);\\n        if (toWithdraw > 0) {\\n            updateReward(_account);\\n            userRewards[_account] -= toWithdraw;\\n            totalRewards -= toWithdraw;\\n            token.safeTransfer(_account, toWithdraw);\\n            emit Withdraw(_account, toWithdraw);\\n        }\\n    }\\n\\n    /**\\n     * @notice updates rewardPerToken\\n     * @param _reward deposited reward amount\\n     **/\\n    function _updateRewardPerToken(uint _reward) internal {\\n        uint totalStaked = controller.totalStaked();\\n        require(totalStaked > 0, \\\"Staked amount must be > 0\\\");\\n        rewardPerToken += ((_reward * 1e18) / totalStaked);\\n    }\\n}\\n\",\"keccak256\":\"0x9e4fe39abbbb28c16e1ee27610307c1df5cb1edf4485e65b401a66ba9451ede6\",\"license\":\"UNLICENSED\"},\"contracts/core/RewardsPoolWSD.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nimport \\\"./interfaces/IRewardsPoolController.sol\\\";\\nimport \\\"./interfaces/IWrappedSDToken.sol\\\";\\nimport \\\"./RewardsPool.sol\\\";\\n\\n/**\\n * @title RewardsPoolWSD\\n * @notice Handles reward distribution for a single wrapped staking derivative token\\n * @dev rewards can only be positive (user balances can only increase)\\n */\\ncontract RewardsPoolWSD is RewardsPool {\\n    using SafeERC20 for IERC677;\\n\\n    IWrappedSDToken public wsdToken;\\n\\n    constructor(\\n        address _controller,\\n        address _token,\\n        address _wsdToken\\n    ) RewardsPool(_controller, _token) {\\n        wsdToken = IWrappedSDToken(_wsdToken);\\n    }\\n\\n    /**\\n     * @notice returns an account's total unwrapped withdrawable rewards (principal balance + newly earned rewards)\\n     * @param _account account to return rewards for\\n     * @return account's total unclaimed rewards\\n     **/\\n    function withdrawableRewards(address _account) public view override returns (uint) {\\n        return wsdToken.getUnderlyingByWrapped(super.withdrawableRewards(_account));\\n    }\\n\\n    /**\\n     * @notice returns an account's total wrapped withdrawable rewards (principal balance + newly earned rewards)\\n     * @param _account account to return rewards for\\n     * @return account's total unclaimed rewards\\n     **/\\n    function withdrawableRewardsWrapped(address _account) public view returns (uint) {\\n        return super.withdrawableRewards(_account);\\n    }\\n\\n    /**\\n     * @notice distributes new rewards that have been deposited\\n     **/\\n    function distributeRewards() public override {\\n        require(controller.totalStaked() > 0, \\\"Cannot distribute when nothing is staked\\\");\\n\\n        uint balance = token.balanceOf(address(this));\\n        token.transferAndCall(address(wsdToken), balance, \\\"0x00\\\");\\n\\n        uint256 toDistribute = wsdToken.balanceOf(address(this)) - totalRewards;\\n        totalRewards += toDistribute;\\n        _updateRewardPerToken(toDistribute);\\n\\n        emit DistributeRewards(msg.sender, controller.totalStaked(), balance);\\n    }\\n\\n    /**\\n     * @notice updates an account's principal reward balance\\n     * @param _account account to update for\\n     **/\\n    function updateReward(address _account) public override {\\n        uint newRewards = withdrawableRewardsWrapped(_account) - userRewards[_account];\\n        if (newRewards > 0) {\\n            userRewards[_account] += newRewards;\\n        }\\n        userRewardPerTokenPaid[_account] = rewardPerToken;\\n    }\\n\\n    /**\\n     * @notice withdraws rewards for an account\\n     * @param _account account to withdraw for\\n     **/\\n    function _withdraw(address _account) internal override {\\n        uint256 toWithdraw = withdrawableRewardsWrapped(_account);\\n        uint toWithdrawUnwrapped = wsdToken.getUnderlyingByWrapped(toWithdraw);\\n\\n        if (toWithdraw > 0) {\\n            updateReward(_account);\\n            userRewards[_account] -= toWithdraw;\\n            totalRewards -= toWithdraw;\\n\\n            wsdToken.unwrap(toWithdraw);\\n            token.safeTransfer(_account, toWithdrawUnwrapped);\\n\\n            emit Withdraw(_account, toWithdrawUnwrapped);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe339c2a5b8abb517c2a5e43ed71ffcc75282ca3906ca88590d59e5bbeb984f47\",\"license\":\"UNLICENSED\"},\"contracts/core/interfaces/IERC677.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC677 is IERC20 {\\n    function transferAndCall(\\n        address _to,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0x85fb796082bc45f2eb85a84af73983fdfefed6ff9acbc936373d45360a5973cf\",\"license\":\"UNLICENSED\"},\"contracts/core/interfaces/IRewardsPoolController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"./IERC677.sol\\\";\\n\\ninterface IRewardsPoolController {\\n    /**\\n     * @notice returns an account's stake balance for use by reward pools\\n     * controlled by this contract\\n     * @return account's balance\\n     */\\n    function staked(address _account) external view returns (uint);\\n\\n    /**\\n     * @notice returns the total staked amount for use by reward pools\\n     * controlled by this contract\\n     * @return total staked amount\\n     */\\n    function totalStaked() external view returns (uint);\\n\\n    /**\\n     * @notice adds a new token\\n     * @param _token token to add\\n     * @param _rewardsPool token rewards pool to add\\n     **/\\n    function addToken(address _token, address _rewardsPool) external;\\n}\\n\",\"keccak256\":\"0x1f903f56807f5cbb766a39eae51b30832ee28e3d6de8b6db25f712dc2768e7eb\",\"license\":\"UNLICENSED\"},\"contracts/core/interfaces/IWrappedSDToken.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.15;\\n\\nimport \\\"./IERC677.sol\\\";\\n\\ninterface IWrappedSDToken is IERC677 {\\n    /**\\n     * @notice wraps tokens\\n     * @param _amount amount of unwrapped tokens to wrap\\n     */\\n    function wrap(uint _amount) external;\\n\\n    /**\\n     * @notice unwraps tokens\\n     * @param _amount amount of wrapped tokens to unwrap\\n     */\\n    function unwrap(uint _amount) external;\\n\\n    /**\\n     * @notice Returns amount of unwrapped tokens for an amount of wrapped tokens\\n     * @param _amount amount of wrapped tokens\\n     * @return amount of unwrapped tokens\\n     */\\n    function getUnderlyingByWrapped(uint _amount) external view returns (uint);\\n\\n    function sdToken() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc2fa9bf5b288a278df5114a6430bd80632ca947615d0d4d8e077758ff18eef5b\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b5060405161115b38038061115b83398101604081905261002f91610079565b6001600160a01b0392831660a052908216608052600480546001600160a01b031916919092161790556100bc565b80516001600160a01b038116811461007457600080fd5b919050565b60008060006060848603121561008e57600080fd5b6100978461005d565b92506100a56020850161005d565b91506100b36040850161005d565b90509250925092565b60805160a05161103b610120600039600081816101f5015281816102e1015281816103d5015281816106c6015281816108380152610a7301526000818161021c015281816104cb015281816105860152818161076c01526109fd015261103b6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636f4a2cd01161008c578063cd3daf9d11610066578063cd3daf9d146101bc578063f6c3372f146101c5578063f77c4791146101f0578063fc0c546a1461021757600080fd5b80636f4a2cd0146101815780638b87634714610189578063a4c0ed36146101a957600080fd5b80633ccfd60b116100c85780633ccfd60b1461013e57806349dcce931461014857806351cff8d91461015b578063632447c91461016e57600080fd5b80630660f1e8146100ef5780630e15561a146101225780630f14b4d61461012b575b600080fd5b61010f6100fd366004610e27565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b61010f60015481565b61010f610139366004610e27565b61023e565b6101466102c0565b005b61010f610156366004610e27565b6102cb565b610146610169366004610e27565b6102d6565b61014661017c366004610e27565b610351565b6101466103d1565b61010f610197366004610e27565b60026020526000908152604090205481565b6101466101b7366004610e42565b610761565b61010f60005481565b6004546101d8906001600160a01b031681565b6040516001600160a01b039091168152602001610119565b6101d87f000000000000000000000000000000000000000000000000000000000000000081565b6101d87f000000000000000000000000000000000000000000000000000000000000000081565b6004546000906001600160a01b031663da9a6cf861025b846107e0565b6040518263ffffffff1660e01b815260040161027991815260200190565b602060405180830381865afa158015610296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ba9190610ec9565b92915050565b6102c9336108c1565b565b60006102ba826107e0565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103455760405162461bcd60e51b815260206004820152600f60248201526e436f6e74726f6c6c6572206f6e6c7960881b60448201526064015b60405180910390fd5b61034e816108c1565b50565b6001600160a01b038116600090815260036020526040812054610373836102cb565b61037d9190610ef8565b905080156103b3576001600160a01b038216600090815260036020526040812080548392906103ad908490610f0f565b90915550505b50600080546001600160a01b03909216815260026020526040902055565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663817b1cd26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610431573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104559190610ec9565b116104b35760405162461bcd60e51b815260206004820152602860248201527f43616e6e6f742064697374726962757465207768656e206e6f7468696e6720696044820152671cc81cdd185ad95960c21b606482015260840161033c565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561051a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053e9190610ec9565b60048054604051630200057560e51b81526001600160a01b039182168184015260248101849052606060448201526064810192909252630307830360e41b60848301529192507f000000000000000000000000000000000000000000000000000000000000000090911690634000aea09060a4016020604051808303816000875af11580156105d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f59190610f27565b50600154600480546040516370a0823160e01b81523092810192909252600092916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c9190610ec9565b6106769190610ef8565b9050806001600082825461068a9190610f0f565b90915550610699905081610a6f565b336001600160a01b03167f3a748d40c2a4d1652cf9e6faa37c5e347459597272d02843e21e96eb956423727f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663817b1cd26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107469190610ec9565b60408051918252602082018690520160405180910390a25050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107d25760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c903a37b5b2b760511b604482015260640161033c565b6107da6103d1565b50505050565b6001600160a01b03811660009081526003602090815260408083205460029092528220548254670de0b6b3a76400009161081991610ef8565b6040516326201f6160e21b81526001600160a01b0386811660048301527f000000000000000000000000000000000000000000000000000000000000000016906398807d8490602401602060405180830381865afa15801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a39190610ec9565b6108ad9190610f49565b6108b79190610f68565b6102ba9190610f0f565b60006108cc826102cb565b60048054604051631b534d9f60e31b81529182018390529192506000916001600160a01b03169063da9a6cf890602401602060405180830381865afa158015610919573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093d9190610ec9565b90508115610a6a5761094e83610351565b6001600160a01b03831660009081526003602052604081208054849290610976908490610ef8565b92505081905550816001600082825461098f9190610ef8565b909155505060048054604051636f074d1f60e11b81529182018490526001600160a01b03169063de0e9a3e90602401600060405180830381600087803b1580156109d857600080fd5b505af11580156109ec573d6000803e3d6000fd5b50610a269250506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690508483610b7b565b826001600160a01b03167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436482604051610a6191815260200190565b60405180910390a25b505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663817b1cd26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610acf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af39190610ec9565b905060008111610b455760405162461bcd60e51b815260206004820152601960248201527f5374616b656420616d6f756e74206d757374206265203e203000000000000000604482015260640161033c565b80610b5883670de0b6b3a7640000610f49565b610b629190610f68565b600080828254610b729190610f0f565b90915550505050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610a6a92869291600091610c0b918516908490610c88565b805190915015610a6a5780806020019051810190610c299190610f27565b610a6a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161033c565b6060610c978484600085610ca1565b90505b9392505050565b606082471015610d025760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161033c565b6001600160a01b0385163b610d595760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161033c565b600080866001600160a01b03168587604051610d759190610fb6565b60006040518083038185875af1925050503d8060008114610db2576040519150601f19603f3d011682016040523d82523d6000602084013e610db7565b606091505b5091509150610dc7828286610dd2565b979650505050505050565b60608315610de1575081610c9a565b825115610df15782518084602001fd5b8160405162461bcd60e51b815260040161033c9190610fd2565b80356001600160a01b0381168114610e2257600080fd5b919050565b600060208284031215610e3957600080fd5b610c9a82610e0b565b60008060008060608587031215610e5857600080fd5b610e6185610e0b565b935060208501359250604085013567ffffffffffffffff80821115610e8557600080fd5b818701915087601f830112610e9957600080fd5b813581811115610ea857600080fd5b886020828501011115610eba57600080fd5b95989497505060200194505050565b600060208284031215610edb57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610f0a57610f0a610ee2565b500390565b60008219821115610f2257610f22610ee2565b500190565b600060208284031215610f3957600080fd5b81518015158114610c9a57600080fd5b6000816000190483118215151615610f6357610f63610ee2565b500290565b600082610f8557634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015610fa5578181015183820152602001610f8d565b838111156107da5750506000910152565b60008251610fc8818460208701610f8a565b9190910192915050565b6020815260008251806020840152610ff1816040850160208701610f8a565b601f01601f1916919091016040019291505056fea2646970667358221220e6155f40b6d795a28c37c977e97ec5e375baba885c5643a96952a62c1fb733cc64736f6c634300080f0033",
  "deployedBytecode": "",
  "devdoc": {
    "details": "rewards can only be positive (user balances can only increase)",
    "kind": "dev",
    "methods": {
      "updateReward(address)": {
        "params": {
          "_account": "account to update for*"
        }
      },
      "withdraw(address)": {
        "details": "used by PoolOwners",
        "params": {
          "_account": "account to withdraw for*"
        }
      },
      "withdrawableRewards(address)": {
        "params": {
          "_account": "account to return rewards for"
        },
        "returns": {
          "_0": "account's total unclaimed rewards*"
        }
      },
      "withdrawableRewardsWrapped(address)": {
        "params": {
          "_account": "account to return rewards for"
        },
        "returns": {
          "_0": "account's total unclaimed rewards*"
        }
      }
    },
    "title": "RewardsPoolWSD",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "distributeRewards()": {
        "notice": "distributes new rewards that have been deposited*"
      },
      "onTokenTransfer(address,uint256,bytes)": {
        "notice": "ERC677 implementation that proxies reward distribution*"
      },
      "updateReward(address)": {
        "notice": "updates an account's principal reward balance"
      },
      "withdraw()": {
        "notice": "withdraws an account's earned rewards*"
      },
      "withdraw(address)": {
        "notice": "withdraws an account's earned rewards"
      },
      "withdrawableRewards(address)": {
        "notice": "returns an account's total unwrapped withdrawable rewards (principal balance + newly earned rewards)"
      },
      "withdrawableRewardsWrapped(address)": {
        "notice": "returns an account's total wrapped withdrawable rewards (principal balance + newly earned rewards)"
      }
    },
    "notice": "Handles reward distribution for a single wrapped staking derivative token",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15803,
        "contract": "contracts/core/RewardsPoolWSD.sol:RewardsPoolWSD",
        "label": "rewardPerToken",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 15805,
        "contract": "contracts/core/RewardsPoolWSD.sol:RewardsPoolWSD",
        "label": "totalRewards",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 15809,
        "contract": "contracts/core/RewardsPoolWSD.sol:RewardsPoolWSD",
        "label": "userRewardPerTokenPaid",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 15813,
        "contract": "contracts/core/RewardsPoolWSD.sol:RewardsPoolWSD",
        "label": "userRewards",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 16100,
        "contract": "contracts/core/RewardsPoolWSD.sol:RewardsPoolWSD",
        "label": "wsdToken",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IWrappedSDToken)19936"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IWrappedSDToken)19936": {
        "encoding": "inplace",
        "label": "contract IWrappedSDToken",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}