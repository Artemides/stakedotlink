{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x8B7F4801e684488e058f865931647d283228F4B7",
      "txHash": "0xf6114c58fab74ef74dbc444a4be8b16c49854a91ebef66f2b5df87e447540dd3",
      "kind": "uups"
    },
    {
      "address": "0x50Fa507a91d86B002D3290CcAA367200d47aaD2B",
      "txHash": "0x2edae38660096a8c457a29422afe1a575316b43f8d4c14dcbcbec89f349f2ef6",
      "kind": "uups"
    },
    {
      "address": "0x390A79DbDFBA9ABD8c9d5945732e99b74a0eB2D8",
      "txHash": "0x1df8c0e0e5ccc362b67bc9e68a6b67b9fc33f4738784ab4d8172d142b80329d8",
      "kind": "uups"
    },
    {
      "address": "0xC62Db887e3B546831bdFE662b325F3E254C9f335",
      "txHash": "0xa2329e166f0b15daeba71a5e09aa5abd1787808b19f2dea3ef172bcae4c9864f",
      "kind": "uups"
    },
    {
      "address": "0xeB94f6f9A28DA605089d361cD0Abe580817C3516",
      "txHash": "0xbb5d1e0cc0112119a8f3ed8240ad5034095478c7fddafb1d69ac68ae712ec42f",
      "kind": "uups"
    },
    {
      "address": "0xE90240992c7E35a32Ba65803Ca47082C0fDd6108",
      "txHash": "0x3d2f4d30a7db56dab363f835822bb2afd36bd523135890ddfa08be833868c3e7",
      "kind": "uups"
    },
    {
      "address": "0x3aD797AeDE5004aBDDCBA18Ff973A74c766893Cc",
      "txHash": "0x98b74bf8abe0d3d8580fbb32669230494561abb99047f3fe15f71fd11adccbe5",
      "kind": "uups"
    }
  ],
  "impls": {
    "8d2e05a69a71a70957168f36bc0a3963051fd5ea7a92418dd49c600d5ec20ec2": {
      "address": "0x926DB25e69Fef78026358bD1A37D05CA8b780caC",
      "txHash": "0x2f6178751d4e836aa6212e89b5068fd5a0dbf8f41c18b0ef4b26c4d0364fc649",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "tokenPools",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_contract(IRewardsPool)20816)",
            "contract": "RewardsPoolController",
            "src": "contracts/core/base/RewardsPoolController.sol:19"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_address)dyn_storage",
            "contract": "RewardsPoolController",
            "src": "contracts/core/base/RewardsPoolController.sol:20"
          },
          {
            "label": "rewardRedirects",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_address)",
            "contract": "RewardsPoolController",
            "src": "contracts/core/base/RewardsPoolController.sol:22"
          },
          {
            "label": "redirectedStakes",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "RewardsPoolController",
            "src": "contracts/core/base/RewardsPoolController.sol:23"
          },
          {
            "label": "redirectApprovals",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_address)",
            "contract": "RewardsPoolController",
            "src": "contracts/core/base/RewardsPoolController.sol:24"
          },
          {
            "label": "allowanceToken",
            "offset": 0,
            "slot": "256",
            "type": "t_contract(IERC20Upgradeable)3713",
            "contract": "DelegatorPool",
            "src": "contracts/core/DelegatorPool.sol:21"
          },
          {
            "label": "poolRouter",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IPoolRouter)20793",
            "contract": "DelegatorPool",
            "src": "contracts/core/DelegatorPool.sol:22"
          },
          {
            "label": "feeCurve",
            "offset": 0,
            "slot": "258",
            "type": "t_contract(IFeeCurve)20771",
            "contract": "DelegatorPool",
            "src": "contracts/core/DelegatorPool.sol:23"
          },
          {
            "label": "vestingSchedules",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_struct(VestingSchedule)14229_storage)",
            "contract": "DelegatorPool",
            "src": "contracts/core/DelegatorPool.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)3713": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFeeCurve)20771": {
            "label": "contract IFeeCurve",
            "numberOfBytes": "20"
          },
          "t_contract(IPoolRouter)20793": {
            "label": "contract IPoolRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsPool)20816": {
            "label": "contract IRewardsPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_contract(IRewardsPool)20816)": {
            "label": "mapping(address => contract IRewardsPool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(VestingSchedule)14229_storage)": {
            "label": "mapping(address => struct DelegatorPool.VestingSchedule)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(VestingSchedule)14229_storage": {
            "label": "struct DelegatorPool.VestingSchedule",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "durationSeconds",
                "type": "t_uint64",
                "offset": 8,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "65079894002b5e00e973f421478ad953385fae98991f901ee6c6c023a5827f84": {
      "address": "0x23fc4f91B452D845A07e65CF6331B9B4a9ca95Ec",
      "txHash": "0x06348348adf8b66844684f1bc9ce7d380295765862d678cd29baf1b257fca9ed",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "allowanceToken",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20Upgradeable)3713",
            "contract": "PoolRouter",
            "src": "contracts/core/PoolRouter.sol:35"
          },
          {
            "label": "delegatorPool",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IDelegatorPool)20732",
            "contract": "PoolRouter",
            "src": "contracts/core/PoolRouter.sol:36"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_bytes32,t_struct(Pool)15503_storage)",
            "contract": "PoolRouter",
            "src": "contracts/core/PoolRouter.sol:38"
          },
          {
            "label": "poolCountByToken",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint16)",
            "contract": "PoolRouter",
            "src": "contracts/core/PoolRouter.sol:39"
          },
          {
            "label": "poolCount",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "PoolRouter",
            "src": "contracts/core/PoolRouter.sol:40"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoolRouter",
            "src": "contracts/core/PoolRouter.sol:42"
          },
          {
            "label": "wrappedETH",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "PoolRouter",
            "src": "contracts/core/PoolRouter.sol:43"
          },
          {
            "label": "reservedMultiplier",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "PoolRouter",
            "src": "contracts/core/PoolRouter.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDelegatorPool)20732": {
            "label": "contract IDelegatorPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)3713": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakingPool)20921": {
            "label": "contract IStakingPool",
            "numberOfBytes": "20"
          },
          "t_enum(PoolStatus)15491": {
            "label": "enum PoolRouter.PoolStatus",
            "members": [
              "OPEN",
              "DRAINING",
              "CLOSED"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Pool)15503_storage)": {
            "label": "mapping(bytes32 => struct PoolRouter.Pool)",
            "numberOfBytes": "32"
          },
          "t_struct(Pool)15503_storage": {
            "label": "struct PoolRouter.Pool",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20Upgradeable)3713",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakingPool",
                "type": "t_contract(IStakingPool)20921",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(PoolStatus)15491",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reservedModeActive",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1863bb10c2ed4b989cb728844b3dca14a463c628b27ef75b1744c53dd425b447": {
      "address": "0xD31B297aDDc6714859985824F132bdF84D99d6B1",
      "txHash": "0xe9062d3bbeee6535f5f6775d8dfd5216c518a0aa0fa9796f3f451f661f061788",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20Upgradeable)3713",
            "contract": "StakingRewardsPool",
            "src": "contracts/core/base/StakingRewardsPool.sol:15"
          },
          {
            "label": "shares",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingRewardsPool",
            "src": "contracts/core/base/StakingRewardsPool.sol:17"
          },
          {
            "label": "totalShares",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "StakingRewardsPool",
            "src": "contracts/core/base/StakingRewardsPool.sol:18"
          },
          {
            "label": "strategies",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_address)dyn_storage",
            "contract": "StakingPool",
            "src": "contracts/core/StakingPool.sol:23"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "StakingPool",
            "src": "contracts/core/StakingPool.sol:24"
          },
          {
            "label": "liquidityBuffer",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "StakingPool",
            "src": "contracts/core/StakingPool.sol:25"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_struct(Fee)17621_storage)dyn_storage",
            "contract": "StakingPool",
            "src": "contracts/core/StakingPool.sol:27"
          },
          {
            "label": "poolRouter",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "StakingPool",
            "src": "contracts/core/StakingPool.sol:29"
          },
          {
            "label": "delegatorPool",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "StakingPool",
            "src": "contracts/core/StakingPool.sol:30"
          },
          {
            "label": "poolIndex",
            "offset": 20,
            "slot": "259",
            "type": "t_uint16",
            "contract": "StakingPool",
            "src": "contracts/core/StakingPool.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Fee)17621_storage)dyn_storage": {
            "label": "struct StakingPool.Fee[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)3713": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Fee)17621_storage": {
            "label": "struct StakingPool.Fee",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "basisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "44705745154c9c8feca628aafa6136b7077abdc5bd2838458444790567520b63": {
      "address": "0x72427098DA873a0292602F673dbd9BB966647f18",
      "txHash": "0xfa6a19cf74ac71888168f883d007a8cb052767261591d92a9c84c721855e7094",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20Upgradeable)3713",
            "contract": "Strategy",
            "src": "contracts/core/base/Strategy.sol:17"
          },
          {
            "label": "stakingPool",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IStakingPool)20921",
            "contract": "Strategy",
            "src": "contracts/core/base/Strategy.sol:18"
          },
          {
            "label": "maxDeposits",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "StrategyMock",
            "src": "contracts/core/test/StrategyMock.sol:17"
          },
          {
            "label": "minDeposits",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "StrategyMock",
            "src": "contracts/core/test/StrategyMock.sol:18"
          },
          {
            "label": "totalDeposits",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "StrategyMock",
            "src": "contracts/core/test/StrategyMock.sol:20"
          },
          {
            "label": "feeBasisPoints",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "StrategyMock",
            "src": "contracts/core/test/StrategyMock.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)3713": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakingPool)20921": {
            "label": "contract IStakingPool",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0991393c2c6540018505bcce1bfde6367181368da90979af4bd8ff3a0c019e6a": {
      "address": "0xC9C3645EF2299e992827F2E88c3e68855efB5780",
      "txHash": "0xc213a51c442d1944acda4ff534c67ea61fd608fe6271c5b47d6cefcf91238b3d",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "tokenPools",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_contract(IRewardsPool)16252)",
            "contract": "RewardsPoolController",
            "src": "contracts/core/base/RewardsPoolController.sol:19"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_address)dyn_storage",
            "contract": "RewardsPoolController",
            "src": "contracts/core/base/RewardsPoolController.sol:20"
          },
          {
            "label": "rewardRedirects",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_address)",
            "contract": "RewardsPoolController",
            "src": "contracts/core/base/RewardsPoolController.sol:22"
          },
          {
            "label": "redirectedStakes",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "RewardsPoolController",
            "src": "contracts/core/base/RewardsPoolController.sol:23"
          },
          {
            "label": "redirectApprovals",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_address)",
            "contract": "RewardsPoolController",
            "src": "contracts/core/base/RewardsPoolController.sol:24"
          },
          {
            "label": "allowanceToken",
            "offset": 0,
            "slot": "256",
            "type": "t_contract(IERC20Upgradeable)3713",
            "contract": "DelegatorPool",
            "src": "contracts/core/DelegatorPool.sol:20"
          },
          {
            "label": "poolRouter",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IPoolRouter)16229",
            "contract": "DelegatorPool",
            "src": "contracts/core/DelegatorPool.sol:21"
          },
          {
            "label": "feeCurve",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "DelegatorPool",
            "src": "contracts/core/DelegatorPool.sol:22"
          },
          {
            "label": "vestingSchedules",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_struct(VestingSchedule)9873_storage)",
            "contract": "DelegatorPool",
            "src": "contracts/core/DelegatorPool.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)3713": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IPoolRouter)16229": {
            "label": "contract IPoolRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsPool)16252": {
            "label": "contract IRewardsPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_contract(IRewardsPool)16252)": {
            "label": "mapping(address => contract IRewardsPool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(VestingSchedule)9873_storage)": {
            "label": "mapping(address => struct DelegatorPool.VestingSchedule)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(VestingSchedule)9873_storage": {
            "label": "struct DelegatorPool.VestingSchedule",
            "members": [
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "durationSeconds",
                "type": "t_uint64",
                "offset": 8,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "19fee87572ed46fc9052248a4bc195dbfb89808b7d1c23a57fa8f9586a1182dc": {
      "address": "0x3B01ef0Cf9DADeBEa5071eBF2A0141c1C4F56F19",
      "txHash": "0x2e89c401a994fa0cd421f68440619973890b7802123ca6fda9c71aaf1c35ea49",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "allowanceToken",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20Upgradeable)3713",
            "contract": "PoolRouter",
            "src": "contracts/core/PoolRouter.sol:35"
          },
          {
            "label": "delegatorPool",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IDelegatorPool)16187",
            "contract": "PoolRouter",
            "src": "contracts/core/PoolRouter.sol:36"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_bytes32,t_struct(Pool)11073_storage)",
            "contract": "PoolRouter",
            "src": "contracts/core/PoolRouter.sol:38"
          },
          {
            "label": "poolCountByToken",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint16)",
            "contract": "PoolRouter",
            "src": "contracts/core/PoolRouter.sol:39"
          },
          {
            "label": "poolCount",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "PoolRouter",
            "src": "contracts/core/PoolRouter.sol:40"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoolRouter",
            "src": "contracts/core/PoolRouter.sol:42"
          },
          {
            "label": "wrappedETH",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "PoolRouter",
            "src": "contracts/core/PoolRouter.sol:43"
          },
          {
            "label": "reservedMultiplier",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "PoolRouter",
            "src": "contracts/core/PoolRouter.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDelegatorPool)16187": {
            "label": "contract IDelegatorPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)3713": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakingPool)16362": {
            "label": "contract IStakingPool",
            "numberOfBytes": "20"
          },
          "t_enum(PoolStatus)11061": {
            "label": "enum PoolRouter.PoolStatus",
            "members": [
              "OPEN",
              "DRAINING",
              "CLOSED"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Pool)11073_storage)": {
            "label": "mapping(bytes32 => struct PoolRouter.Pool)",
            "numberOfBytes": "32"
          },
          "t_struct(Pool)11073_storage": {
            "label": "struct PoolRouter.Pool",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20Upgradeable)3713",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakingPool",
                "type": "t_contract(IStakingPool)16362",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(PoolStatus)11061",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reservedModeActive",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9b703e7b2137141a6682d27e8d21460efe5a3fbba343781535a2aeb8abdff63c": {
      "address": "0xDF706cfaaF517d62237FE1d1e815f3c0438786bA",
      "txHash": "0x44e4b1b09eb1b549321b7127b34112fe29a51113e3d6ec0439bfe4015dbb1a2b",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20Upgradeable)3713",
            "contract": "StakingRewardsPool",
            "src": "contracts/core/base/StakingRewardsPool.sol:15"
          },
          {
            "label": "shares",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingRewardsPool",
            "src": "contracts/core/base/StakingRewardsPool.sol:17"
          },
          {
            "label": "totalShares",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "StakingRewardsPool",
            "src": "contracts/core/base/StakingRewardsPool.sol:18"
          },
          {
            "label": "strategies",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_address)dyn_storage",
            "contract": "StakingPool",
            "src": "contracts/core/StakingPool.sol:23"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "StakingPool",
            "src": "contracts/core/StakingPool.sol:24"
          },
          {
            "label": "liquidityBuffer",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "StakingPool",
            "src": "contracts/core/StakingPool.sol:25"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_struct(Fee)13175_storage)dyn_storage",
            "contract": "StakingPool",
            "src": "contracts/core/StakingPool.sol:27"
          },
          {
            "label": "poolRouter",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "StakingPool",
            "src": "contracts/core/StakingPool.sol:29"
          },
          {
            "label": "delegatorPool",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "StakingPool",
            "src": "contracts/core/StakingPool.sol:30"
          },
          {
            "label": "poolIndex",
            "offset": 20,
            "slot": "259",
            "type": "t_uint16",
            "contract": "StakingPool",
            "src": "contracts/core/StakingPool.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Fee)13175_storage)dyn_storage": {
            "label": "struct StakingPool.Fee[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)3713": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Fee)13175_storage": {
            "label": "struct StakingPool.Fee",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "basisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
